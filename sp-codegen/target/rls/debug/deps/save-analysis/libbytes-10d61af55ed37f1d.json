{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12","program":"/home/endre/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","bytes","/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=10d61af55ed37f1d","-C","extra-filename=-10d61af55ed37f1d","--out-dir","/home/endre/sp-rust/sp-codegen/target/rls/debug/deps","-L","dependency=/home/endre/sp-rust/sp-codegen/target/rls/debug/deps","--extern","byteorder=/home/endre/sp-rust/sp-codegen/target/rls/debug/deps/libbyteorder-0e4f7bc7c832062d.rmeta","--extern","iovec=/home/endre/sp-rust/sp-codegen/target/rls/debug/deps/libiovec-da8f2753a0de8079.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/endre/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/endre/sp-rust/sp-codegen/target/rls/debug/deps/libbytes-10d61af55ed37f1d.rmeta"},"prelude":{"crate_id":{"name":"bytes","disambiguator":[7806756736940257899,17359123478827918859]},"crate_root":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src","external_crates":[{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3103785602532093942,17390144583497853382]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[3916277366462804126,4478459115610208312]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[1713477286964588179,15844277248566971785]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13012427356130990406,14608520140697239788]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6447241057134257354,1413806012037948949]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4393201617425879462,3310437476178738552]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7079830315103279809,4606718705203350064]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5206394019873543407,10667910451093706265]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[9386824491997906070,17212049238264027415]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16927035401729681780,12437521449932722366]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/lib.rs","num":11,"id":{"name":"backtrace","disambiguator":[11652895559356135055,9563436424588767888]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[16517787911197841201,14116661015581648310]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/lib.rs","num":13,"id":{"name":"backtrace_sys","disambiguator":[5448928475534237502,8623809376237663283]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[9897490559936190142,12325087316115451923]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/lib.rs","num":15,"id":{"name":"byteorder","disambiguator":[10872931579835539693,12789071159449939682]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/lib.rs","num":16,"id":{"name":"iovec","disambiguator":[10311985176323717883,9739965849064247143]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/lib.rs","num":17,"id":{"name":"libc","disambiguator":[16951308386329787197,9238021607635720415]}}],"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/lib.rs","byte_start":0,"byte_end":3310,"line_start":1,"line_end":105,"column_start":1,"column_end":12}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":33},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/mod.rs","byte_start":4188,"byte_end":4191,"line_start":30,"line_end":30,"column_start":20,"column_end":23},"alias_span":null,"name":"Buf","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":141},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/mod.rs","byte_start":4216,"byte_end":4222,"line_start":31,"line_end":31,"column_start":24,"column_end":30},"alias_span":null,"name":"BufMut","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":261},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/mod.rs","byte_start":4248,"byte_end":4255,"line_start":32,"line_end":32,"column_start":25,"column_end":32},"alias_span":null,"name":"FromBuf","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":895},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/mod.rs","byte_start":4278,"byte_end":4283,"line_start":33,"line_end":33,"column_start":22,"column_end":27},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":307},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/mod.rs","byte_start":4309,"byte_end":4316,"line_start":34,"line_end":34,"column_start":25,"column_end":32},"alias_span":null,"name":"IntoBuf","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":904},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/mod.rs","byte_start":4338,"byte_end":4342,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":910},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/mod.rs","byte_start":4366,"byte_end":4372,"line_start":36,"line_end":36,"column_start":23,"column_end":29},"alias_span":null,"name":"Reader","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":916},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/mod.rs","byte_start":4394,"byte_end":4398,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":923},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/mod.rs","byte_start":4422,"byte_end":4428,"line_start":38,"line_end":38,"column_start":23,"column_end":29},"alias_span":null,"name":"Writer","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":33},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/lib.rs","byte_start":2867,"byte_end":2870,"line_start":79,"line_end":79,"column_start":5,"column_end":8},"alias_span":null,"name":"Buf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":141},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/lib.rs","byte_start":2876,"byte_end":2882,"line_start":80,"line_end":80,"column_start":5,"column_end":11},"alias_span":null,"name":"BufMut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":307},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/lib.rs","byte_start":2888,"byte_end":2895,"line_start":81,"line_end":81,"column_start":5,"column_end":12},"alias_span":null,"name":"IntoBuf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":910},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/lib.rs","byte_start":2997,"byte_end":3003,"line_start":86,"line_end":86,"column_start":5,"column_end":11},"alias_span":null,"name":"Reader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":923},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/lib.rs","byte_start":3009,"byte_end":3015,"line_start":87,"line_end":87,"column_start":5,"column_end":11},"alias_span":null,"name":"Writer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":916},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/lib.rs","byte_start":3021,"byte_end":3025,"line_start":88,"line_end":88,"column_start":5,"column_end":9},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":483},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/lib.rs","byte_start":3069,"byte_end":3074,"line_start":93,"line_end":93,"column_start":17,"column_end":22},"alias_span":null,"name":"Bytes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":485},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/lib.rs","byte_start":3076,"byte_end":3084,"line_start":93,"line_end":93,"column_start":24,"column_end":32},"alias_span":null,"name":"BytesMut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":184},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/lib.rs","byte_start":3122,"byte_end":3131,"line_start":96,"line_end":96,"column_start":21,"column_end":30},"alias_span":null,"name":"ByteOrder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":328},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/lib.rs","byte_start":3133,"byte_end":3142,"line_start":96,"line_end":96,"column_start":32,"column_end":41},"alias_span":null,"name":"BigEndian","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":345},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/lib.rs","byte_start":3144,"byte_end":3156,"line_start":96,"line_end":96,"column_start":43,"column_end":55},"alias_span":null,"name":"LittleEndian","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/lib.rs","byte_start":0,"byte_end":3310,"line_start":1,"line_end":105,"column_start":1,"column_end":12},"name":"","qualname":"::","value":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":443},{"krate":0,"index":447},{"krate":0,"index":451},{"krate":0,"index":859},{"krate":0,"index":868},{"krate":0,"index":871}],"decl_id":null,"docs":" Provides abstractions for working with bytes.","sig":null,"attributes":[{"value":"deny(warnings, missing_docs, missing_debug_implementations)","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/lib.rs","byte_start":2669,"byte_end":2732,"line_start":71,"line_end":71,"column_start":1,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"buf","qualname":"::buf","value":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/mod.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":127},{"krate":0,"index":254},{"krate":0,"index":273},{"krate":0,"index":303},{"krate":0,"index":357},{"krate":0,"index":373},{"krate":0,"index":393},{"krate":0,"index":411},{"krate":0,"index":418},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442}],"decl_id":null,"docs":" Utilities for working with buffers.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":33},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":6619,"byte_end":6622,"line_start":64,"line_end":64,"column_start":11,"column_end":14},"name":"Buf","qualname":"::buf::buf::Buf","value":"Buf","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100}],"decl_id":null,"docs":" Read bytes from a buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":7406,"byte_end":7415,"line_start":91,"line_end":91,"column_start":8,"column_end":17},"name":"remaining","qualname":"::buf::buf::Buf::remaining","value":"fn (&self) -> usize","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Returns the number of bytes between the current position and the end of\n the buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":8294,"byte_end":8299,"line_start":120,"line_end":120,"column_start":8,"column_end":13},"name":"bytes","qualname":"::buf::buf::Buf::bytes","value":"fn (&self) -> &[u8]","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Returns a slice starting at the current position and of length between 0\n and `Buf::remaining()`. Note that this *can* return shorter slice (this allows\n non-continuous internal representation).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":9625,"byte_end":9634,"line_start":149,"line_end":149,"column_start":8,"column_end":17},"name":"bytes_vec","qualname":"::buf::buf::Buf::bytes_vec","value":"fn <'a> (&'a self, dst: &mut [&'a IoVec]) -> usize","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Fills `dst` with potentially multiple slices starting at `self`'s\n current position.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":10794,"byte_end":10801,"line_start":193,"line_end":193,"column_start":8,"column_end":15},"name":"advance","qualname":"::buf::buf::Buf::advance","value":"fn (&mut self, cnt: usize) -> ()","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Advance the internal cursor of the Buf","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":11241,"byte_end":11254,"line_start":213,"line_end":213,"column_start":8,"column_end":21},"name":"has_remaining","qualname":"::buf::buf::Buf::has_remaining","value":"fn (&self) -> bool","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Returns true if there are any more bytes to consume","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":11911,"byte_end":11924,"line_start":239,"line_end":239,"column_start":8,"column_end":21},"name":"copy_to_slice","qualname":"::buf::buf::Buf::copy_to_slice","value":"fn (&mut self, dst: &mut [u8]) -> ()","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Copies bytes from `self` into `dst`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":12839,"byte_end":12845,"line_start":278,"line_end":278,"column_start":8,"column_end":14},"name":"get_u8","qualname":"::buf::buf::Buf::get_u8","value":"fn (&mut self) -> u8","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Gets an unsigned 8 bit integer from `self`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":13410,"byte_end":13416,"line_start":302,"line_end":302,"column_start":8,"column_end":14},"name":"get_i8","qualname":"::buf::buf::Buf::get_i8","value":"fn (&mut self) -> i8","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Gets a signed 8 bit integer from `self`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":13642,"byte_end":13649,"line_start":311,"line_end":311,"column_start":8,"column_end":15},"name":"get_u16","qualname":"::buf::buf::Buf::get_u16","value":"fn <T> (&mut self) -> u16","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"use get_u16_be or get_u16_le\")","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":13584,"byte_end":13634,"line_start":310,"line_end":310,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":14274,"byte_end":14284,"line_start":334,"line_end":334,"column_start":8,"column_end":18},"name":"get_u16_be","qualname":"::buf::buf::Buf::get_u16_be","value":"fn (&mut self) -> u16","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Gets an unsigned 16 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":14839,"byte_end":14849,"line_start":355,"line_end":355,"column_start":8,"column_end":18},"name":"get_u16_le","qualname":"::buf::buf::Buf::get_u16_le","value":"fn (&mut self) -> u16","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Gets an unsigned 16 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":15014,"byte_end":15021,"line_start":361,"line_end":361,"column_start":8,"column_end":15},"name":"get_i16","qualname":"::buf::buf::Buf::get_i16","value":"fn <T> (&mut self) -> i16","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"use get_i16_be or get_i16_le\")","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":14956,"byte_end":15006,"line_start":360,"line_end":360,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":15643,"byte_end":15653,"line_start":384,"line_end":384,"column_start":8,"column_end":18},"name":"get_i16_be","qualname":"::buf::buf::Buf::get_i16_be","value":"fn (&mut self) -> i16","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Gets a signed 16 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":16205,"byte_end":16215,"line_start":405,"line_end":405,"column_start":8,"column_end":18},"name":"get_i16_le","qualname":"::buf::buf::Buf::get_i16_le","value":"fn (&mut self) -> i16","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Gets a signed 16 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":16380,"byte_end":16387,"line_start":411,"line_end":411,"column_start":8,"column_end":15},"name":"get_u32","qualname":"::buf::buf::Buf::get_u32","value":"fn <T> (&mut self) -> u32","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"use get_u32_be or get_u32_le\")","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":16322,"byte_end":16372,"line_start":410,"line_end":410,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":17028,"byte_end":17038,"line_start":434,"line_end":434,"column_start":8,"column_end":18},"name":"get_u32_be","qualname":"::buf::buf::Buf::get_u32_be","value":"fn (&mut self) -> u32","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Gets an unsigned 32 bit integer from `self` in the big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":17609,"byte_end":17619,"line_start":455,"line_end":455,"column_start":8,"column_end":18},"name":"get_u32_le","qualname":"::buf::buf::Buf::get_u32_le","value":"fn (&mut self) -> u32","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Gets an unsigned 32 bit integer from `self` in the little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":17784,"byte_end":17791,"line_start":461,"line_end":461,"column_start":8,"column_end":15},"name":"get_i32","qualname":"::buf::buf::Buf::get_i32","value":"fn <T> (&mut self) -> i32","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"use get_i32_be or get_i32_le\")","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":17726,"byte_end":17776,"line_start":460,"line_end":460,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":18425,"byte_end":18435,"line_start":484,"line_end":484,"column_start":8,"column_end":18},"name":"get_i32_be","qualname":"::buf::buf::Buf::get_i32_be","value":"fn (&mut self) -> i32","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Gets a signed 32 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":18999,"byte_end":19009,"line_start":505,"line_end":505,"column_start":8,"column_end":18},"name":"get_i32_le","qualname":"::buf::buf::Buf::get_i32_le","value":"fn (&mut self) -> i32","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Gets a signed 32 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":19174,"byte_end":19181,"line_start":511,"line_end":511,"column_start":8,"column_end":15},"name":"get_u64","qualname":"::buf::buf::Buf::get_u64","value":"fn <T> (&mut self) -> u64","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"use get_u64_be or get_u64_le\")","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":19116,"byte_end":19166,"line_start":510,"line_end":510,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":19842,"byte_end":19852,"line_start":534,"line_end":534,"column_start":8,"column_end":18},"name":"get_u64_be","qualname":"::buf::buf::Buf::get_u64_be","value":"fn (&mut self) -> u64","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Gets an unsigned 64 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":20443,"byte_end":20453,"line_start":555,"line_end":555,"column_start":8,"column_end":18},"name":"get_u64_le","qualname":"::buf::buf::Buf::get_u64_le","value":"fn (&mut self) -> u64","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Gets an unsigned 64 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":20618,"byte_end":20625,"line_start":561,"line_end":561,"column_start":8,"column_end":15},"name":"get_i64","qualname":"::buf::buf::Buf::get_i64","value":"fn <T> (&mut self) -> i64","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"use get_i64_be or get_i64_le\")","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":20560,"byte_end":20610,"line_start":560,"line_end":560,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":21283,"byte_end":21293,"line_start":584,"line_end":584,"column_start":8,"column_end":18},"name":"get_i64_be","qualname":"::buf::buf::Buf::get_i64_be","value":"fn (&mut self) -> i64","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Gets a signed 64 bit integer from `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":21881,"byte_end":21891,"line_start":605,"line_end":605,"column_start":8,"column_end":18},"name":"get_i64_le","qualname":"::buf::buf::Buf::get_i64_le","value":"fn (&mut self) -> i64","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Gets a signed 64 bit integer from `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":25028,"byte_end":25036,"line_start":703,"line_end":703,"column_start":8,"column_end":16},"name":"get_uint","qualname":"::buf::buf::Buf::get_uint","value":"fn <T> (&mut self, nbytes: usize) -> u64","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"use get_uint_be or get_uint_le\")","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":24968,"byte_end":25020,"line_start":702,"line_end":702,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":25733,"byte_end":25744,"line_start":726,"line_end":726,"column_start":8,"column_end":19},"name":"get_uint_be","qualname":"::buf::buf::Buf::get_uint_be","value":"fn (&mut self, nbytes: usize) -> u64","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Gets an unsigned n-byte integer from `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":26338,"byte_end":26349,"line_start":747,"line_end":747,"column_start":8,"column_end":19},"name":"get_uint_le","qualname":"::buf::buf::Buf::get_uint_le","value":"fn (&mut self, nbytes: usize) -> u64","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Gets an unsigned n-byte integer from `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":26538,"byte_end":26545,"line_start":753,"line_end":753,"column_start":8,"column_end":15},"name":"get_int","qualname":"::buf::buf::Buf::get_int","value":"fn <T> (&mut self, nbytes: usize) -> i64","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"use get_int_be or get_int_le\")","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":26480,"byte_end":26530,"line_start":752,"line_end":752,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":27224,"byte_end":27234,"line_start":776,"line_end":776,"column_start":8,"column_end":18},"name":"get_int_be","qualname":"::buf::buf::Buf::get_int_be","value":"fn (&mut self, nbytes: usize) -> i64","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Gets a signed n-byte integer from `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":27823,"byte_end":27833,"line_start":797,"line_end":797,"column_start":8,"column_end":18},"name":"get_int_le","qualname":"::buf::buf::Buf::get_int_le","value":"fn (&mut self, nbytes: usize) -> i64","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Gets a signed n-byte integer from `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":28021,"byte_end":28028,"line_start":803,"line_end":803,"column_start":8,"column_end":15},"name":"get_f32","qualname":"::buf::buf::Buf::get_f32","value":"fn <T> (&mut self) -> f32","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"use get_f32_be or get_f32_le\")","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":27963,"byte_end":28013,"line_start":802,"line_end":802,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":28702,"byte_end":28712,"line_start":827,"line_end":827,"column_start":8,"column_end":18},"name":"get_f32_be","qualname":"::buf::buf::Buf::get_f32_be","value":"fn (&mut self) -> f32","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Gets an IEEE754 single-precision (4 bytes) floating point number from\n `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":29316,"byte_end":29326,"line_start":849,"line_end":849,"column_start":8,"column_end":18},"name":"get_f32_le","qualname":"::buf::buf::Buf::get_f32_le","value":"fn (&mut self) -> f32","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Gets an IEEE754 single-precision (4 bytes) floating point number from\n `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":29491,"byte_end":29498,"line_start":855,"line_end":855,"column_start":8,"column_end":15},"name":"get_f64","qualname":"::buf::buf::Buf::get_f64","value":"fn <T> (&mut self) -> f64","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"use get_f64_be or get_f64_le\")","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":29433,"byte_end":29483,"line_start":854,"line_end":854,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":30188,"byte_end":30198,"line_start":879,"line_end":879,"column_start":8,"column_end":18},"name":"get_f64_be","qualname":"::buf::buf::Buf::get_f64_be","value":"fn (&mut self) -> f64","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Gets an IEEE754 double-precision (8 bytes) floating point number from\n `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":30818,"byte_end":30828,"line_start":901,"line_end":901,"column_start":8,"column_end":18},"name":"get_f64_le","qualname":"::buf::buf::Buf::get_f64_le","value":"fn (&mut self) -> f64","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Gets an IEEE754 double-precision (8 bytes) floating point number from\n `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":31453,"byte_end":31460,"line_start":922,"line_end":922,"column_start":8,"column_end":15},"name":"collect","qualname":"::buf::buf::Buf::collect","value":"fn <B> (self) -> B","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Transforms a `Buf` into a concrete buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":32181,"byte_end":32185,"line_start":951,"line_end":951,"column_start":8,"column_end":12},"name":"take","qualname":"::buf::buf::Buf::take","value":"fn (self, limit: usize) -> Take<Self>","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Creates an adaptor which will read at most `limit` bytes from `self`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":32879,"byte_end":32884,"line_start":974,"line_end":974,"column_start":8,"column_end":13},"name":"chain","qualname":"::buf::buf::Buf::chain","value":"fn <U> (self, next: U) -> Chain<Self, U::Buf>","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Creates an adaptor which will chain this buffer with another.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":33713,"byte_end":33719,"line_start":1004,"line_end":1004,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::buf::buf::Buf::by_ref","value":"fn (&mut self) -> &mut Self","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Creates a \"by reference\" adaptor for this instance of `Buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":34544,"byte_end":34550,"line_start":1031,"line_end":1031,"column_start":8,"column_end":14},"name":"reader","qualname":"::buf::buf::Buf::reader","value":"fn (self) -> Reader<Self>","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Creates an adaptor which implements the `Read` trait for `self`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":35089,"byte_end":35093,"line_start":1050,"line_end":1050,"column_start":8,"column_end":12},"name":"iter","qualname":"::buf::buf::Buf::iter","value":"fn (self) -> Iter<Self>","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Returns an iterator over the bytes contained by the buffer.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":141},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":38004,"byte_end":38010,"line_start":27,"line_end":27,"column_start":11,"column_end":17},"name":"BufMut","qualname":"::buf::buf_mut::BufMut","value":"BufMut","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":157},{"krate":0,"index":159},{"krate":0,"index":161},{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":171},{"krate":0,"index":173},{"krate":0,"index":175},{"krate":0,"index":178},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":185},{"krate":0,"index":187},{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":196},{"krate":0,"index":199},{"krate":0,"index":201},{"krate":0,"index":203},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":213},{"krate":0,"index":215},{"krate":0,"index":217},{"krate":0,"index":220},{"krate":0,"index":222},{"krate":0,"index":224},{"krate":0,"index":225}],"decl_id":null,"docs":" A trait for values that provide sequential write access to bytes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":38874,"byte_end":38887,"line_start":54,"line_end":54,"column_start":8,"column_end":21},"name":"remaining_mut","qualname":"::buf::buf_mut::BufMut::remaining_mut","value":"fn (&self) -> usize","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" Returns the number of bytes that can be written from the current\n position until the end of the buffer is reached.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":40188,"byte_end":40199,"line_start":98,"line_end":98,"column_start":15,"column_end":26},"name":"advance_mut","qualname":"::buf::buf_mut::BufMut::advance_mut","value":"fn (&mut self, cnt: usize) -> ()","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" Advance the internal cursor of the BufMut","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":40697,"byte_end":40714,"line_start":119,"line_end":119,"column_start":8,"column_end":25},"name":"has_remaining_mut","qualname":"::buf::buf_mut::BufMut::has_remaining_mut","value":"fn (&self) -> bool","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" Returns true if there is space in `self` for more bytes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":42125,"byte_end":42134,"line_start":162,"line_end":162,"column_start":15,"column_end":24},"name":"bytes_mut","qualname":"::buf::buf_mut::BufMut::bytes_mut","value":"fn (&mut self) -> &mut [u8]","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" Returns a mutable slice starting at the current BufMut position and of\n length between 0 and `BufMut::remaining_mut()`. Note that this *can* be shorter than the\n whole remainder of the buffer (this allows non-continuous implementation).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":43523,"byte_end":43536,"line_start":192,"line_end":192,"column_start":15,"column_end":28},"name":"bytes_vec_mut","qualname":"::buf::buf_mut::BufMut::bytes_vec_mut","value":"fn <'a> (&'a mut self, dst: &mut [&'a mut IoVec]) -> usize","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" Fills `dst` with potentially multiple mutable slices starting at `self`'s\n current position.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":44284,"byte_end":44287,"line_start":225,"line_end":225,"column_start":8,"column_end":11},"name":"put","qualname":"::buf::buf_mut::BufMut::put","value":"fn <T> (&mut self, src: T) -> ()","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" Transfer bytes into `self` from `src` and advance the cursor by the\n number of bytes written.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":45447,"byte_end":45456,"line_start":271,"line_end":271,"column_start":8,"column_end":17},"name":"put_slice","qualname":"::buf::buf_mut::BufMut::put_slice","value":"fn (&mut self, src: &[u8]) -> ()","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" Transfer bytes into `self` from `src` and advance the cursor by the\n number of bytes written.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":46436,"byte_end":46442,"line_start":314,"line_end":314,"column_start":8,"column_end":14},"name":"put_u8","qualname":"::buf::buf_mut::BufMut::put_u8","value":"fn (&mut self, n: u8) -> ()","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" Writes an unsigned 8 bit integer to `self`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":46941,"byte_end":46947,"line_start":337,"line_end":337,"column_start":8,"column_end":14},"name":"put_i8","qualname":"::buf::buf_mut::BufMut::put_i8","value":"fn (&mut self, n: i8) -> ()","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" Writes a signed 8 bit integer to `self`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":47114,"byte_end":47121,"line_start":344,"line_end":344,"column_start":8,"column_end":15},"name":"put_u16","qualname":"::buf::buf_mut::BufMut::put_u16","value":"fn <T> (&mut self, n: u16) -> ()","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"use put_u16_be or put_u16_le\")","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":47056,"byte_end":47106,"line_start":343,"line_end":343,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":47733,"byte_end":47743,"line_start":368,"line_end":368,"column_start":8,"column_end":18},"name":"put_u16_be","qualname":"::buf::buf_mut::BufMut::put_u16_be","value":"fn (&mut self, n: u16) -> ()","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" Writes an unsigned 16 bit integer to `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":48334,"byte_end":48344,"line_start":392,"line_end":392,"column_start":8,"column_end":18},"name":"put_u16_le","qualname":"::buf::buf_mut::BufMut::put_u16_le","value":"fn (&mut self, n: u16) -> ()","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" Writes an unsigned 16 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":48559,"byte_end":48566,"line_start":400,"line_end":400,"column_start":8,"column_end":15},"name":"put_i16","qualname":"::buf::buf_mut::BufMut::put_i16","value":"fn <T> (&mut self, n: i16) -> ()","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"use put_i16_be or put_i16_le\")","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":48501,"byte_end":48551,"line_start":399,"line_end":399,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":49175,"byte_end":49185,"line_start":424,"line_end":424,"column_start":8,"column_end":18},"name":"put_i16_be","qualname":"::buf::buf_mut::BufMut::put_i16_be","value":"fn (&mut self, n: i16) -> ()","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" Writes a signed 16 bit integer to `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":49773,"byte_end":49783,"line_start":448,"line_end":448,"column_start":8,"column_end":18},"name":"put_i16_le","qualname":"::buf::buf_mut::BufMut::put_i16_le","value":"fn (&mut self, n: i16) -> ()","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" Writes a signed 16 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":49998,"byte_end":50005,"line_start":456,"line_end":456,"column_start":8,"column_end":15},"name":"put_u32","qualname":"::buf::buf_mut::BufMut::put_u32","value":"fn <T> (&mut self, n: u32) -> ()","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"use put_u32_be or put_u32_le\")","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":49940,"byte_end":49990,"line_start":455,"line_end":455,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":50629,"byte_end":50639,"line_start":480,"line_end":480,"column_start":8,"column_end":18},"name":"put_u32_be","qualname":"::buf::buf_mut::BufMut::put_u32_be","value":"fn (&mut self, n: u32) -> ()","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" Writes an unsigned 32 bit integer to `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":51242,"byte_end":51252,"line_start":504,"line_end":504,"column_start":8,"column_end":18},"name":"put_u32_le","qualname":"::buf::buf_mut::BufMut::put_u32_le","value":"fn (&mut self, n: u32) -> ()","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" Writes an unsigned 32 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":51467,"byte_end":51474,"line_start":512,"line_end":512,"column_start":8,"column_end":15},"name":"put_i32","qualname":"::buf::buf_mut::BufMut::put_i32","value":"fn <T> (&mut self, n: i32) -> ()","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"use put_i32_be or put_i32_le\")","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":51409,"byte_end":51459,"line_start":511,"line_end":511,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":52095,"byte_end":52105,"line_start":536,"line_end":536,"column_start":8,"column_end":18},"name":"put_i32_be","qualname":"::buf::buf_mut::BufMut::put_i32_be","value":"fn (&mut self, n: i32) -> ()","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" Writes a signed 32 bit integer to `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":52705,"byte_end":52715,"line_start":560,"line_end":560,"column_start":8,"column_end":18},"name":"put_i32_le","qualname":"::buf::buf_mut::BufMut::put_i32_le","value":"fn (&mut self, n: i32) -> ()","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" Writes a signed 32 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":52930,"byte_end":52937,"line_start":568,"line_end":568,"column_start":8,"column_end":15},"name":"put_u64","qualname":"::buf::buf_mut::BufMut::put_u64","value":"fn <T> (&mut self, n: u64) -> ()","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"use put_u64_be or put_u64_le\")","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":52872,"byte_end":52922,"line_start":567,"line_end":567,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":53589,"byte_end":53599,"line_start":592,"line_end":592,"column_start":8,"column_end":18},"name":"put_u64_be","qualname":"::buf::buf_mut::BufMut::put_u64_be","value":"fn (&mut self, n: u64) -> ()","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" Writes an unsigned 64 bit integer to `self` in the big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":54226,"byte_end":54236,"line_start":616,"line_end":616,"column_start":8,"column_end":18},"name":"put_u64_le","qualname":"::buf::buf_mut::BufMut::put_u64_le","value":"fn (&mut self, n: u64) -> ()","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" Writes an unsigned 64 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":54451,"byte_end":54458,"line_start":624,"line_end":624,"column_start":8,"column_end":15},"name":"put_i64","qualname":"::buf::buf_mut::BufMut::put_i64","value":"fn <T> (&mut self, n: i64) -> ()","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"use put_i64_be or put_i64_le\")","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":54393,"byte_end":54443,"line_start":623,"line_end":623,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":55107,"byte_end":55117,"line_start":648,"line_end":648,"column_start":8,"column_end":18},"name":"put_i64_be","qualname":"::buf::buf_mut::BufMut::put_i64_be","value":"fn (&mut self, n: i64) -> ()","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" Writes a signed 64 bit integer to `self` in the big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":55741,"byte_end":55751,"line_start":672,"line_end":672,"column_start":8,"column_end":18},"name":"put_i64_le","qualname":"::buf::buf_mut::BufMut::put_i64_le","value":"fn (&mut self, n: i64) -> ()","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" Writes a signed 64 bit integer to `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":59090,"byte_end":59098,"line_start":784,"line_end":784,"column_start":8,"column_end":16},"name":"put_uint","qualname":"::buf::buf_mut::BufMut::put_uint","value":"fn <T> (&mut self, n: u64, nbytes: usize) -> ()","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"use put_uint_be or put_uint_le\")","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":59030,"byte_end":59082,"line_start":783,"line_end":783,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":59762,"byte_end":59773,"line_start":808,"line_end":808,"column_start":8,"column_end":19},"name":"put_uint_be","qualname":"::buf::buf_mut::BufMut::put_uint_be","value":"fn (&mut self, n: u64, nbytes: usize) -> ()","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" Writes an unsigned n-byte integer to `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":60420,"byte_end":60431,"line_start":832,"line_end":832,"column_start":8,"column_end":19},"name":"put_uint_le","qualname":"::buf::buf_mut::BufMut::put_uint_le","value":"fn (&mut self, n: u64, nbytes: usize) -> ()","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" Writes an unsigned n-byte integer to `self` in the little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":60681,"byte_end":60688,"line_start":840,"line_end":840,"column_start":8,"column_end":15},"name":"put_int","qualname":"::buf::buf_mut::BufMut::put_int","value":"fn <T> (&mut self, n: i64, nbytes: usize) -> ()","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"use put_int_be or put_int_le\")","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":60623,"byte_end":60673,"line_start":839,"line_end":839,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":61347,"byte_end":61357,"line_start":864,"line_end":864,"column_start":8,"column_end":18},"name":"put_int_be","qualname":"::buf::buf_mut::BufMut::put_int_be","value":"fn (&mut self, n: i64, nbytes: usize) -> ()","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" Writes a signed n-byte integer to `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":61995,"byte_end":62005,"line_start":888,"line_end":888,"column_start":8,"column_end":18},"name":"put_int_le","qualname":"::buf::buf_mut::BufMut::put_int_le","value":"fn (&mut self, n: i64, nbytes: usize) -> ()","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" Writes a signed n-byte integer to `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":62254,"byte_end":62261,"line_start":896,"line_end":896,"column_start":8,"column_end":15},"name":"put_f32","qualname":"::buf::buf_mut::BufMut::put_f32","value":"fn <T> (&mut self, n: f32) -> ()","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"use put_f32_be or put_f32_le\")","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":62196,"byte_end":62246,"line_start":895,"line_end":895,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":62923,"byte_end":62933,"line_start":921,"line_end":921,"column_start":8,"column_end":18},"name":"put_f32_be","qualname":"::buf::buf_mut::BufMut::put_f32_be","value":"fn (&mut self, n: f32) -> ()","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" Writes  an IEEE754 single-precision (4 bytes) floating point number to\n `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":63574,"byte_end":63584,"line_start":946,"line_end":946,"column_start":8,"column_end":18},"name":"put_f32_le","qualname":"::buf::buf_mut::BufMut::put_f32_le","value":"fn (&mut self, n: f32) -> ()","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" Writes  an IEEE754 single-precision (4 bytes) floating point number to\n `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":63799,"byte_end":63806,"line_start":954,"line_end":954,"column_start":8,"column_end":15},"name":"put_f64","qualname":"::buf::buf_mut::BufMut::put_f64","value":"fn <T> (&mut self, n: f64) -> ()","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"use put_f64_be or put_f64_le\")","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":63741,"byte_end":63791,"line_start":953,"line_end":953,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":64484,"byte_end":64494,"line_start":979,"line_end":979,"column_start":8,"column_end":18},"name":"put_f64_be","qualname":"::buf::buf_mut::BufMut::put_f64_be","value":"fn (&mut self, n: f64) -> ()","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" Writes  an IEEE754 double-precision (8 bytes) floating point number to\n `self` in big-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":65151,"byte_end":65161,"line_start":1004,"line_end":1004,"column_start":8,"column_end":18},"name":"put_f64_le","qualname":"::buf::buf_mut::BufMut::put_f64_le","value":"fn (&mut self, n: f64) -> ()","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" Writes  an IEEE754 double-precision (8 bytes) floating point number to\n `self` in little-endian byte order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":66039,"byte_end":66045,"line_start":1035,"line_end":1035,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::buf::buf_mut::BufMut::by_ref","value":"fn (&mut self) -> &mut Self","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" Creates a \"by reference\" adaptor for this instance of `BufMut`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":66819,"byte_end":66825,"line_start":1061,"line_end":1061,"column_start":8,"column_end":14},"name":"writer","qualname":"::buf::buf_mut::BufMut::writer","value":"fn (self) -> Writer<Self>","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":" Creates an adaptor which implements the `Write` trait for `self`.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":261},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/from_buf.rs","byte_start":71341,"byte_end":71348,"line_start":68,"line_end":68,"column_start":11,"column_end":18},"name":"FromBuf","qualname":"::buf::from_buf::FromBuf","value":"FromBuf","parent":null,"children":[{"krate":0,"index":262}],"decl_id":null,"docs":" Conversion from a [`Buf`]","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/from_buf.rs","byte_start":71791,"byte_end":71799,"line_start":86,"line_end":86,"column_start":8,"column_end":16},"name":"from_buf","qualname":"::buf::from_buf::FromBuf::from_buf","value":"fn <T> (buf: T) -> Self","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Creates a value from a buffer.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":895},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/chain.rs","byte_start":73320,"byte_end":73325,"line_start":30,"line_end":30,"column_start":12,"column_end":17},"name":"Chain","qualname":"::buf::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":898},{"krate":0,"index":899}],"decl_id":null,"docs":" A `Chain` sequences two buffers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/chain.rs","byte_start":73741,"byte_end":73744,"line_start":50,"line_end":50,"column_start":12,"column_end":15},"name":"new","qualname":"<Chain<T, U>>::new","value":"fn (a: T, b: U) -> Chain<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Chain` sequencing the provided values.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/chain.rs","byte_start":74204,"byte_end":74213,"line_start":69,"line_end":69,"column_start":12,"column_end":21},"name":"first_ref","qualname":"<Chain<T, U>>::first_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the first underlying `Buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/chain.rs","byte_start":74704,"byte_end":74713,"line_start":88,"line_end":88,"column_start":12,"column_end":21},"name":"first_mut","qualname":"<Chain<T, U>>::first_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the first underlying `Buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/chain.rs","byte_start":75123,"byte_end":75131,"line_start":104,"line_end":104,"column_start":12,"column_end":20},"name":"last_ref","qualname":"<Chain<T, U>>::last_ref","value":"fn (&self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the last underlying `Buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/chain.rs","byte_start":75620,"byte_end":75628,"line_start":123,"line_end":123,"column_start":12,"column_end":20},"name":"last_mut","qualname":"<Chain<T, U>>::last_mut","value":"fn (&mut self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the last underlying `Buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/chain.rs","byte_start":76138,"byte_end":76148,"line_start":141,"line_end":141,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"fn (self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Chain`, returning the underlying values.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":307},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/into_buf.rs","byte_start":78641,"byte_end":78648,"line_start":26,"line_end":26,"column_start":11,"column_end":18},"name":"IntoBuf","qualname":"::buf::into_buf::IntoBuf","value":"IntoBuf","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":309}],"decl_id":null,"docs":" Conversion into a `Buf`","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":308},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/into_buf.rs","byte_start":78719,"byte_end":78722,"line_start":28,"line_end":28,"column_start":10,"column_end":13},"name":"Buf","qualname":"::buf::into_buf::IntoBuf::Buf","value":"type Buf: Buf;","parent":{"krate":0,"index":307},"children":[],"decl_id":null,"docs":" The `Buf` type that `self` is being converted into\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/into_buf.rs","byte_start":79160,"byte_end":79168,"line_start":47,"line_end":47,"column_start":8,"column_end":16},"name":"into_buf","qualname":"::buf::into_buf::IntoBuf::into_buf","value":"fn (self) -> Self::Buf","parent":{"krate":0,"index":307},"children":[],"decl_id":null,"docs":" Creates a `Buf` from a value.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":904},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/iter.rs","byte_start":81620,"byte_end":81624,"line_start":26,"line_end":26,"column_start":12,"column_end":16},"name":"Iter","qualname":"::buf::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":906}],"decl_id":null,"docs":" Iterator over the bytes contained by the buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/iter.rs","byte_start":82079,"byte_end":82089,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Iter<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Iter`, returning the underlying value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/iter.rs","byte_start":82583,"byte_end":82590,"line_start":66,"line_end":66,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Iter<T>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying `Buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/iter.rs","byte_start":83143,"byte_end":83150,"line_start":88,"line_end":88,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Iter<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying `Buf`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":910},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/reader.rs","byte_start":84008,"byte_end":84014,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Reader","qualname":"::buf::reader::Reader","value":"Reader {  }","parent":null,"children":[{"krate":0,"index":912}],"decl_id":null,"docs":" A `Buf` adapter which implements `io::Read` for the inner value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/reader.rs","byte_start":84512,"byte_end":84519,"line_start":34,"line_end":34,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Reader<B>>::get_ref","value":"fn (&self) -> &B","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying `Buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/reader.rs","byte_start":85075,"byte_end":85082,"line_start":56,"line_end":56,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Reader<B>>::get_mut","value":"fn (&mut self) -> &mut B","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying `Buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/reader.rs","byte_start":85571,"byte_end":85581,"line_start":76,"line_end":76,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Reader<B>>::into_inner","value":"fn (self) -> B","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Reader`, returning the underlying value.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":916},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/take.rs","byte_start":86373,"byte_end":86377,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Take","qualname":"::buf::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":918},{"krate":0,"index":919}],"decl_id":null,"docs":" A `Buf` adapter which limits the bytes read from an underlying buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/take.rs","byte_start":87067,"byte_end":87077,"line_start":43,"line_end":43,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Take<T>>::into_inner","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Take`, returning the underlying value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/take.rs","byte_start":87506,"byte_end":87513,"line_start":61,"line_end":61,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Take<T>>::get_ref","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying `Buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/take.rs","byte_start":88045,"byte_end":88052,"line_start":83,"line_end":83,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Take<T>>::get_mut","value":"fn (&mut self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying `Buf`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/take.rs","byte_start":88646,"byte_end":88651,"line_start":106,"line_end":106,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<T>>::limit","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum number of bytes that can be read.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/take.rs","byte_start":89333,"byte_end":89342,"line_start":135,"line_end":135,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<T>>::set_limit","value":"fn (&mut self, lim: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of bytes that can be read.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":923},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/writer.rs","byte_start":90950,"byte_end":90956,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Writer","qualname":"::buf::writer::Writer","value":"Writer {  }","parent":null,"children":[{"krate":0,"index":925}],"decl_id":null,"docs":" A `BufMut` adapter which implements `io::Write` for the inner value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/writer.rs","byte_start":91428,"byte_end":91435,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Writer<B>>::get_ref","value":"fn (&self) -> &B","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying `BufMut`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/writer.rs","byte_start":91870,"byte_end":91877,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Writer<B>>::get_mut","value":"fn (&mut self) -> &mut B","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying `BufMut`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/writer.rs","byte_start":92375,"byte_end":92385,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Writer<B>>::into_inner","value":"fn (self) -> B","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Writer`, returning the underlying value.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":483},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":96482,"byte_end":96487,"line_start":105,"line_end":105,"column_start":12,"column_end":17},"name":"Bytes","qualname":"::bytes::Bytes","value":"Bytes {  }","parent":null,"children":[{"krate":0,"index":484}],"decl_id":null,"docs":" A reference counted contiguous slice of memory.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":485},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":97876,"byte_end":97884,"line_start":151,"line_end":151,"column_start":12,"column_end":20},"name":"BytesMut","qualname":"::bytes::BytesMut","value":"BytesMut {  }","parent":null,"children":[{"krate":0,"index":486}],"decl_id":null,"docs":" A unique reference to a contiguous slice of memory.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":108732,"byte_end":108745,"line_start":415,"line_end":415,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Bytes>::with_capacity","value":"fn (capacity: usize) -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Bytes` with the specified capacity.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":108711,"byte_end":108720,"line_start":414,"line_end":414,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":109162,"byte_end":109165,"line_start":434,"line_end":434,"column_start":12,"column_end":15},"name":"new","qualname":"<Bytes>::new","value":"fn () -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty `Bytes`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":109141,"byte_end":109150,"line_start":433,"line_end":433,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":109592,"byte_end":109603,"line_start":452,"line_end":452,"column_start":12,"column_end":23},"name":"from_static","qualname":"<Bytes>::from_static","value":"fn (bytes: &'static [u8]) -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Bytes` from a static slice.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":109571,"byte_end":109580,"line_start":451,"line_end":451,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":109973,"byte_end":109976,"line_start":469,"line_end":469,"column_start":12,"column_end":15},"name":"len","qualname":"<Bytes>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes contained in this `Bytes`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":109952,"byte_end":109961,"line_start":468,"line_end":468,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":110261,"byte_end":110269,"line_start":484,"line_end":484,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Bytes>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `Bytes` has a length of 0.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":110240,"byte_end":110249,"line_start":483,"line_end":483,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":110936,"byte_end":110941,"line_start":510,"line_end":510,"column_start":12,"column_end":17},"name":"slice","qualname":"<Bytes>::slice","value":"fn (&self, begin: usize, end: usize) -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice of self for the index range `[begin..end)`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":111974,"byte_end":111984,"line_start":550,"line_end":550,"column_start":12,"column_end":22},"name":"slice_from","qualname":"<Bytes>::slice_from","value":"fn (&self, begin: usize) -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice of self for the index range `[begin..self.len())`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":112687,"byte_end":112695,"line_start":575,"line_end":575,"column_start":12,"column_end":20},"name":"slice_to","qualname":"<Bytes>::slice_to","value":"fn (&self, end: usize) -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice of self for the index range `[0..end)`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":113686,"byte_end":113695,"line_start":604,"line_end":604,"column_start":12,"column_end":21},"name":"slice_ref","qualname":"<Bytes>::slice_ref","value":"fn (&self, subset: &[u8]) -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice of self that is equivalent to the given `subset`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":114726,"byte_end":114735,"line_start":642,"line_end":642,"column_start":12,"column_end":21},"name":"split_off","qualname":"<Bytes>::split_off","value":"fn (&mut self, at: usize) -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Splits the bytes into two at the given index.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":115676,"byte_end":115684,"line_start":681,"line_end":681,"column_start":12,"column_end":20},"name":"split_to","qualname":"<Bytes>::split_to","value":"fn (&mut self, at: usize) -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Splits the bytes into two at the given index.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":525},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":116086,"byte_end":116094,"line_start":699,"line_end":699,"column_start":12,"column_end":20},"name":"drain_to","qualname":"<Bytes>::drain_to","value":"fn (&mut self, at: usize) -> Bytes","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.4.1\", note = \"use split_to instead\")","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":115994,"byte_end":116055,"line_start":697,"line_end":697,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":116763,"byte_end":116771,"line_start":723,"line_end":723,"column_start":12,"column_end":20},"name":"truncate","qualname":"<Bytes>::truncate","value":"fn (&mut self, len: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shortens the buffer, keeping the first `len` bytes and dropping the\n rest.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":527},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":117255,"byte_end":117262,"line_start":738,"line_end":738,"column_start":12,"column_end":19},"name":"advance","qualname":"<Bytes>::advance","value":"fn (&mut self, cnt: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shortens the buffer, dropping the first `cnt` bytes and keeping the\n rest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":117234,"byte_end":117243,"line_start":737,"line_end":737,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":117672,"byte_end":117677,"line_start":754,"line_end":754,"column_start":12,"column_end":17},"name":"clear","qualname":"<Bytes>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the buffer, removing all data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":529},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":118556,"byte_end":118563,"line_start":786,"line_end":786,"column_start":12,"column_end":19},"name":"try_mut","qualname":"<Bytes>::try_mut","value":"fn (mut self) -> Result<BytesMut, Bytes>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to convert into a `BytesMut` handle.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":119351,"byte_end":119368,"line_start":813,"line_end":813,"column_start":12,"column_end":29},"name":"extend_from_slice","qualname":"<Bytes>::extend_from_slice","value":"fn (&mut self, extend: &[u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Appends given bytes to this object.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":125286,"byte_end":125299,"line_start":1069,"line_end":1069,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BytesMut>::with_capacity","value":"fn (capacity: usize) -> BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesMut` with the specified capacity.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":125265,"byte_end":125274,"line_start":1068,"line_end":1068,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":125921,"byte_end":125924,"line_start":1095,"line_end":1095,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesMut>::new","value":"fn () -> BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesMut` with default capacity.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":125900,"byte_end":125909,"line_start":1094,"line_end":1094,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":126249,"byte_end":126252,"line_start":1110,"line_end":1110,"column_start":12,"column_end":15},"name":"len","qualname":"<BytesMut>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes contained in this `BytesMut`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":126228,"byte_end":126237,"line_start":1109,"line_end":1109,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":126558,"byte_end":126566,"line_start":1125,"line_end":1125,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<BytesMut>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `BytesMut` has a length of 0.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":126537,"byte_end":126546,"line_start":1124,"line_end":1124,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":126901,"byte_end":126909,"line_start":1140,"line_end":1140,"column_start":12,"column_end":20},"name":"capacity","qualname":"<BytesMut>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes the `BytesMut` can hold without reallocating.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":126880,"byte_end":126889,"line_start":1139,"line_end":1139,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":127732,"byte_end":127738,"line_start":1169,"line_end":1169,"column_start":12,"column_end":18},"name":"freeze","qualname":"<BytesMut>::freeze","value":"fn (self) -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Converts `self` into an immutable `Bytes`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":127711,"byte_end":127720,"line_start":1168,"line_end":1168,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":128507,"byte_end":128516,"line_start":1199,"line_end":1199,"column_start":12,"column_end":21},"name":"split_off","qualname":"<BytesMut>::split_off","value":"fn (&mut self, at: usize) -> BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Splits the bytes into two at the given index.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":129426,"byte_end":129430,"line_start":1230,"line_end":1230,"column_start":12,"column_end":16},"name":"take","qualname":"<BytesMut>::take","value":"fn (&mut self) -> BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Removes the bytes from the current view, returning them in a new\n `BytesMut` handle.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":129612,"byte_end":129617,"line_start":1237,"line_end":1237,"column_start":12,"column_end":17},"name":"drain","qualname":"<BytesMut>::drain","value":"fn (&mut self) -> BytesMut","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.4.1\", note = \"use take instead\")","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":129524,"byte_end":129581,"line_start":1235,"line_end":1235,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":130368,"byte_end":130376,"line_start":1267,"line_end":1267,"column_start":12,"column_end":20},"name":"split_to","qualname":"<BytesMut>::split_to","value":"fn (&mut self, at: usize) -> BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Splits the buffer into two at the given index.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":130589,"byte_end":130597,"line_start":1275,"line_end":1275,"column_start":12,"column_end":20},"name":"drain_to","qualname":"<BytesMut>::drain_to","value":"fn (&mut self, at: usize) -> BytesMut","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(since = \"0.4.1\", note = \"use split_to instead\")","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":130497,"byte_end":130558,"line_start":1273,"line_end":1273,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":617},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":131275,"byte_end":131283,"line_start":1299,"line_end":1299,"column_start":12,"column_end":20},"name":"truncate","qualname":"<BytesMut>::truncate","value":"fn (&mut self, len: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shortens the buffer, keeping the first `len` bytes and dropping the\n rest.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":131770,"byte_end":131777,"line_start":1314,"line_end":1314,"column_start":12,"column_end":19},"name":"advance","qualname":"<BytesMut>::advance","value":"fn (&mut self, cnt: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shortens the buffer, dropping the first `cnt` bytes and keeping the\n rest.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":131749,"byte_end":131758,"line_start":1313,"line_end":1313,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":619},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":132193,"byte_end":132198,"line_start":1330,"line_end":1330,"column_start":12,"column_end":17},"name":"clear","qualname":"<BytesMut>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the buffer, removing all data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":132923,"byte_end":132929,"line_start":1356,"line_end":1356,"column_start":12,"column_end":18},"name":"resize","qualname":"<BytesMut>::resize","value":"fn (&mut self, new_len: usize, value: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Resizes the buffer so that `len` is equal to `new_len`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":133820,"byte_end":133827,"line_start":1390,"line_end":1390,"column_start":19,"column_end":26},"name":"set_len","qualname":"<BytesMut>::set_len","value":"fn (&mut self, len: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the length of the buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":135551,"byte_end":135558,"line_start":1443,"line_end":1443,"column_start":12,"column_end":19},"name":"reserve","qualname":"<BytesMut>::reserve","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more bytes to be inserted\n into the given `BytesMut`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":136142,"byte_end":136159,"line_start":1463,"line_end":1463,"column_start":12,"column_end":29},"name":"extend_from_slice","qualname":"<BytesMut>::extend_from_slice","value":"fn (&mut self, extend: &[u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Appends given bytes to this object.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":136846,"byte_end":136853,"line_start":1487,"line_end":1487,"column_start":12,"column_end":19},"name":"unsplit","qualname":"<BytesMut>::unsplit","value":"fn (&mut self, other: BytesMut) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Combine splitted BytesMut objects back as contiguous.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":35567,"byte_end":35570,"line_start":1073,"line_end":1073,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":35926,"byte_end":35932,"line_start":1091,"line_end":1091,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":36657,"byte_end":36663,"line_start":1124,"line_end":1124,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":67384,"byte_end":67387,"line_start":1084,"line_end":1084,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":67829,"byte_end":67835,"line_start":1102,"line_end":1102,"column_start":51,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":243},{"krate":0,"index":245},{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":68577,"byte_end":68580,"line_start":1130,"line_end":1130,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/from_buf.rs","byte_start":71857,"byte_end":71860,"line_start":89,"line_end":89,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/from_buf.rs","byte_start":72086,"byte_end":72091,"line_start":100,"line_end":100,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/from_buf.rs","byte_start":72227,"byte_end":72235,"line_start":108,"line_end":108,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/chain.rs","byte_start":73368,"byte_end":73373,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/chain.rs","byte_start":76220,"byte_end":76225,"line_start":146,"line_end":146,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/chain.rs","byte_start":77075,"byte_end":77080,"line_start":187,"line_end":187,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/into_buf.rs","byte_start":79217,"byte_end":79218,"line_start":50,"line_end":50,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":312},{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/into_buf.rs","byte_start":79764,"byte_end":79767,"line_start":82,"line_end":82,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":327},{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/into_buf.rs","byte_start":80509,"byte_end":80515,"line_start":116,"line_end":116,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":342},{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/iter.rs","byte_start":81655,"byte_end":81659,"line_start":30,"line_end":30,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/iter.rs","byte_start":83299,"byte_end":83303,"line_start":97,"line_end":97,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/iter.rs","byte_start":83702,"byte_end":83706,"line_start":116,"line_end":116,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/reader.rs","byte_start":84112,"byte_end":84118,"line_start":19,"line_end":19,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/reader.rs","byte_start":85655,"byte_end":85661,"line_start":81,"line_end":81,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/reader.rs","byte_start":85914,"byte_end":85920,"line_start":90,"line_end":90,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/take.rs","byte_start":86541,"byte_end":86545,"line_start":22,"line_end":22,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/take.rs","byte_start":89423,"byte_end":89427,"line_start":140,"line_end":140,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/vec_deque.rs","byte_start":89866,"byte_end":89874,"line_start":5,"line_end":5,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/writer.rs","byte_start":91057,"byte_end":91063,"line_start":19,"line_end":19,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/writer.rs","byte_start":92463,"byte_end":92469,"line_start":77,"line_end":77,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":432},{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":107915,"byte_end":107920,"line_start":390,"line_end":390,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":120060,"byte_end":120065,"line_start":837,"line_end":837,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":532},{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":120320,"byte_end":120325,"line_start":853,"line_end":853,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":120478,"byte_end":120483,"line_start":861,"line_end":861,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":120589,"byte_end":120594,"line_start":868,"line_end":868,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":543},{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":120728,"byte_end":120733,"line_start":877,"line_end":877,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":546}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":120827,"byte_end":120832,"line_start":883,"line_end":883,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":120940,"byte_end":120945,"line_start":889,"line_end":889,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":550}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":121058,"byte_end":121063,"line_start":895,"line_end":895,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":121177,"byte_end":121182,"line_start":901,"line_end":901,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":556}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":121294,"byte_end":121302,"line_start":907,"line_end":907,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":121674,"byte_end":121679,"line_start":923,"line_end":923,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":121842,"byte_end":121850,"line_start":929,"line_end":929,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":565}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":122032,"byte_end":122037,"line_start":935,"line_end":935,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":570}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":122189,"byte_end":122194,"line_start":941,"line_end":941,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":573}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":122320,"byte_end":122325,"line_start":947,"line_end":947,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":122480,"byte_end":122485,"line_start":953,"line_end":953,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":577}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":122615,"byte_end":122620,"line_start":959,"line_end":959,"column_start":13,"column_end":18},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":122643,"byte_end":122648,"line_start":962,"line_end":962,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":122743,"byte_end":122748,"line_start":969,"line_end":969,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":582}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":122909,"byte_end":122914,"line_start":975,"line_end":975,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":123070,"byte_end":123075,"line_start":982,"line_end":982,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":123163,"byte_end":123168,"line_start":988,"line_end":988,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":123523,"byte_end":123528,"line_start":1006,"line_end":1006,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":124269,"byte_end":124274,"line_start":1032,"line_end":1032,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":124455,"byte_end":124463,"line_start":1044,"line_end":1044,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":624}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":137651,"byte_end":137659,"line_start":1518,"line_end":1518,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":138625,"byte_end":138633,"line_start":1563,"line_end":1563,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":633},{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":138905,"byte_end":138913,"line_start":1579,"line_end":1579,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":640}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":139019,"byte_end":139027,"line_start":1586,"line_end":1586,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":642},{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":139152,"byte_end":139160,"line_start":1595,"line_end":1595,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":645}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":139263,"byte_end":139271,"line_start":1601,"line_end":1601,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":647}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":139391,"byte_end":139399,"line_start":1608,"line_end":1608,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":139543,"byte_end":139551,"line_start":1616,"line_end":1616,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":139671,"byte_end":139679,"line_start":1622,"line_end":1622,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":140333,"byte_end":140341,"line_start":1647,"line_end":1647,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":140453,"byte_end":140461,"line_start":1653,"line_end":1653,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":140612,"byte_end":140620,"line_start":1660,"line_end":1660,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":140749,"byte_end":140757,"line_start":1666,"line_end":1666,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":140915,"byte_end":140923,"line_start":1672,"line_end":1672,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":666}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":141056,"byte_end":141064,"line_start":1678,"line_end":1678,"column_start":13,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":141087,"byte_end":141095,"line_start":1681,"line_end":1681,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":669}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":141196,"byte_end":141204,"line_start":1688,"line_end":1688,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":671}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":141365,"byte_end":141373,"line_start":1694,"line_end":1694,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":673}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":141529,"byte_end":141537,"line_start":1701,"line_end":1701,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":141628,"byte_end":141636,"line_start":1707,"line_end":1707,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":678}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":141734,"byte_end":141742,"line_start":1713,"line_end":1713,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":680},{"krate":0,"index":681}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":142117,"byte_end":142125,"line_start":1730,"line_end":1730,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":683}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":142227,"byte_end":142235,"line_start":1736,"line_end":1736,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":142599,"byte_end":142607,"line_start":1754,"line_end":1754,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":694}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":142977,"byte_end":142985,"line_start":1770,"line_end":1770,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":143163,"byte_end":143168,"line_start":1782,"line_end":1782,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":734},{"krate":0,"index":735}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":167917,"byte_end":167922,"line_start":2512,"line_end":2512,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":738}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":169644,"byte_end":169650,"line_start":2558,"line_end":2558,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":172475,"byte_end":172480,"line_start":2636,"line_end":2636,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":172505,"byte_end":172510,"line_start":2637,"line_end":2637,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":172592,"byte_end":172600,"line_start":2645,"line_end":2645,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":747}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":172704,"byte_end":172712,"line_start":2651,"line_end":2651,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":749}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":173114,"byte_end":173122,"line_start":2669,"line_end":2669,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":173235,"byte_end":173243,"line_start":2675,"line_end":2675,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":757}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":173657,"byte_end":173665,"line_start":2693,"line_end":2693,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":763}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":173778,"byte_end":173786,"line_start":2699,"line_end":2699,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":765}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":173938,"byte_end":173941,"line_start":2705,"line_end":2705,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":767}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":174056,"byte_end":174059,"line_start":2711,"line_end":2711,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":174205,"byte_end":174213,"line_start":2717,"line_end":2717,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":174324,"byte_end":174332,"line_start":2723,"line_end":2723,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":174489,"byte_end":174495,"line_start":2729,"line_end":2729,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":775}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":174606,"byte_end":174612,"line_start":2735,"line_end":2735,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":174768,"byte_end":174776,"line_start":2741,"line_end":2741,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":781}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":174930,"byte_end":174938,"line_start":2749,"line_end":2749,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":785}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":175666,"byte_end":175671,"line_start":2781,"line_end":2781,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":799}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":175787,"byte_end":175792,"line_start":2787,"line_end":2787,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":801}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":176193,"byte_end":176198,"line_start":2805,"line_end":2805,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":807}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":176323,"byte_end":176328,"line_start":2811,"line_end":2811,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":809}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":176741,"byte_end":176746,"line_start":2829,"line_end":2829,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":815}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":176859,"byte_end":176864,"line_start":2835,"line_end":2835,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":817}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":177024,"byte_end":177027,"line_start":2841,"line_end":2841,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":819}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":177136,"byte_end":177139,"line_start":2847,"line_end":2847,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":821}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":177282,"byte_end":177287,"line_start":2853,"line_end":2853,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":823}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":177398,"byte_end":177403,"line_start":2859,"line_end":2859,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":825}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":177568,"byte_end":177574,"line_start":2865,"line_end":2865,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":827}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":177679,"byte_end":177685,"line_start":2871,"line_end":2871,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":829}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":178370,"byte_end":178375,"line_start":2901,"line_end":2901,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":845}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":178526,"byte_end":178531,"line_start":2909,"line_end":2909,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":849}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":178706,"byte_end":178711,"line_start":2917,"line_end":2917,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":851}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":178826,"byte_end":178834,"line_start":2924,"line_end":2924,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":853}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":179167,"byte_end":179172,"line_start":2936,"line_end":2936,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":857}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/debug.rs","byte_start":179836,"byte_end":179843,"line_start":15,"line_end":15,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":867}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/lib.rs","byte_start":2843,"byte_end":2846,"line_start":77,"line_end":77,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":14}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":35567,"byte_end":35570,"line_start":1073,"line_end":1073,"column_start":31,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":5,"index":75},"to":{"krate":0,"index":33}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":35926,"byte_end":35932,"line_start":1091,"line_end":1091,"column_start":34,"column_end":40},"kind":{"Impl":{"id":1}},"from":{"krate":1,"index":6334},"to":{"krate":0,"index":33}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf.rs","byte_start":36657,"byte_end":36663,"line_start":1124,"line_end":1124,"column_start":14,"column_end":20},"kind":{"Impl":{"id":2}},"from":{"krate":2,"index":32847},"to":{"krate":0,"index":33}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":67384,"byte_end":67387,"line_start":1084,"line_end":1084,"column_start":37,"column_end":40},"kind":{"Impl":{"id":3}},"from":{"krate":5,"index":75},"to":{"krate":0,"index":141}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":67829,"byte_end":67835,"line_start":1102,"line_end":1102,"column_start":51,"column_end":57},"kind":{"Impl":{"id":4}},"from":{"krate":1,"index":6334},"to":{"krate":0,"index":141}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/buf_mut.rs","byte_start":68577,"byte_end":68580,"line_start":1130,"line_end":1130,"column_start":17,"column_end":20},"kind":{"Impl":{"id":5}},"from":{"krate":5,"index":3569},"to":{"krate":0,"index":141}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/from_buf.rs","byte_start":71857,"byte_end":71860,"line_start":89,"line_end":89,"column_start":18,"column_end":21},"kind":{"Impl":{"id":6}},"from":{"krate":5,"index":3569},"to":{"krate":0,"index":261}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/from_buf.rs","byte_start":72086,"byte_end":72091,"line_start":100,"line_end":100,"column_start":18,"column_end":23},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":483},"to":{"krate":0,"index":261}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/from_buf.rs","byte_start":72227,"byte_end":72235,"line_start":108,"line_end":108,"column_start":18,"column_end":26},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":485},"to":{"krate":0,"index":261}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/chain.rs","byte_start":73368,"byte_end":73373,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":895},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/chain.rs","byte_start":76220,"byte_end":76225,"line_start":146,"line_end":146,"column_start":20,"column_end":25},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":895},"to":{"krate":0,"index":33}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/chain.rs","byte_start":77075,"byte_end":77080,"line_start":187,"line_end":187,"column_start":23,"column_end":28},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":895},"to":{"krate":0,"index":141}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/into_buf.rs","byte_start":79217,"byte_end":79218,"line_start":50,"line_end":50,"column_start":26,"column_end":27},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":311},"to":{"krate":0,"index":307}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/into_buf.rs","byte_start":79764,"byte_end":79767,"line_start":82,"line_end":82,"column_start":18,"column_end":21},"kind":{"Impl":{"id":13}},"from":{"krate":5,"index":3569},"to":{"krate":0,"index":307}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/into_buf.rs","byte_start":80509,"byte_end":80515,"line_start":116,"line_end":116,"column_start":18,"column_end":24},"kind":{"Impl":{"id":14}},"from":{"krate":5,"index":4687},"to":{"krate":0,"index":307}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/iter.rs","byte_start":81655,"byte_end":81659,"line_start":30,"line_end":30,"column_start":9,"column_end":13},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":904},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/iter.rs","byte_start":83299,"byte_end":83303,"line_start":97,"line_end":97,"column_start":27,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":904},"to":{"krate":2,"index":3202}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/iter.rs","byte_start":83702,"byte_end":83706,"line_start":116,"line_end":116,"column_start":36,"column_end":40},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":904},"to":{"krate":2,"index":3380}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/reader.rs","byte_start":84112,"byte_end":84118,"line_start":19,"line_end":19,"column_start":14,"column_end":20},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":910},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/reader.rs","byte_start":85655,"byte_end":85661,"line_start":81,"line_end":81,"column_start":35,"column_end":41},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":910},"to":{"krate":1,"index":2764}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/reader.rs","byte_start":85914,"byte_end":85920,"line_start":90,"line_end":90,"column_start":38,"column_end":44},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":910},"to":{"krate":1,"index":2836}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/take.rs","byte_start":86541,"byte_end":86545,"line_start":22,"line_end":22,"column_start":9,"column_end":13},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":916},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/take.rs","byte_start":89423,"byte_end":89427,"line_start":140,"line_end":140,"column_start":22,"column_end":26},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":916},"to":{"krate":0,"index":33}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/vec_deque.rs","byte_start":89866,"byte_end":89874,"line_start":5,"line_end":5,"column_start":14,"column_end":22},"kind":{"Impl":{"id":25}},"from":{"krate":5,"index":1985},"to":{"krate":0,"index":33}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/writer.rs","byte_start":91057,"byte_end":91063,"line_start":19,"line_end":19,"column_start":17,"column_end":23},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":923},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/buf/writer.rs","byte_start":92463,"byte_end":92469,"line_start":77,"line_end":77,"column_start":39,"column_end":45},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":923},"to":{"krate":1,"index":2814}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":107915,"byte_end":107920,"line_start":390,"line_end":390,"column_start":6,"column_end":11},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":483},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":120060,"byte_end":120065,"line_start":837,"line_end":837,"column_start":18,"column_end":23},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":483},"to":{"krate":0,"index":307}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":120320,"byte_end":120325,"line_start":853,"line_end":853,"column_start":16,"column_end":21},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":483},"to":{"krate":2,"index":2056}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":120478,"byte_end":120483,"line_start":861,"line_end":861,"column_start":22,"column_end":27},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":483},"to":{"krate":2,"index":2087}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":120589,"byte_end":120594,"line_start":868,"line_end":868,"column_start":21,"column_end":26},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":483},"to":{"krate":2,"index":1601}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":120728,"byte_end":120733,"line_start":877,"line_end":877,"column_start":25,"column_end":30},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":483},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":120827,"byte_end":120832,"line_start":883,"line_end":883,"column_start":24,"column_end":29},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":483},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":120940,"byte_end":120945,"line_start":889,"line_end":889,"column_start":23,"column_end":28},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":483},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":121058,"byte_end":121063,"line_start":895,"line_end":895,"column_start":29,"column_end":34},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":483},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":121177,"byte_end":121182,"line_start":901,"line_end":901,"column_start":28,"column_end":33},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":483},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":121294,"byte_end":121302,"line_start":907,"line_end":907,"column_start":27,"column_end":35},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":485},"to":{"krate":2,"index":3388}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":121674,"byte_end":121679,"line_start":923,"line_end":923,"column_start":27,"column_end":32},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":483},"to":{"krate":2,"index":3388}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":121842,"byte_end":121850,"line_start":929,"line_end":929,"column_start":35,"column_end":43},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":485},"to":{"krate":2,"index":3388}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":122032,"byte_end":122037,"line_start":935,"line_end":935,"column_start":35,"column_end":40},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":483},"to":{"krate":2,"index":3388}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":122189,"byte_end":122194,"line_start":941,"line_end":941,"column_start":20,"column_end":25},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":483},"to":{"krate":2,"index":1936}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":122320,"byte_end":122325,"line_start":947,"line_end":947,"column_start":21,"column_end":26},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":483},"to":{"krate":2,"index":1970}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":122480,"byte_end":122485,"line_start":953,"line_end":953,"column_start":14,"column_end":19},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":483},"to":{"krate":2,"index":1960}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":122615,"byte_end":122620,"line_start":959,"line_end":959,"column_start":13,"column_end":18},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":483},"to":{"krate":2,"index":1940}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":122643,"byte_end":122648,"line_start":962,"line_end":962,"column_start":18,"column_end":23},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":483},"to":{"krate":2,"index":2080}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":122743,"byte_end":122748,"line_start":969,"line_end":969,"column_start":21,"column_end":26},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":483},"to":{"krate":2,"index":6824}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":122909,"byte_end":122914,"line_start":975,"line_end":975,"column_start":21,"column_end":26},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":483},"to":{"krate":2,"index":6481}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":123070,"byte_end":123075,"line_start":982,"line_end":982,"column_start":23,"column_end":28},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":483},"to":{"krate":2,"index":2160}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":123163,"byte_end":123168,"line_start":988,"line_end":988,"column_start":23,"column_end":28},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":483},"to":{"krate":2,"index":3392}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":123523,"byte_end":123528,"line_start":1006,"line_end":1006,"column_start":21,"column_end":26},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":483},"to":{"krate":2,"index":3401}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":124269,"byte_end":124274,"line_start":1032,"line_end":1032,"column_start":29,"column_end":34},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":483},"to":{"krate":2,"index":3401}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":124455,"byte_end":124463,"line_start":1044,"line_end":1044,"column_start":6,"column_end":14},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":485},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":137651,"byte_end":137659,"line_start":1518,"line_end":1518,"column_start":17,"column_end":25},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":485},"to":{"krate":0,"index":141}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":138625,"byte_end":138633,"line_start":1563,"line_end":1563,"column_start":18,"column_end":26},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":485},"to":{"krate":0,"index":307}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":138905,"byte_end":138913,"line_start":1579,"line_end":1579,"column_start":22,"column_end":30},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":485},"to":{"krate":2,"index":2087}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":139019,"byte_end":139027,"line_start":1586,"line_end":1586,"column_start":21,"column_end":29},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":485},"to":{"krate":2,"index":1601}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":139152,"byte_end":139160,"line_start":1595,"line_end":1595,"column_start":22,"column_end":30},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":485},"to":{"krate":2,"index":2090}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":139263,"byte_end":139271,"line_start":1601,"line_end":1601,"column_start":24,"column_end":32},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":485},"to":{"krate":2,"index":1612}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":139391,"byte_end":139399,"line_start":1608,"line_end":1608,"column_start":24,"column_end":32},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":485},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":139543,"byte_end":139551,"line_start":1616,"line_end":1616,"column_start":23,"column_end":31},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":485},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":139671,"byte_end":139679,"line_start":1622,"line_end":1622,"column_start":29,"column_end":37},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":485},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":140333,"byte_end":140341,"line_start":1647,"line_end":1647,"column_start":28,"column_end":36},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":485},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":140453,"byte_end":140461,"line_start":1653,"line_end":1653,"column_start":22,"column_end":30},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":485},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":140612,"byte_end":140620,"line_start":1660,"line_end":1660,"column_start":20,"column_end":28},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":485},"to":{"krate":2,"index":1936}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":140749,"byte_end":140757,"line_start":1666,"line_end":1666,"column_start":21,"column_end":29},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":485},"to":{"krate":2,"index":1970}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":140915,"byte_end":140923,"line_start":1672,"line_end":1672,"column_start":14,"column_end":22},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":485},"to":{"krate":2,"index":1960}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":141056,"byte_end":141064,"line_start":1678,"line_end":1678,"column_start":13,"column_end":21},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":485},"to":{"krate":2,"index":1940}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":141087,"byte_end":141095,"line_start":1681,"line_end":1681,"column_start":18,"column_end":26},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":485},"to":{"krate":2,"index":2080}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":141196,"byte_end":141204,"line_start":1688,"line_end":1688,"column_start":21,"column_end":29},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":485},"to":{"krate":2,"index":6824}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":141365,"byte_end":141373,"line_start":1694,"line_end":1694,"column_start":21,"column_end":29},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":485},"to":{"krate":2,"index":6481}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":141529,"byte_end":141537,"line_start":1701,"line_end":1701,"column_start":23,"column_end":31},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":485},"to":{"krate":2,"index":2160}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":141628,"byte_end":141636,"line_start":1707,"line_end":1707,"column_start":26,"column_end":34},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":485},"to":{"krate":2,"index":2163}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":141734,"byte_end":141742,"line_start":1713,"line_end":1713,"column_start":21,"column_end":29},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":485},"to":{"krate":2,"index":6783}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":142117,"byte_end":142125,"line_start":1730,"line_end":1730,"column_start":16,"column_end":24},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":485},"to":{"krate":2,"index":2056}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":142227,"byte_end":142235,"line_start":1736,"line_end":1736,"column_start":23,"column_end":31},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":485},"to":{"krate":2,"index":3392}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":142599,"byte_end":142607,"line_start":1754,"line_end":1754,"column_start":21,"column_end":29},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":485},"to":{"krate":2,"index":3401}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":142977,"byte_end":142985,"line_start":1770,"line_end":1770,"column_start":29,"column_end":37},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":485},"to":{"krate":2,"index":3401}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":143163,"byte_end":143168,"line_start":1782,"line_end":1782,"column_start":6,"column_end":11},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":487},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":167917,"byte_end":167922,"line_start":2512,"line_end":2512,"column_start":15,"column_end":20},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":487},"to":{"krate":2,"index":1623}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":169644,"byte_end":169650,"line_start":2558,"line_end":2558,"column_start":6,"column_end":12},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":492},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":172475,"byte_end":172480,"line_start":2636,"line_end":2636,"column_start":22,"column_end":27},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":487},"to":{"krate":2,"index":1437}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":172505,"byte_end":172510,"line_start":2637,"line_end":2637,"column_start":22,"column_end":27},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":487},"to":{"krate":2,"index":1446}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":172592,"byte_end":172600,"line_start":2645,"line_end":2645,"column_start":26,"column_end":34},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":485},"to":{"krate":2,"index":1936}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":172704,"byte_end":172712,"line_start":2651,"line_end":2651,"column_start":27,"column_end":35},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":485},"to":{"krate":2,"index":1970}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":173114,"byte_end":173122,"line_start":2669,"line_end":2669,"column_start":25,"column_end":33},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":485},"to":{"krate":2,"index":1936}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":173235,"byte_end":173243,"line_start":2675,"line_end":2675,"column_start":26,"column_end":34},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":485},"to":{"krate":2,"index":1970}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":173657,"byte_end":173665,"line_start":2693,"line_end":2693,"column_start":29,"column_end":37},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":485},"to":{"krate":2,"index":1936}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":173778,"byte_end":173786,"line_start":2699,"line_end":2699,"column_start":30,"column_end":38},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":485},"to":{"krate":2,"index":1970}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":173938,"byte_end":173941,"line_start":2705,"line_end":2705,"column_start":30,"column_end":33},"kind":{"Impl":{"id":92}},"from":{"krate":5,"index":3569},"to":{"krate":2,"index":1936}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":174056,"byte_end":174059,"line_start":2711,"line_end":2711,"column_start":31,"column_end":34},"kind":{"Impl":{"id":93}},"from":{"krate":5,"index":3569},"to":{"krate":2,"index":1970}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":174205,"byte_end":174213,"line_start":2717,"line_end":2717,"column_start":28,"column_end":36},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":485},"to":{"krate":2,"index":1936}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":174324,"byte_end":174332,"line_start":2723,"line_end":2723,"column_start":29,"column_end":37},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":485},"to":{"krate":2,"index":1970}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":174489,"byte_end":174495,"line_start":2729,"line_end":2729,"column_start":30,"column_end":36},"kind":{"Impl":{"id":96}},"from":{"krate":5,"index":4687},"to":{"krate":2,"index":1936}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":174606,"byte_end":174612,"line_start":2735,"line_end":2735,"column_start":31,"column_end":37},"kind":{"Impl":{"id":97}},"from":{"krate":5,"index":4687},"to":{"krate":2,"index":1970}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":174768,"byte_end":174776,"line_start":2741,"line_end":2741,"column_start":42,"column_end":50},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":485},"to":{"krate":2,"index":1936}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":174930,"byte_end":174938,"line_start":2749,"line_end":2749,"column_start":43,"column_end":51},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":485},"to":{"krate":2,"index":1970}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":175666,"byte_end":175671,"line_start":2781,"line_end":2781,"column_start":26,"column_end":31},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":483},"to":{"krate":2,"index":1936}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":175787,"byte_end":175792,"line_start":2787,"line_end":2787,"column_start":27,"column_end":32},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":483},"to":{"krate":2,"index":1970}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":176193,"byte_end":176198,"line_start":2805,"line_end":2805,"column_start":25,"column_end":30},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":483},"to":{"krate":2,"index":1936}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":176323,"byte_end":176328,"line_start":2811,"line_end":2811,"column_start":26,"column_end":31},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":483},"to":{"krate":2,"index":1970}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":176741,"byte_end":176746,"line_start":2829,"line_end":2829,"column_start":29,"column_end":34},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":483},"to":{"krate":2,"index":1936}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":176859,"byte_end":176864,"line_start":2835,"line_end":2835,"column_start":30,"column_end":35},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":483},"to":{"krate":2,"index":1970}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":177024,"byte_end":177027,"line_start":2841,"line_end":2841,"column_start":27,"column_end":30},"kind":{"Impl":{"id":108}},"from":{"krate":5,"index":3569},"to":{"krate":2,"index":1936}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":177136,"byte_end":177139,"line_start":2847,"line_end":2847,"column_start":28,"column_end":31},"kind":{"Impl":{"id":109}},"from":{"krate":5,"index":3569},"to":{"krate":2,"index":1970}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":177282,"byte_end":177287,"line_start":2853,"line_end":2853,"column_start":28,"column_end":33},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":483},"to":{"krate":2,"index":1936}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":177398,"byte_end":177403,"line_start":2859,"line_end":2859,"column_start":29,"column_end":34},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":483},"to":{"krate":2,"index":1970}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":177568,"byte_end":177574,"line_start":2865,"line_end":2865,"column_start":27,"column_end":33},"kind":{"Impl":{"id":112}},"from":{"krate":5,"index":4687},"to":{"krate":2,"index":1936}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":177679,"byte_end":177685,"line_start":2871,"line_end":2871,"column_start":28,"column_end":34},"kind":{"Impl":{"id":113}},"from":{"krate":5,"index":4687},"to":{"krate":2,"index":1970}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":178370,"byte_end":178375,"line_start":2901,"line_end":2901,"column_start":42,"column_end":47},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":483},"to":{"krate":2,"index":1936}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":178526,"byte_end":178531,"line_start":2909,"line_end":2909,"column_start":43,"column_end":48},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":483},"to":{"krate":2,"index":1970}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":178706,"byte_end":178711,"line_start":2917,"line_end":2917,"column_start":30,"column_end":35},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":483},"to":{"krate":2,"index":1936}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":178826,"byte_end":178834,"line_start":2924,"line_end":2924,"column_start":27,"column_end":35},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":485},"to":{"krate":2,"index":1936}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/bytes.rs","byte_start":179167,"byte_end":179172,"line_start":2936,"line_end":2936,"column_start":15,"column_end":20},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":854},"to":{"krate":2,"index":1623}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/bytes-0.4.12/src/debug.rs","byte_start":179836,"byte_end":179843,"line_start":15,"line_end":15,"column_start":25,"column_end":32},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":861},"to":{"krate":2,"index":6824}}]}