{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5","program":"/home/endre/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","termcolor","/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=595f6372c57e1cea","-C","extra-filename=-595f6372c57e1cea","--out-dir","/home/endre/sp-rust/sp-codegen/target/rls/debug/deps","-L","dependency=/home/endre/sp-rust/sp-codegen/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/endre/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/endre/sp-rust/sp-codegen/target/rls/debug/deps/libtermcolor-595f6372c57e1cea.rmeta"},"prelude":{"crate_id":{"name":"termcolor","disambiguator":[12500590640526461612,5575893469192179831]},"crate_root":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src","external_crates":[{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3103785602532093942,17390144583497853382]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[3916277366462804126,4478459115610208312]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[1713477286964588179,15844277248566971785]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13012427356130990406,14608520140697239788]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6447241057134257354,1413806012037948949]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4393201617425879462,3310437476178738552]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7079830315103279809,4606718705203350064]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5206394019873543407,10667910451093706265]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[9386824491997906070,17212049238264027415]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16927035401729681780,12437521449932722366]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","num":11,"id":{"name":"backtrace","disambiguator":[11652895559356135055,9563436424588767888]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[16517787911197841201,14116661015581648310]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","num":13,"id":{"name":"backtrace_sys","disambiguator":[5448928475534237502,8623809376237663283]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[9897490559936190142,12325087316115451923]}}],"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":0,"byte_end":63727,"line_start":1,"line_end":1913,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":0,"byte_end":63727,"line_start":1,"line_end":1913,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":27},{"krate":0,"index":34},{"krate":0,"index":307},{"krate":0,"index":323},{"krate":0,"index":322},{"krate":0,"index":320},{"krate":0,"index":318},{"krate":0,"index":316},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":51},{"krate":0,"index":64},{"krate":0,"index":67},{"krate":0,"index":70},{"krate":0,"index":78},{"krate":0,"index":82},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":89},{"krate":0,"index":97},{"krate":0,"index":109},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":119},{"krate":0,"index":121},{"krate":0,"index":124},{"krate":0,"index":129},{"krate":0,"index":133},{"krate":0,"index":139},{"krate":0,"index":142},{"krate":0,"index":147},{"krate":0,"index":151},{"krate":0,"index":157},{"krate":0,"index":162},{"krate":0,"index":169},{"krate":0,"index":174},{"krate":0,"index":181},{"krate":0,"index":184},{"krate":0,"index":191},{"krate":0,"index":201},{"krate":0,"index":204},{"krate":0,"index":209},{"krate":0,"index":213},{"krate":0,"index":219},{"krate":0,"index":223},{"krate":0,"index":229},{"krate":0,"index":233},{"krate":0,"index":239},{"krate":0,"index":243},{"krate":0,"index":249},{"krate":0,"index":333},{"krate":0,"index":348},{"krate":0,"index":346},{"krate":0,"index":344},{"krate":0,"index":342},{"krate":0,"index":339},{"krate":0,"index":257},{"krate":0,"index":350},{"krate":0,"index":385},{"krate":0,"index":384},{"krate":0,"index":382},{"krate":0,"index":380},{"krate":0,"index":377},{"krate":0,"index":271},{"krate":0,"index":387},{"krate":0,"index":397},{"krate":0,"index":395},{"krate":0,"index":393},{"krate":0,"index":390},{"krate":0,"index":399},{"krate":0,"index":412},{"krate":0,"index":410},{"krate":0,"index":408},{"krate":0,"index":406},{"krate":0,"index":277},{"krate":0,"index":279},{"krate":0,"index":282},{"krate":0,"index":285},{"krate":0,"index":288},{"krate":0,"index":291},{"krate":0,"index":297},{"krate":0,"index":303}],"decl_id":null,"docs":"This crate provides a cross platform abstraction for writing colored text to\na terminal. Colors are written using either ANSI escape sequences or by\ncommunicating with a Windows console. Much of this API was motivated by use\ninside command line applications, where colors or styles can be configured\nby the end user and/or the environment.","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":2860,"byte_end":2882,"line_start":72,"line_end":72,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":22},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":3207,"byte_end":3217,"line_start":87,"line_end":87,"column_start":11,"column_end":21},"name":"WriteColor","qualname":"::WriteColor","value":"WriteColor: io::Write","parent":null,"children":[{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26}],"decl_id":null,"docs":" This trait describes the behavior of writers that support colored output.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":3313,"byte_end":3327,"line_start":89,"line_end":89,"column_start":8,"column_end":22},"name":"supports_color","qualname":"::WriteColor::supports_color","value":"fn (&self) -> bool","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Returns true if and only if the underlying writer supports colors.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":3643,"byte_end":3652,"line_start":98,"line_end":98,"column_start":8,"column_end":17},"name":"set_color","qualname":"::WriteColor::set_color","value":"fn (&mut self, spec: &ColorSpec) -> io::Result<()>","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Set the color settings of the writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":3882,"byte_end":3887,"line_start":104,"line_end":104,"column_start":8,"column_end":13},"name":"reset","qualname":"::WriteColor::reset","value":"fn (&mut self) -> io::Result<()>","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Reset the current color settings to their original settings.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":4563,"byte_end":4577,"line_start":117,"line_end":117,"column_start":8,"column_end":22},"name":"is_synchronous","qualname":"::WriteColor::is_synchronous","value":"fn (&self) -> bool","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Returns true if and only if the underlying writer must synchronously\n interact with an end user's device in order to control colors. By\n default, this always returns `false`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":308},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":5629,"byte_end":5635,"line_start":145,"line_end":145,"column_start":5,"column_end":11},"name":"Always","qualname":"::ColorChoice::Always","value":"ColorChoice::Always","parent":{"krate":0,"index":307},"children":[],"decl_id":null,"docs":" Try very hard to emit colors. This includes emitting ANSI colors\n on Windows if the console API is unavailable.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":310},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":5760,"byte_end":5770,"line_start":148,"line_end":148,"column_start":5,"column_end":15},"name":"AlwaysAnsi","qualname":"::ColorChoice::AlwaysAnsi","value":"ColorChoice::AlwaysAnsi","parent":{"krate":0,"index":307},"children":[],"decl_id":null,"docs":" AlwaysAnsi is like Always, except it never tries to use anything other\n than emitting ANSI color codes.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":312},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":5942,"byte_end":5946,"line_start":152,"line_end":152,"column_start":5,"column_end":9},"name":"Auto","qualname":"::ColorChoice::Auto","value":"ColorChoice::Auto","parent":{"krate":0,"index":307},"children":[],"decl_id":null,"docs":" Try to use colors, but don't force the issue. If the console isn't\n available on Windows, or if TERM=dumb, for example, then don't use\n colors.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":314},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":5979,"byte_end":5984,"line_start":154,"line_end":154,"column_start":5,"column_end":10},"name":"Never","qualname":"::ColorChoice::Never","value":"ColorChoice::Never","parent":{"krate":0,"index":307},"children":[],"decl_id":null,"docs":" Never emit colors.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":307},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":5484,"byte_end":5495,"line_start":142,"line_end":142,"column_start":10,"column_end":21},"name":"ColorChoice","qualname":"::ColorChoice","value":"ColorChoice::{Always, AlwaysAnsi, Auto, Never}","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":310},{"krate":0,"index":312},{"krate":0,"index":314}],"decl_id":null,"docs":" ColorChoice represents the color preferences of an end user.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":5475,"byte_end":5987,"line_start":142,"line_end":155,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":5475,"byte_end":5987,"line_start":142,"line_end":155,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":82},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":11283,"byte_end":11297,"line_start":318,"line_end":318,"column_start":12,"column_end":26},"name":"StandardStream","qualname":"::StandardStream","value":"StandardStream {  }","parent":null,"children":[{"krate":0,"index":83}],"decl_id":null,"docs":" Satisfies `io::Write` and `WriteColor`, and supports optional coloring\n to either of the standard output streams, stdout and stderr.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":84},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":11655,"byte_end":11673,"line_start":329,"line_end":329,"column_start":12,"column_end":30},"name":"StandardStreamLock","qualname":"::StandardStreamLock","value":"StandardStreamLock {  }","parent":null,"children":[{"krate":0,"index":86}],"decl_id":null,"docs":" `StandardStreamLock` is a locked reference to a `StandardStream`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":87},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":11825,"byte_end":11847,"line_start":334,"line_end":334,"column_start":12,"column_end":34},"name":"BufferedStandardStream","qualname":"::BufferedStandardStream","value":"BufferedStandardStream {  }","parent":null,"children":[{"krate":0,"index":88}],"decl_id":null,"docs":" Like `StandardStream`, but does buffered writing.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":13252,"byte_end":13258,"line_start":371,"line_end":371,"column_start":12,"column_end":18},"name":"stdout","qualname":"<StandardStream>::stdout","value":"fn (choice: ColorChoice) -> StandardStream","parent":null,"children":[],"decl_id":null,"docs":" Create a new `StandardStream` with the given color preferences that\n writes to standard output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":13828,"byte_end":13834,"line_start":384,"line_end":384,"column_start":12,"column_end":18},"name":"stderr","qualname":"<StandardStream>::stderr","value":"fn (choice: ColorChoice) -> StandardStream","parent":null,"children":[],"decl_id":null,"docs":" Create a new `StandardStream` with the given color preferences that\n writes to standard error.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":14296,"byte_end":14300,"line_start":396,"line_end":396,"column_start":12,"column_end":16},"name":"lock","qualname":"<StandardStream>::lock","value":"fn (&self) -> StandardStreamLock","parent":null,"children":[],"decl_id":null,"docs":" Lock the underlying writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":16030,"byte_end":16036,"line_start":445,"line_end":445,"column_start":12,"column_end":18},"name":"stdout","qualname":"<BufferedStandardStream>::stdout","value":"fn (choice: ColorChoice) -> BufferedStandardStream","parent":null,"children":[],"decl_id":null,"docs":" Create a new `BufferedStandardStream` with the given color preferences\n that writes to standard output via a buffered writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":16695,"byte_end":16701,"line_start":461,"line_end":461,"column_start":12,"column_end":18},"name":"stderr","qualname":"<BufferedStandardStream>::stderr","value":"fn (choice: ColorChoice) -> BufferedStandardStream","parent":null,"children":[],"decl_id":null,"docs":" Create a new `BufferedStandardStream` with the given color preferences\n that writes to standard error via a buffered writer.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":169},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":25894,"byte_end":25906,"line_start":744,"line_end":744,"column_start":12,"column_end":24},"name":"BufferWriter","qualname":"::BufferWriter","value":"BufferWriter {  }","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173}],"decl_id":null,"docs":" Writes colored buffers to stdout or stderr.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":28476,"byte_end":28482,"line_start":811,"line_end":811,"column_start":12,"column_end":18},"name":"stdout","qualname":"<BufferWriter>::stdout","value":"fn (choice: ColorChoice) -> BufferWriter","parent":null,"children":[],"decl_id":null,"docs":" Create a new `BufferWriter` that writes to stdout with the given\n color preferences.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":28967,"byte_end":28973,"line_start":823,"line_end":823,"column_start":12,"column_end":18},"name":"stderr","qualname":"<BufferWriter>::stderr","value":"fn (choice: ColorChoice) -> BufferWriter","parent":null,"children":[],"decl_id":null,"docs":" Create a new `BufferWriter` that writes to stderr with the given\n color preferences.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":29250,"byte_end":29259,"line_start":831,"line_end":831,"column_start":12,"column_end":21},"name":"separator","qualname":"<BufferWriter>::separator","value":"fn (&mut self, sep: Option<Vec<u8>>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" If set, the separator given is printed between buffers. By default, no\n separator is printed.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":29567,"byte_end":29573,"line_start":840,"line_end":840,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufferWriter>::buffer","value":"fn (&self) -> Buffer","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Buffer` with the current color preferences.","sig":null,"attributes":[{"value":"cfg(not(windows))","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":29535,"byte_end":29555,"line_start":839,"line_end":839,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":30198,"byte_end":30203,"line_start":858,"line_end":858,"column_start":12,"column_end":17},"name":"print","qualname":"<BufferWriter>::print","value":"fn (&self, buf: &Buffer) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Prints the contents of the given buffer.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":181},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":31899,"byte_end":31905,"line_start":898,"line_end":898,"column_start":12,"column_end":18},"name":"Buffer","qualname":"::Buffer","value":"","parent":null,"children":[],"decl_id":null,"docs":" Write colored text to memory.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":33471,"byte_end":33479,"line_start":946,"line_end":946,"column_start":12,"column_end":20},"name":"no_color","qualname":"<Buffer>::no_color","value":"fn () -> Buffer","parent":null,"children":[],"decl_id":null,"docs":" Create a buffer that drops all color information.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":33623,"byte_end":33627,"line_start":951,"line_end":951,"column_start":12,"column_end":16},"name":"ansi","qualname":"<Buffer>::ansi","value":"fn () -> Buffer","parent":null,"children":[],"decl_id":null,"docs":" Create a buffer that uses ANSI escape sequences.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":33951,"byte_end":33959,"line_start":962,"line_end":962,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Buffer>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if this buffer is empty.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":34071,"byte_end":34074,"line_start":967,"line_end":967,"column_start":12,"column_end":15},"name":"len","qualname":"<Buffer>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of this buffer in bytes.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":34361,"byte_end":34366,"line_start":977,"line_end":977,"column_start":12,"column_end":17},"name":"clear","qualname":"<Buffer>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears this buffer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":34809,"byte_end":34819,"line_start":990,"line_end":990,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Buffer>::into_inner","value":"fn (self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Consume this buffer and return the underlying raw data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":35099,"byte_end":35107,"line_start":1000,"line_end":1000,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<Buffer>::as_slice","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Return the underlying data of the buffer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":35420,"byte_end":35432,"line_start":1010,"line_end":1010,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<Buffer>::as_mut_slice","value":"fn (&mut self) -> &mut [u8]","parent":null,"children":[],"decl_id":null,"docs":" Return the underlying data of the buffer as a mutable slice.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":209},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":37415,"byte_end":37422,"line_start":1080,"line_end":1080,"column_start":12,"column_end":19},"name":"NoColor","qualname":"::NoColor","value":"","parent":null,"children":[],"decl_id":null,"docs":" Satisfies `WriteColor` but ignores all color options.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":37567,"byte_end":37570,"line_start":1085,"line_end":1085,"column_start":12,"column_end":15},"name":"new","qualname":"<NoColor<W>>::new","value":"fn (wtr: W) -> NoColor<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new writer that satisfies `WriteColor` but drops all color\n information.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":37688,"byte_end":37698,"line_start":1088,"line_end":1088,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<NoColor<W>>::into_inner","value":"fn (self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Consume this `NoColor` value and return the inner writer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":37781,"byte_end":37788,"line_start":1091,"line_end":1091,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<NoColor<W>>::get_ref","value":"fn (&self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the inner writer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":37882,"byte_end":37889,"line_start":1094,"line_end":1094,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<NoColor<W>>::get_mut","value":"fn (&mut self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to the inner writer.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":229},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":38576,"byte_end":38580,"line_start":1124,"line_end":1124,"column_start":12,"column_end":16},"name":"Ansi","qualname":"::Ansi","value":"","parent":null,"children":[],"decl_id":null,"docs":" Satisfies `WriteColor` using standard ANSI escape sequences.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":38727,"byte_end":38730,"line_start":1129,"line_end":1129,"column_start":12,"column_end":15},"name":"new","qualname":"<Ansi<W>>::new","value":"fn (wtr: W) -> Ansi<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new writer that satisfies `WriteColor` using standard ANSI\n escape sequences.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":38839,"byte_end":38849,"line_start":1132,"line_end":1132,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Ansi<W>>::into_inner","value":"fn (self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Consume this `Ansi` value and return the inner writer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":38932,"byte_end":38939,"line_start":1135,"line_end":1135,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Ansi<W>>::get_ref","value":"fn (&self) -> &W","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the inner writer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":39033,"byte_end":39040,"line_start":1138,"line_end":1138,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Ansi<W>>::get_mut","value":"fn (&mut self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to the inner writer.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":333},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":47583,"byte_end":47592,"line_start":1413,"line_end":1413,"column_start":12,"column_end":21},"name":"ColorSpec","qualname":"::ColorSpec","value":"ColorSpec {  }","parent":null,"children":[{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338}],"decl_id":null,"docs":" A color specification.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":47572,"byte_end":47710,"line_start":1413,"line_end":1419,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":47811,"byte_end":47814,"line_start":1423,"line_end":1423,"column_start":12,"column_end":15},"name":"new","qualname":"<ColorSpec>::new","value":"fn () -> ColorSpec","parent":null,"children":[],"decl_id":null,"docs":" Create a new color specification that has no colors or styles.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":47913,"byte_end":47915,"line_start":1428,"line_end":1428,"column_start":12,"column_end":14},"name":"fg","qualname":"<ColorSpec>::fg","value":"fn (&self) -> Option<&Color>","parent":null,"children":[],"decl_id":null,"docs":" Get the foreground color.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":48014,"byte_end":48020,"line_start":1431,"line_end":1431,"column_start":12,"column_end":18},"name":"set_fg","qualname":"<ColorSpec>::set_fg","value":"fn (&mut self, color: Option<Color>) -> &mut ColorSpec","parent":null,"children":[],"decl_id":null,"docs":" Set the foreground color.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":48170,"byte_end":48172,"line_start":1437,"line_end":1437,"column_start":12,"column_end":14},"name":"bg","qualname":"<ColorSpec>::bg","value":"fn (&self) -> Option<&Color>","parent":null,"children":[],"decl_id":null,"docs":" Get the background color.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":48271,"byte_end":48277,"line_start":1440,"line_end":1440,"column_start":12,"column_end":18},"name":"set_bg","qualname":"<ColorSpec>::set_bg","value":"fn (&mut self, color: Option<Color>) -> &mut ColorSpec","parent":null,"children":[],"decl_id":null,"docs":" Set the background color.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":48513,"byte_end":48517,"line_start":1448,"line_end":1448,"column_start":12,"column_end":16},"name":"bold","qualname":"<ColorSpec>::bold","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Get whether this is bold or not.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":48685,"byte_end":48693,"line_start":1453,"line_end":1453,"column_start":12,"column_end":20},"name":"set_bold","qualname":"<ColorSpec>::set_bold","value":"fn (&mut self, yes: bool) -> &mut ColorSpec","parent":null,"children":[],"decl_id":null,"docs":" Set whether the text is bolded or not.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":48922,"byte_end":48931,"line_start":1461,"line_end":1461,"column_start":12,"column_end":21},"name":"underline","qualname":"<ColorSpec>::underline","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Get whether this is underline or not.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":49113,"byte_end":49126,"line_start":1466,"line_end":1466,"column_start":12,"column_end":25},"name":"set_underline","qualname":"<ColorSpec>::set_underline","value":"fn (&mut self, yes: bool) -> &mut ColorSpec","parent":null,"children":[],"decl_id":null,"docs":" Set whether the text is underlined or not.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":49580,"byte_end":49587,"line_start":1479,"line_end":1479,"column_start":12,"column_end":19},"name":"intense","qualname":"<ColorSpec>::intense","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Get whether this is intense or not.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":49986,"byte_end":49997,"line_start":1489,"line_end":1489,"column_start":12,"column_end":23},"name":"set_intense","qualname":"<ColorSpec>::set_intense","value":"fn (&mut self, yes: bool) -> &mut ColorSpec","parent":null,"children":[],"decl_id":null,"docs":" Set whether the text is intense or not.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":50173,"byte_end":50180,"line_start":1495,"line_end":1495,"column_start":12,"column_end":19},"name":"is_none","qualname":"<ColorSpec>::is_none","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this color specification has no colors or styles.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":50400,"byte_end":50405,"line_start":1501,"line_end":1501,"column_start":12,"column_end":17},"name":"clear","qualname":"<ColorSpec>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears this color specification so that it has no color/style settings.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":351},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":52139,"byte_end":52144,"line_start":1550,"line_end":1550,"column_start":5,"column_end":10},"name":"Black","qualname":"::Color::Black","value":"Color::Black","parent":{"krate":0,"index":350},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":353},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":52150,"byte_end":52154,"line_start":1551,"line_end":1551,"column_start":5,"column_end":9},"name":"Blue","qualname":"::Color::Blue","value":"Color::Blue","parent":{"krate":0,"index":350},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":355},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":52160,"byte_end":52165,"line_start":1552,"line_end":1552,"column_start":5,"column_end":10},"name":"Green","qualname":"::Color::Green","value":"Color::Green","parent":{"krate":0,"index":350},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":357},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":52171,"byte_end":52174,"line_start":1553,"line_end":1553,"column_start":5,"column_end":8},"name":"Red","qualname":"::Color::Red","value":"Color::Red","parent":{"krate":0,"index":350},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":359},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":52180,"byte_end":52184,"line_start":1554,"line_end":1554,"column_start":5,"column_end":9},"name":"Cyan","qualname":"::Color::Cyan","value":"Color::Cyan","parent":{"krate":0,"index":350},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":361},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":52190,"byte_end":52197,"line_start":1555,"line_end":1555,"column_start":5,"column_end":12},"name":"Magenta","qualname":"::Color::Magenta","value":"Color::Magenta","parent":{"krate":0,"index":350},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":363},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":52203,"byte_end":52209,"line_start":1556,"line_end":1556,"column_start":5,"column_end":11},"name":"Yellow","qualname":"::Color::Yellow","value":"Color::Yellow","parent":{"krate":0,"index":350},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":365},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":52215,"byte_end":52220,"line_start":1557,"line_end":1557,"column_start":5,"column_end":10},"name":"White","qualname":"::Color::White","value":"Color::White","parent":{"krate":0,"index":350},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":367},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":52226,"byte_end":52233,"line_start":1558,"line_end":1558,"column_start":5,"column_end":12},"name":"Ansi256","qualname":"::Color::Ansi256","value":"Color::Ansi256(u8)","parent":{"krate":0,"index":350},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":370},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":52243,"byte_end":52246,"line_start":1559,"line_end":1559,"column_start":5,"column_end":8},"name":"Rgb","qualname":"::Color::Rgb","value":"Color::Rgb(u8, u8, u8)","parent":{"krate":0,"index":350},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":375},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":52283,"byte_end":52298,"line_start":1561,"line_end":1561,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::Color::__Nonexhaustive","value":"Color::__Nonexhaustive","parent":{"krate":0,"index":350},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":350},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":52127,"byte_end":52132,"line_start":1549,"line_end":1549,"column_start":10,"column_end":15},"name":"Color","qualname":"::Color","value":"Color::{Black, Blue, Green, Red, Cyan, Magenta, Yellow, White, Ansi256, Rgb, __Nonexhaustive}","parent":null,"children":[{"krate":0,"index":351},{"krate":0,"index":353},{"krate":0,"index":355},{"krate":0,"index":357},{"krate":0,"index":359},{"krate":0,"index":361},{"krate":0,"index":363},{"krate":0,"index":365},{"krate":0,"index":367},{"krate":0,"index":370},{"krate":0,"index":375}],"decl_id":null,"docs":" The set of available colors for the terminal foreground/background.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":52050,"byte_end":52072,"line_start":1547,"line_end":1547,"column_start":1,"column_end":23}},{"value":"structural_match","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":52118,"byte_end":52301,"line_start":1549,"line_end":1562,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":52118,"byte_end":52301,"line_start":1549,"line_end":1562,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":387},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":56743,"byte_end":56758,"line_start":1671,"line_end":1671,"column_start":12,"column_end":27},"name":"ParseColorError","qualname":"::ParseColorError","value":"ParseColorError {  }","parent":null,"children":[{"krate":0,"index":388},{"krate":0,"index":389}],"decl_id":null,"docs":" An error from parsing an invalid color specification.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":56732,"byte_end":56812,"line_start":1671,"line_end":1674,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":57038,"byte_end":57045,"line_start":1685,"line_end":1685,"column_start":12,"column_end":19},"name":"invalid","qualname":"<ParseColorError>::invalid","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Return the string that couldn't be parsed as a valid color.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":5039,"byte_end":5042,"line_start":131,"line_end":131,"column_start":45,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":5994,"byte_end":6005,"line_start":157,"line_end":157,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":8275,"byte_end":8291,"line_start":231,"line_end":231,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":9624,"byte_end":9640,"line_start":269,"line_end":269,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":10598,"byte_end":10618,"line_start":298,"line_end":298,"column_start":24,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":12850,"byte_end":12864,"line_start":362,"line_end":362,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":14396,"byte_end":14414,"line_start":401,"line_end":401,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":15590,"byte_end":15612,"line_start":436,"line_end":436,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":16953,"byte_end":16964,"line_start":470,"line_end":470,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":18906,"byte_end":18920,"line_start":521,"line_end":521,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":19115,"byte_end":19129,"line_start":529,"line_end":529,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":19519,"byte_end":19537,"line_start":545,"line_end":545,"column_start":24,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":19740,"byte_end":19758,"line_start":553,"line_end":553,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":20148,"byte_end":20170,"line_start":569,"line_end":569,"column_start":20,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":20365,"byte_end":20387,"line_start":577,"line_end":577,"column_start":21,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":20863,"byte_end":20874,"line_start":596,"line_end":596,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":149},{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":21586,"byte_end":21597,"line_start":618,"line_end":618,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":23037,"byte_end":23052,"line_start":664,"line_end":664,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":23878,"byte_end":23893,"line_start":686,"line_end":686,"column_start":39,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":26123,"byte_end":26135,"line_start":753,"line_end":753,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":32468,"byte_end":32474,"line_start":914,"line_end":914,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":35718,"byte_end":35724,"line_start":1020,"line_end":1020,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":202},{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":36367,"byte_end":36373,"line_start":1042,"line_end":1042,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":37446,"byte_end":37453,"line_start":1082,"line_end":1082,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":37963,"byte_end":37970,"line_start":1097,"line_end":1097,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":221},{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":38206,"byte_end":38213,"line_start":1109,"line_end":1109,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":38604,"byte_end":38608,"line_start":1126,"line_end":1126,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":39114,"byte_end":39118,"line_start":1141,"line_end":1141,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":241},{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":39354,"byte_end":39358,"line_start":1153,"line_end":1153,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":40102,"byte_end":40106,"line_start":1184,"line_end":1184,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":47717,"byte_end":47726,"line_start":1421,"line_end":1421,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":52308,"byte_end":52313,"line_start":1564,"line_end":1564,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":56941,"byte_end":56956,"line_start":1683,"line_end":1683,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":57102,"byte_end":57117,"line_start":1688,"line_end":1688,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":57435,"byte_end":57450,"line_start":1699,"line_end":1699,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":58341,"byte_end":58346,"line_start":1723,"line_end":1723,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":58976,"byte_end":58995,"line_start":1747,"line_end":1747,"column_start":20,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":59782,"byte_end":59801,"line_start":1776,"line_end":1776,"column_start":36,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":60145,"byte_end":60164,"line_start":1785,"line_end":1785,"column_start":34,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":3223,"byte_end":3228,"line_start":87,"line_end":87,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":1,"index":2814},"to":{"krate":0,"index":22}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":5039,"byte_end":5042,"line_start":131,"line_end":131,"column_start":45,"column_end":48},"kind":{"Impl":{"id":0}},"from":{"krate":5,"index":75},"to":{"krate":0,"index":22}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":5994,"byte_end":6005,"line_start":157,"line_end":157,"column_start":6,"column_end":17},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":8275,"byte_end":8291,"line_start":231,"line_end":231,"column_start":6,"column_end":22},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":51},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":9624,"byte_end":9640,"line_start":269,"line_end":269,"column_start":20,"column_end":36},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":51},"to":{"krate":1,"index":2814}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":10598,"byte_end":10618,"line_start":298,"line_end":298,"column_start":24,"column_end":44},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":70},"to":{"krate":1,"index":2814}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":12850,"byte_end":12864,"line_start":362,"line_end":362,"column_start":6,"column_end":20},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":82},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":14396,"byte_end":14414,"line_start":401,"line_end":401,"column_start":10,"column_end":28},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":84},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":15590,"byte_end":15612,"line_start":436,"line_end":436,"column_start":6,"column_end":28},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":87},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":16953,"byte_end":16964,"line_start":470,"line_end":470,"column_start":6,"column_end":17},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":89},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":18906,"byte_end":18920,"line_start":521,"line_end":521,"column_start":20,"column_end":34},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":82},"to":{"krate":1,"index":2814}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":19115,"byte_end":19129,"line_start":529,"line_end":529,"column_start":21,"column_end":35},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":82},"to":{"krate":0,"index":22}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":19519,"byte_end":19537,"line_start":545,"line_end":545,"column_start":24,"column_end":42},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":84},"to":{"krate":1,"index":2814}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":19740,"byte_end":19758,"line_start":553,"line_end":553,"column_start":25,"column_end":43},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":84},"to":{"krate":0,"index":22}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":20148,"byte_end":20170,"line_start":569,"line_end":569,"column_start":20,"column_end":42},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":87},"to":{"krate":1,"index":2814}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":20365,"byte_end":20387,"line_start":577,"line_end":577,"column_start":21,"column_end":43},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":87},"to":{"krate":0,"index":22}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":20863,"byte_end":20874,"line_start":596,"line_end":596,"column_start":34,"column_end":45},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":89},"to":{"krate":1,"index":2814}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":21586,"byte_end":21597,"line_start":618,"line_end":618,"column_start":35,"column_end":46},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":89},"to":{"krate":0,"index":22}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":23037,"byte_end":23052,"line_start":664,"line_end":664,"column_start":38,"column_end":53},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":97},"to":{"krate":1,"index":2814}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":23878,"byte_end":23893,"line_start":686,"line_end":686,"column_start":39,"column_end":54},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":97},"to":{"krate":0,"index":22}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":26123,"byte_end":26135,"line_start":753,"line_end":753,"column_start":6,"column_end":18},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":169},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":32468,"byte_end":32474,"line_start":914,"line_end":914,"column_start":6,"column_end":12},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":181},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":35718,"byte_end":35724,"line_start":1020,"line_end":1020,"column_start":20,"column_end":26},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":181},"to":{"krate":1,"index":2814}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":36367,"byte_end":36373,"line_start":1042,"line_end":1042,"column_start":21,"column_end":27},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":181},"to":{"krate":0,"index":22}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":37446,"byte_end":37453,"line_start":1082,"line_end":1082,"column_start":16,"column_end":23},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":209},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":37963,"byte_end":37970,"line_start":1097,"line_end":1097,"column_start":34,"column_end":41},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":209},"to":{"krate":1,"index":2814}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":38206,"byte_end":38213,"line_start":1109,"line_end":1109,"column_start":35,"column_end":42},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":209},"to":{"krate":0,"index":22}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":38604,"byte_end":38608,"line_start":1126,"line_end":1126,"column_start":16,"column_end":20},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":229},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":39114,"byte_end":39118,"line_start":1141,"line_end":1141,"column_start":34,"column_end":38},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":229},"to":{"krate":1,"index":2814}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":39354,"byte_end":39358,"line_start":1153,"line_end":1153,"column_start":35,"column_end":39},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":229},"to":{"krate":0,"index":22}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":40102,"byte_end":40106,"line_start":1184,"line_end":1184,"column_start":20,"column_end":24},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":229},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":47717,"byte_end":47726,"line_start":1421,"line_end":1421,"column_start":6,"column_end":15},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":333},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":52308,"byte_end":52313,"line_start":1564,"line_end":1564,"column_start":6,"column_end":11},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":350},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":56941,"byte_end":56956,"line_start":1683,"line_end":1683,"column_start":6,"column_end":21},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":387},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":57102,"byte_end":57117,"line_start":1688,"line_end":1688,"column_start":23,"column_end":38},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":387},"to":{"krate":1,"index":1542}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":57435,"byte_end":57450,"line_start":1699,"line_end":1699,"column_start":23,"column_end":38},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":387},"to":{"krate":2,"index":6826}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":58341,"byte_end":58346,"line_start":1723,"line_end":1723,"column_start":18,"column_end":23},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":350},"to":{"krate":2,"index":6022}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":58976,"byte_end":58995,"line_start":1747,"line_end":1747,"column_start":20,"column_end":39},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":288},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":59782,"byte_end":59801,"line_start":1776,"line_end":1776,"column_start":36,"column_end":55},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":288},"to":{"krate":0,"index":22}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/termcolor-1.0.5/src/lib.rs","byte_start":60145,"byte_end":60164,"line_start":1785,"line_end":1785,"column_start":34,"column_end":53},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":288},"to":{"krate":1,"index":2814}}]}