{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2","program":"/home/endre/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","slab","/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=251e8c013d3cd88f","-C","extra-filename=-251e8c013d3cd88f","--out-dir","/home/endre/sp-rust/sp-codegen/target/rls/debug/deps","-L","dependency=/home/endre/sp-rust/sp-codegen/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/endre/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/endre/sp-rust/sp-codegen/target/rls/debug/deps/libslab-251e8c013d3cd88f.rmeta"},"prelude":{"crate_id":{"name":"slab","disambiguator":[10638137633684842232,12136029273531708476]},"crate_root":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src","external_crates":[{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3103785602532093942,17390144583497853382]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[3916277366462804126,4478459115610208312]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[1713477286964588179,15844277248566971785]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13012427356130990406,14608520140697239788]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6447241057134257354,1413806012037948949]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4393201617425879462,3310437476178738552]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7079830315103279809,4606718705203350064]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5206394019873543407,10667910451093706265]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[9386824491997906070,17212049238264027415]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16927035401729681780,12437521449932722366]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","num":11,"id":{"name":"backtrace","disambiguator":[11652895559356135055,9563436424588767888]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[16517787911197841201,14116661015581648310]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","num":13,"id":{"name":"backtrace_sys","disambiguator":[5448928475534237502,8623809376237663283]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[9897490559936190142,12325087316115451923]}}],"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":0,"byte_end":26640,"line_start":1,"line_end":977,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":0,"byte_end":26640,"line_start":1,"line_end":977,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":116},{"krate":0,"index":121},{"krate":0,"index":18},{"krate":0,"index":124},{"krate":0,"index":129},{"krate":0,"index":21},{"krate":0,"index":26},{"krate":0,"index":31},{"krate":0,"index":133},{"krate":0,"index":141},{"krate":0,"index":36},{"krate":0,"index":62},{"krate":0,"index":66},{"krate":0,"index":69},{"krate":0,"index":75},{"krate":0,"index":81},{"krate":0,"index":84},{"krate":0,"index":88},{"krate":0,"index":92},{"krate":0,"index":96},{"krate":0,"index":101},{"krate":0,"index":106},{"krate":0,"index":111}],"decl_id":null,"docs":" Pre-allocated storage for a uniform data type.","sig":null,"attributes":[{"value":"deny(warnings, missing_docs, missing_debug_implementations)","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":54,"byte_end":117,"line_start":2,"line_end":2,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":116},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":4012,"byte_end":4016,"line_start":116,"line_end":116,"column_start":12,"column_end":16},"name":"Slab","qualname":"::Slab","value":"Slab {  }","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120}],"decl_id":null,"docs":" Pre-allocated storage for a uniform data type","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":124},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":4859,"byte_end":4870,"line_start":157,"line_end":157,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128}],"decl_id":null,"docs":" A handle to a vacant entry in a `Slab`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":21},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":4994,"byte_end":4998,"line_start":163,"line_end":163,"column_start":12,"column_end":16},"name":"Iter","qualname":"::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":24},{"krate":0,"index":25}],"decl_id":null,"docs":" An iterator over the values stored in the `Slab`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":26},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":5148,"byte_end":5155,"line_start":169,"line_end":169,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":29},{"krate":0,"index":30}],"decl_id":null,"docs":" A mutable iterator over the values stored in the `Slab`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":31},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":5283,"byte_end":5288,"line_start":175,"line_end":175,"column_start":12,"column_end":17},"name":"Drain","qualname":"::Drain","value":"","parent":null,"children":[],"decl_id":null,"docs":" A draining iterator for `Slab`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":5753,"byte_end":5756,"line_start":195,"line_end":195,"column_start":12,"column_end":15},"name":"new","qualname":"<Slab<T>>::new","value":"fn () -> Slab<T>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new, empty `Slab`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":6796,"byte_end":6809,"line_start":226,"line_end":226,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Slab<T>>::with_capacity","value":"fn (capacity: usize) -> Slab<T>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new, empty `Slab` with the specified capacity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":7230,"byte_end":7238,"line_start":243,"line_end":243,"column_start":12,"column_end":20},"name":"capacity","qualname":"<Slab<T>>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of values the slab can store without reallocating.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":8284,"byte_end":8291,"line_start":273,"line_end":273,"column_start":12,"column_end":19},"name":"reserve","qualname":"<Slab<T>>::reserve","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserve capacity for at least `additional` more values to be stored\n without allocating.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":9522,"byte_end":9535,"line_start":307,"line_end":307,"column_start":12,"column_end":25},"name":"reserve_exact","qualname":"<Slab<T>>::reserve_exact","value":"fn (&mut self, additional: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reserve the minimum capacity required to store exactly `additional`\n more values.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":10892,"byte_end":10905,"line_start":355,"line_end":355,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<Slab<T>>::shrink_to_fit","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrink the capacity of the slab as much as possible.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":11265,"byte_end":11270,"line_start":374,"line_end":374,"column_start":12,"column_end":17},"name":"clear","qualname":"<Slab<T>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear the slab of all values.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":11652,"byte_end":11655,"line_start":394,"line_end":394,"column_start":12,"column_end":15},"name":"len","qualname":"<Slab<T>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of stored values.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":11993,"byte_end":12001,"line_start":410,"line_end":410,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Slab<T>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if there are no values stored in the slab.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":12836,"byte_end":12840,"line_start":438,"line_end":438,"column_start":12,"column_end":16},"name":"iter","qualname":"<Slab<T>>::iter","value":"fn (&self) -> Iter<T>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the slab.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":13726,"byte_end":13734,"line_start":470,"line_end":470,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Slab<T>>::iter_mut","value":"fn (&mut self) -> IterMut<T>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator that allows modifying each value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":14302,"byte_end":14305,"line_start":492,"line_end":492,"column_start":12,"column_end":15},"name":"get","qualname":"<Slab<T>>::get","value":"fn (&self, key: usize) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the value associated with the given key.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":14971,"byte_end":14978,"line_start":516,"line_end":516,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Slab<T>>::get_mut","value":"fn (&mut self, key: usize) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to the value associated with the given key.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":15598,"byte_end":15611,"line_start":539,"line_end":539,"column_start":19,"column_end":32},"name":"get_unchecked","qualname":"<Slab<T>>::get_unchecked","value":"fn (&self, key: usize) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the value associated with the given key without\n performing bounds checking.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":16283,"byte_end":16300,"line_start":565,"line_end":565,"column_start":19,"column_end":36},"name":"get_unchecked_mut","qualname":"<Slab<T>>::get_unchecked_mut","value":"fn (&mut self, key: usize) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to the value associated with the given key\n without performing bounds checking.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":17128,"byte_end":17134,"line_start":590,"line_end":590,"column_start":12,"column_end":18},"name":"insert","qualname":"<Slab<T>>::insert","value":"fn (&mut self, val: T) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Insert a value in the slab, returning key assigned to the value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":17943,"byte_end":17955,"line_start":621,"line_end":621,"column_start":12,"column_end":24},"name":"vacant_entry","qualname":"<Slab<T>>::vacant_entry","value":"fn (&mut self) -> VacantEntry<T>","parent":null,"children":[],"decl_id":null,"docs":" Return a handle to a vacant entry allowing for further manipulation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":19098,"byte_end":19104,"line_start":666,"line_end":666,"column_start":12,"column_end":18},"name":"remove","qualname":"<Slab<T>>::remove","value":"fn (&mut self, key: usize) -> T","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the value associated with the given key.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":19998,"byte_end":20006,"line_start":699,"line_end":699,"column_start":12,"column_end":20},"name":"contains","qualname":"<Slab<T>>::contains","value":"fn (&self, key: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if a value is associated with the given key.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":20961,"byte_end":20967,"line_start":733,"line_end":733,"column_start":12,"column_end":18},"name":"retain","qualname":"<Slab<T>>::retain","value":"fn <F> (&mut self, mut f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Retain only the elements specified by the predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":22095,"byte_end":22100,"line_start":776,"line_end":776,"column_start":12,"column_end":17},"name":"drain","qualname":"<Slab<T>>::drain","value":"fn (&mut self) -> Drain<T>","parent":null,"children":[],"decl_id":null,"docs":" Return a draining iterator that removes all elements from the slab and\n yields the removed items.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":24719,"byte_end":24725,"line_start":890,"line_end":890,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"fn (self, val: T) -> &'a mut T","parent":null,"children":[],"decl_id":null,"docs":" Insert a value in the entry, returning a mutable reference to the value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":25479,"byte_end":25482,"line_start":920,"line_end":920,"column_start":12,"column_end":15},"name":"key","qualname":"<VacantEntry>::key","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the key associated with this entry.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":4297,"byte_end":4301,"line_start":128,"line_end":128,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":5408,"byte_end":5412,"line_start":183,"line_end":183,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":59},{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":22248,"byte_end":22252,"line_start":783,"line_end":783,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":22487,"byte_end":22491,"line_start":794,"line_end":794,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":23084,"byte_end":23088,"line_start":821,"line_end":821,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":23356,"byte_end":23360,"line_start":835,"line_end":835,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":23643,"byte_end":23650,"line_start":847,"line_end":847,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":23936,"byte_end":23941,"line_start":859,"line_end":859,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":24104,"byte_end":24115,"line_start":867,"line_end":867,"column_start":13,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":25573,"byte_end":25577,"line_start":927,"line_end":927,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":25977,"byte_end":25984,"line_start":946,"line_end":946,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":26394,"byte_end":26399,"line_start":965,"line_end":965,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":4297,"byte_end":4301,"line_start":128,"line_end":128,"column_start":21,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":116},"to":{"krate":2,"index":2080}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":5408,"byte_end":5412,"line_start":183,"line_end":183,"column_start":9,"column_end":13},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":116},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":22248,"byte_end":22252,"line_start":783,"line_end":783,"column_start":31,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":116},"to":{"krate":2,"index":1677}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":22487,"byte_end":22491,"line_start":794,"line_end":794,"column_start":34,"column_end":38},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":116},"to":{"krate":2,"index":1681}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":23084,"byte_end":23088,"line_start":821,"line_end":821,"column_start":24,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":116},"to":{"krate":2,"index":6824}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":23356,"byte_end":23360,"line_start":835,"line_end":835,"column_start":32,"column_end":36},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":21},"to":{"krate":2,"index":6824}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":23643,"byte_end":23650,"line_start":847,"line_end":847,"column_start":32,"column_end":39},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":26},"to":{"krate":2,"index":6824}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":23936,"byte_end":23941,"line_start":859,"line_end":859,"column_start":32,"column_end":37},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":31},"to":{"krate":2,"index":6824}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":24104,"byte_end":24115,"line_start":867,"line_end":867,"column_start":13,"column_end":24},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":124},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":25573,"byte_end":25577,"line_start":927,"line_end":927,"column_start":26,"column_end":30},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":21},"to":{"krate":2,"index":3202}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":25977,"byte_end":25984,"line_start":946,"line_end":946,"column_start":26,"column_end":33},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":26},"to":{"krate":2,"index":3202}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/slab-0.4.2/src/lib.rs","byte_start":26394,"byte_end":26399,"line_start":965,"line_end":965,"column_start":26,"column_end":31},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":31},"to":{"krate":2,"index":3202}}]}