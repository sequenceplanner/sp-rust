{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4","program":"/home/endre/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","uuid","/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"rand\"","--cfg","feature=\"serde\"","--cfg","feature=\"std\"","--cfg","feature=\"v4\"","-C","metadata=9df58b02b3cf3b6f","-C","extra-filename=-9df58b02b3cf3b6f","--out-dir","/home/endre/sp-rust/sp-codegen/target/rls/debug/deps","-L","dependency=/home/endre/sp-rust/sp-codegen/target/rls/debug/deps","--extern","rand=/home/endre/sp-rust/sp-codegen/target/rls/debug/deps/librand-9f8d5aed8f24a0c9.rmeta","--extern","serde=/home/endre/sp-rust/sp-codegen/target/rls/debug/deps/libserde-c86989c5bc7ffb43.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/endre/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/endre/sp-rust/sp-codegen/target/rls/debug/deps/libuuid-9df58b02b3cf3b6f.rmeta"},"prelude":{"crate_id":{"name":"uuid","disambiguator":[17388664513489275229,14020475786916606235]},"crate_root":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src","external_crates":[{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3103785602532093942,17390144583497853382]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[3916277366462804126,4478459115610208312]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[1713477286964588179,15844277248566971785]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13012427356130990406,14608520140697239788]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6447241057134257354,1413806012037948949]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4393201617425879462,3310437476178738552]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7079830315103279809,4606718705203350064]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5206394019873543407,10667910451093706265]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[9386824491997906070,17212049238264027415]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16927035401729681780,12437521449932722366]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","num":11,"id":{"name":"backtrace","disambiguator":[11652895559356135055,9563436424588767888]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[16517787911197841201,14116661015581648310]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","num":13,"id":{"name":"backtrace_sys","disambiguator":[5448928475534237502,8623809376237663283]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[9897490559936190142,12325087316115451923]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","num":15,"id":{"name":"rand","disambiguator":[10469804768232524933,9718683164962948172]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","num":16,"id":{"name":"rand_jitter","disambiguator":[3039775829019773353,13432740874318599482]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","num":17,"id":{"name":"rand_core","disambiguator":[12976026647228967848,3376161104954716142]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","num":18,"id":{"name":"rand_os","disambiguator":[6154806385026269696,16027505214252794836]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","num":19,"id":{"name":"libc","disambiguator":[16951308386329787197,9238021607635720415]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","num":20,"id":{"name":"rand_isaac","disambiguator":[17474421099431809469,12490111539732710728]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","num":21,"id":{"name":"rand_core","disambiguator":[15445939626396927231,16105632996978749532]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","num":22,"id":{"name":"rand_chacha","disambiguator":[709501613336370756,2115921289705800033]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","num":23,"id":{"name":"rand_hc","disambiguator":[4639385590061501300,12452759373326152982]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","num":24,"id":{"name":"rand_pcg","disambiguator":[10130334177229014,8819613049385480538]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","num":25,"id":{"name":"rand_xorshift","disambiguator":[6978997933165517166,16226752816046616394]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","num":26,"id":{"name":"serde","disambiguator":[2412480804070767695,9800532736681304761]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","num":27,"id":{"name":"serde_derive","disambiguator":[15639351337508931605,3144188878594621130]}}],"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":481,"byte_end":48435,"line_start":12,"line_end":1575,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":511},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/prelude.rs","byte_start":103408,"byte_end":103415,"line_start":51,"line_end":51,"column_start":17,"column_end":24},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":205}},{"kind":"Use","ref_id":{"krate":0,"index":289},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/prelude.rs","byte_start":103417,"byte_end":103422,"line_start":51,"line_end":51,"column_start":26,"column_end":31},"alias_span":null,"name":"Bytes","value":"","parent":{"krate":0,"index":205}},{"kind":"Use","ref_id":{"krate":0,"index":639},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/prelude.rs","byte_start":103424,"byte_end":103429,"line_start":51,"line_end":51,"column_start":33,"column_end":38},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":205}},{"kind":"Use","ref_id":{"krate":0,"index":705},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/prelude.rs","byte_start":103431,"byte_end":103435,"line_start":51,"line_end":51,"column_start":40,"column_end":44},"alias_span":null,"name":"Uuid","value":"","parent":{"krate":0,"index":205}},{"kind":"Use","ref_id":{"krate":0,"index":688},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/prelude.rs","byte_start":103437,"byte_end":103444,"line_start":51,"line_end":51,"column_start":46,"column_end":53},"alias_span":null,"name":"Variant","value":"","parent":{"krate":0,"index":205}},{"kind":"Use","ref_id":{"krate":0,"index":667},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/prelude.rs","byte_start":103446,"byte_end":103453,"line_start":51,"line_end":51,"column_start":55,"column_end":62},"alias_span":null,"name":"Version","value":"","parent":{"krate":0,"index":205}},{"kind":"Use","ref_id":{"krate":0,"index":511},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":5119,"byte_end":5126,"line_start":160,"line_end":160,"column_start":18,"column_end":25},"alias_span":null,"name":"Builder","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":481,"byte_end":48435,"line_start":12,"line_end":1575,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":168},{"krate":0,"index":181},{"krate":0,"index":205},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":241},{"krate":0,"index":276},{"krate":0,"index":282},{"krate":0,"index":289},{"krate":0,"index":611},{"krate":0,"index":637},{"krate":0,"index":636},{"krate":0,"index":634},{"krate":0,"index":632},{"krate":0,"index":629},{"krate":0,"index":627},{"krate":0,"index":624},{"krate":0,"index":614},{"krate":0,"index":639},{"krate":0,"index":665},{"krate":0,"index":664},{"krate":0,"index":662},{"krate":0,"index":660},{"krate":0,"index":657},{"krate":0,"index":655},{"krate":0,"index":652},{"krate":0,"index":646},{"krate":0,"index":667},{"krate":0,"index":686},{"krate":0,"index":684},{"krate":0,"index":683},{"krate":0,"index":681},{"krate":0,"index":688},{"krate":0,"index":703},{"krate":0,"index":702},{"krate":0,"index":700},{"krate":0,"index":698},{"krate":0,"index":705},{"krate":0,"index":725},{"krate":0,"index":724},{"krate":0,"index":722},{"krate":0,"index":719},{"krate":0,"index":717},{"krate":0,"index":714},{"krate":0,"index":708},{"krate":0,"index":291},{"krate":0,"index":295}],"decl_id":null,"docs":" Generate and parse UUIDs.","sig":null,"attributes":[{"value":"deny(missing_copy_implementations,\n       missing_debug_implementations,\n       missing_docs)","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":4158,"byte_end":4255,"line_start":119,"line_end":123,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":15},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"adapter","qualname":"::adapter","value":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":93},{"krate":0,"index":334},{"krate":0,"index":358},{"krate":0,"index":357},{"krate":0,"index":355},{"krate":0,"index":353},{"krate":0,"index":351},{"krate":0,"index":348},{"krate":0,"index":346},{"krate":0,"index":343},{"krate":0,"index":337},{"krate":0,"index":360},{"krate":0,"index":390},{"krate":0,"index":388},{"krate":0,"index":385},{"krate":0,"index":382},{"krate":0,"index":378},{"krate":0,"index":375},{"krate":0,"index":371},{"krate":0,"index":364},{"krate":0,"index":393},{"krate":0,"index":417},{"krate":0,"index":416},{"krate":0,"index":414},{"krate":0,"index":412},{"krate":0,"index":410},{"krate":0,"index":407},{"krate":0,"index":405},{"krate":0,"index":402},{"krate":0,"index":396},{"krate":0,"index":419},{"krate":0,"index":449},{"krate":0,"index":447},{"krate":0,"index":444},{"krate":0,"index":441},{"krate":0,"index":437},{"krate":0,"index":434},{"krate":0,"index":430},{"krate":0,"index":423},{"krate":0,"index":452},{"krate":0,"index":476},{"krate":0,"index":475},{"krate":0,"index":473},{"krate":0,"index":471},{"krate":0,"index":469},{"krate":0,"index":466},{"krate":0,"index":464},{"krate":0,"index":461},{"krate":0,"index":455},{"krate":0,"index":478},{"krate":0,"index":508},{"krate":0,"index":506},{"krate":0,"index":503},{"krate":0,"index":500},{"krate":0,"index":496},{"krate":0,"index":493},{"krate":0,"index":489},{"krate":0,"index":482},{"krate":0,"index":106},{"krate":0,"index":113},{"krate":0,"index":115},{"krate":0,"index":117},{"krate":0,"index":119},{"krate":0,"index":121},{"krate":0,"index":123},{"krate":0,"index":130},{"krate":0,"index":138},{"krate":0,"index":145},{"krate":0,"index":153},{"krate":0,"index":160}],"decl_id":null,"docs":" Adapters for various formats for [`Uuid`]s","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":93},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/compact.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"compact","qualname":"::adapter::compact","value":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/compact.rs","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":102}],"decl_id":null,"docs":" Module for use with `#[serde(with = \"...\")]` to serialize a [`Uuid`]\n as a `[u8; 16]","sig":null,"attributes":[{"value":"cfg(feature = \"serde\")","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":49055,"byte_end":49080,"line_start":21,"line_end":21,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":100},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/compact.rs","byte_start":87194,"byte_end":87203,"line_start":13,"line_end":13,"column_start":8,"column_end":17},"name":"serialize","qualname":"::adapter::compact::serialize","value":"fn <S> (u: &Uuid, serializer: S) -> Result<S::Ok, S::Error>","parent":null,"children":[],"decl_id":null,"docs":" Serializer for a [`Uuid`] into a `[u8; 16]`","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":102},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/compact.rs","byte_start":87425,"byte_end":87436,"line_start":23,"line_end":23,"column_start":8,"column_end":19},"name":"deserialize","qualname":"::adapter::compact::deserialize","value":"fn <'de, D> (deserializer: D) -> Result<Uuid, D::Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserializer from a `[u8; 16]` into a [`Uuid`]","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":334},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":49340,"byte_end":49350,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"name":"Hyphenated","qualname":"::adapter::Hyphenated","value":"","parent":null,"children":[],"decl_id":null,"docs":" An adaptor for formatting an [`Uuid`] as a hyphenated string.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":49329,"byte_end":49357,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":49329,"byte_end":49357,"line_start":30,"line_end":30,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":360},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":49585,"byte_end":49598,"line_start":38,"line_end":38,"column_start":12,"column_end":25},"name":"HyphenatedRef","qualname":"::adapter::HyphenatedRef","value":"","parent":null,"children":[],"decl_id":null,"docs":" An adaptor for formatting an [`Uuid`] as a hyphenated string.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":49574,"byte_end":49613,"line_start":38,"line_end":38,"column_start":1,"column_end":40}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":49574,"byte_end":49613,"line_start":38,"line_end":38,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":393},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":49852,"byte_end":49858,"line_start":46,"line_end":46,"column_start":12,"column_end":18},"name":"Simple","qualname":"::adapter::Simple","value":"","parent":null,"children":[],"decl_id":null,"docs":" An adaptor for formatting an [`Uuid`] as a simple string.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":49841,"byte_end":49865,"line_start":46,"line_end":46,"column_start":1,"column_end":25}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":49841,"byte_end":49865,"line_start":46,"line_end":46,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":419},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":50089,"byte_end":50098,"line_start":54,"line_end":54,"column_start":12,"column_end":21},"name":"SimpleRef","qualname":"::adapter::SimpleRef","value":"","parent":null,"children":[],"decl_id":null,"docs":" An adaptor for formatting an [`Uuid`] as a simple string.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":50078,"byte_end":50113,"line_start":54,"line_end":54,"column_start":1,"column_end":36}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":50078,"byte_end":50113,"line_start":54,"line_end":54,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":452},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":50349,"byte_end":50352,"line_start":62,"line_end":62,"column_start":12,"column_end":15},"name":"Urn","qualname":"::adapter::Urn","value":"","parent":null,"children":[],"decl_id":null,"docs":" An adaptor for formatting an [`Uuid`] as a URN string.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":50338,"byte_end":50359,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":50338,"byte_end":50359,"line_start":62,"line_end":62,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":478},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":50580,"byte_end":50586,"line_start":70,"line_end":70,"column_start":12,"column_end":18},"name":"UrnRef","qualname":"::adapter::UrnRef","value":"","parent":null,"children":[],"decl_id":null,"docs":" An adaptor for formatting an [`Uuid`] as a URN string.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":50569,"byte_end":50601,"line_start":70,"line_end":70,"column_start":1,"column_end":33}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":50569,"byte_end":50601,"line_start":70,"line_end":70,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":50838,"byte_end":50851,"line_start":79,"line_end":79,"column_start":12,"column_end":25},"name":"to_hyphenated","qualname":"<Uuid>::to_hyphenated","value":"fn (self) -> Hyphenated","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`Hyphenated`] instance from a [`Uuid`].","sig":null,"attributes":[{"value":"cfg(not(feature = \"const_fn\"))","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":50779,"byte_end":50812,"line_start":77,"line_end":77,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":50817,"byte_end":50826,"line_start":78,"line_end":78,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":51462,"byte_end":51479,"line_start":99,"line_end":99,"column_start":12,"column_end":29},"name":"to_hyphenated_ref","qualname":"<Uuid>::to_hyphenated_ref","value":"fn (&self) -> HyphenatedRef","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`HyphenatedRef`] instance from a [`Uuid`] reference.","sig":null,"attributes":[{"value":"cfg(not(feature = \"const_fn\"))","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":51403,"byte_end":51436,"line_start":97,"line_end":97,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":51441,"byte_end":51450,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":52104,"byte_end":52113,"line_start":119,"line_end":119,"column_start":12,"column_end":21},"name":"to_simple","qualname":"<Uuid>::to_simple","value":"fn (self) -> Simple","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`Simple`] instance from a [`Uuid`].","sig":null,"attributes":[{"value":"cfg(not(feature = \"const_fn\"))","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":52045,"byte_end":52078,"line_start":117,"line_end":117,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":52083,"byte_end":52092,"line_start":118,"line_end":118,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":52680,"byte_end":52693,"line_start":139,"line_end":139,"column_start":12,"column_end":25},"name":"to_simple_ref","qualname":"<Uuid>::to_simple_ref","value":"fn (&self) -> SimpleRef","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`SimpleRef`] instance from a [`Uuid`] reference.","sig":null,"attributes":[{"value":"cfg(not(feature = \"const_fn\"))","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":52621,"byte_end":52654,"line_start":137,"line_end":137,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":52659,"byte_end":52668,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":53277,"byte_end":53283,"line_start":159,"line_end":159,"column_start":12,"column_end":18},"name":"to_urn","qualname":"<Uuid>::to_urn","value":"fn (self) -> Urn","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`Urn`] instance from a [`Uuid`].","sig":null,"attributes":[{"value":"cfg(not(feature = \"const_fn\"))","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":53218,"byte_end":53251,"line_start":157,"line_end":157,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":53256,"byte_end":53265,"line_start":158,"line_end":158,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":53817,"byte_end":53827,"line_start":179,"line_end":179,"column_start":12,"column_end":22},"name":"to_urn_ref","qualname":"<Uuid>::to_urn_ref","value":"fn (&self) -> UrnRef","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`UrnRef`] instance from a [`Uuid`] reference.","sig":null,"attributes":[{"value":"cfg(not(feature = \"const_fn\"))","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":53758,"byte_end":53791,"line_start":177,"line_end":177,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":53796,"byte_end":53805,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Const","id":{"krate":0,"index":124},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":56394,"byte_end":56400,"line_start":258,"line_end":258,"column_start":15,"column_end":21},"name":"LENGTH","qualname":"::adapter::Hyphenated::LENGTH","value":"usize","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":" The length of a hyphenated [`Uuid`] string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":56607,"byte_end":56616,"line_start":265,"line_end":265,"column_start":12,"column_end":21},"name":"from_uuid","qualname":"<Hyphenated>::from_uuid","value":"fn (uuid: Uuid) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`Hyphenated`] from a [`Uuid`].","sig":null,"attributes":[{"value":"cfg(not(feature = \"const_fn\"))","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":56562,"byte_end":56595,"line_start":264,"line_end":264,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":58364,"byte_end":58376,"line_start":320,"line_end":320,"column_start":12,"column_end":24},"name":"encode_lower","qualname":"<Hyphenated>::encode_lower","value":"fn <'buf> (&self, buffer: &'buf mut [u8]) -> &'buf mut str","parent":null,"children":[],"decl_id":null,"docs":" Writes the [`Uuid`] as a lower-case hyphenated string to\n `buffer`, and returns the subslice of the buffer that contains the\n encoded UUID.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":59925,"byte_end":59937,"line_start":366,"line_end":366,"column_start":12,"column_end":24},"name":"encode_upper","qualname":"<Hyphenated>::encode_upper","value":"fn <'buf> (&self, buffer: &'buf mut [u8]) -> &'buf mut str","parent":null,"children":[],"decl_id":null,"docs":" Writes the [`Uuid`] as an upper-case hyphenated string to\n `buffer`, and returns the subslice of the buffer that contains the\n encoded UUID.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":132},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":60191,"byte_end":60197,"line_start":375,"line_end":375,"column_start":15,"column_end":21},"name":"LENGTH","qualname":"::adapter::HyphenatedRef::<'a>::LENGTH","value":"usize","parent":{"krate":0,"index":130},"children":[],"decl_id":null,"docs":" The length of a hyphenated [`Uuid`] string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":60423,"byte_end":60436,"line_start":382,"line_end":382,"column_start":12,"column_end":25},"name":"from_uuid_ref","qualname":"<HyphenatedRef>::from_uuid_ref","value":"fn (uuid: &'a Uuid) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`HyphenatedRef`] from a [`Uuid`] reference.","sig":null,"attributes":[{"value":"cfg(not(feature = \"const_fn\"))","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":60378,"byte_end":60411,"line_start":381,"line_end":381,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":62360,"byte_end":62372,"line_start":441,"line_end":441,"column_start":12,"column_end":24},"name":"encode_lower","qualname":"<HyphenatedRef>::encode_lower","value":"fn <'buf> (&self, buffer: &'buf mut [u8]) -> &'buf mut str","parent":null,"children":[],"decl_id":null,"docs":" Writes the [`Uuid`] as a lower-case hyphenated string to\n `buffer`, and returns the subslice of the buffer that contains the\n encoded UUID.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":64006,"byte_end":64018,"line_start":490,"line_end":490,"column_start":12,"column_end":24},"name":"encode_upper","qualname":"<HyphenatedRef>::encode_upper","value":"fn <'buf> (&self, buffer: &'buf mut [u8]) -> &'buf mut str","parent":null,"children":[],"decl_id":null,"docs":" Writes the [`Uuid`] as an upper-case hyphenated string to\n `buffer`, and returns the subslice of the buffer that contains the\n encoded UUID.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":139},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":64252,"byte_end":64258,"line_start":499,"line_end":499,"column_start":15,"column_end":21},"name":"LENGTH","qualname":"::adapter::Simple::LENGTH","value":"usize","parent":{"krate":0,"index":138},"children":[],"decl_id":null,"docs":" The length of a simple [`Uuid`] string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":64453,"byte_end":64462,"line_start":506,"line_end":506,"column_start":12,"column_end":21},"name":"from_uuid","qualname":"<Simple>::from_uuid","value":"fn (uuid: Uuid) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`Simple`] from a [`Uuid`].","sig":null,"attributes":[{"value":"cfg(not(feature = \"const_fn\"))","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":64408,"byte_end":64441,"line_start":505,"line_end":505,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":66227,"byte_end":66239,"line_start":562,"line_end":562,"column_start":12,"column_end":24},"name":"encode_lower","qualname":"<Simple>::encode_lower","value":"fn <'buf> (&self, buffer: &'buf mut [u8]) -> &'buf mut str","parent":null,"children":[],"decl_id":null,"docs":" Writes the [`Uuid`] as a lower-case simple string to `buffer`,\n and returns the subslice of the buffer that contains the encoded UUID.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":67661,"byte_end":67673,"line_start":605,"line_end":605,"column_start":12,"column_end":24},"name":"encode_upper","qualname":"<Simple>::encode_upper","value":"fn <'buf> (&self, buffer: &'buf mut [u8]) -> &'buf mut str","parent":null,"children":[],"decl_id":null,"docs":" Writes the [`Uuid`] as an upper-case simple string to `buffer`,\n and returns the subslice of the buffer that contains the encoded UUID.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":147},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":67920,"byte_end":67926,"line_start":614,"line_end":614,"column_start":15,"column_end":21},"name":"LENGTH","qualname":"::adapter::SimpleRef::<'a>::LENGTH","value":"usize","parent":{"krate":0,"index":145},"children":[],"decl_id":null,"docs":" The length of a simple [`Uuid`] string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":68140,"byte_end":68153,"line_start":621,"line_end":621,"column_start":12,"column_end":25},"name":"from_uuid_ref","qualname":"<SimpleRef>::from_uuid_ref","value":"fn (uuid: &'a Uuid) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`SimpleRef`] from a [`Uuid`] reference.","sig":null,"attributes":[{"value":"cfg(not(feature = \"const_fn\"))","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":68095,"byte_end":68128,"line_start":620,"line_end":620,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":69955,"byte_end":69967,"line_start":677,"line_end":677,"column_start":12,"column_end":24},"name":"encode_lower","qualname":"<SimpleRef>::encode_lower","value":"fn <'buf> (&self, buffer: &'buf mut [u8]) -> &'buf mut str","parent":null,"children":[],"decl_id":null,"docs":" Writes the [`Uuid`] as a lower-case simple string to `buffer`,\n and returns the subslice of the buffer that contains the encoded UUID.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":71388,"byte_end":71400,"line_start":720,"line_end":720,"column_start":12,"column_end":24},"name":"encode_upper","qualname":"<SimpleRef>::encode_upper","value":"fn <'buf> (&self, buffer: &'buf mut [u8]) -> &'buf mut str","parent":null,"children":[],"decl_id":null,"docs":" Writes the [`Uuid`] as an upper-case simple string to `buffer`,\n and returns the subslice of the buffer that contains the encoded UUID.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":154},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":71629,"byte_end":71635,"line_start":729,"line_end":729,"column_start":15,"column_end":21},"name":"LENGTH","qualname":"::adapter::Urn::LENGTH","value":"usize","parent":{"krate":0,"index":153},"children":[],"decl_id":null,"docs":" The length of a URN [`Uuid`] string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":71821,"byte_end":71830,"line_start":736,"line_end":736,"column_start":12,"column_end":21},"name":"from_uuid","qualname":"<Urn>::from_uuid","value":"fn (uuid: Uuid) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`Urn`] from a [`Uuid`].","sig":null,"attributes":[{"value":"cfg(not(feature = \"const_fn\"))","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":71776,"byte_end":71809,"line_start":735,"line_end":735,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":73664,"byte_end":73676,"line_start":794,"line_end":794,"column_start":12,"column_end":24},"name":"encode_lower","qualname":"<Urn>::encode_lower","value":"fn <'buf> (&self, buffer: &'buf mut [u8]) -> &'buf mut str","parent":null,"children":[],"decl_id":null,"docs":" Writes the [`Uuid`] as a lower-case URN string to\n `buffer`, and returns the subslice of the buffer that contains the\n encoded UUID.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":75351,"byte_end":75363,"line_start":843,"line_end":843,"column_start":12,"column_end":24},"name":"encode_upper","qualname":"<Urn>::encode_upper","value":"fn <'buf> (&self, buffer: &'buf mut [u8]) -> &'buf mut str","parent":null,"children":[],"decl_id":null,"docs":" Writes the [`Uuid`] as an upper-case URN string to\n `buffer`, and returns the subslice of the buffer that contains the\n encoded UUID.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":162},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":75654,"byte_end":75660,"line_start":853,"line_end":853,"column_start":15,"column_end":21},"name":"LENGTH","qualname":"::adapter::UrnRef::<'a>::LENGTH","value":"usize","parent":{"krate":0,"index":160},"children":[],"decl_id":null,"docs":" The length of a URN [`Uuid`] string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":75865,"byte_end":75878,"line_start":860,"line_end":860,"column_start":12,"column_end":25},"name":"from_uuid_ref","qualname":"<UrnRef>::from_uuid_ref","value":"fn (uuid: &'a Uuid) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`UrnRef`] from a [`Uuid`] reference.","sig":null,"attributes":[{"value":"cfg(not(feature = \"const_fn\"))","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":75820,"byte_end":75853,"line_start":859,"line_end":859,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":77750,"byte_end":77762,"line_start":918,"line_end":918,"column_start":12,"column_end":24},"name":"encode_lower","qualname":"<UrnRef>::encode_lower","value":"fn <'buf> (&self, buffer: &'buf mut [u8]) -> &'buf mut str","parent":null,"children":[],"decl_id":null,"docs":" Writes the [`Uuid`] as a lower-case URN string to\n `buffer`, and returns the subslice of the buffer that contains the\n encoded UUID.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":79436,"byte_end":79448,"line_start":967,"line_end":967,"column_start":12,"column_end":24},"name":"encode_upper","qualname":"<UrnRef>::encode_upper","value":"fn <'buf> (&self, buffer: &'buf mut [u8]) -> &'buf mut str","parent":null,"children":[],"decl_id":null,"docs":" Writes the [`Uuid`] as an upper-case URN string to\n `buffer`, and returns the subslice of the buffer that contains the\n encoded UUID.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":168},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/builder.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"builder","qualname":"::builder","value":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/builder.rs","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":511},{"krate":0,"index":514},{"krate":0,"index":171}],"decl_id":null,"docs":" A Builder type for [`Uuid`]s.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":511},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/builder.rs","byte_start":90597,"byte_end":90604,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"Builder","qualname":"::builder::Builder","value":"","parent":null,"children":[],"decl_id":null,"docs":" A builder struct for creating a [`Uuid`]","sig":null,"attributes":[{"value":"allow(missing_copy_implementations)","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/builder.rs","byte_start":90530,"byte_end":90568,"line_start":38,"line_end":38,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/builder.rs","byte_start":91525,"byte_end":91535,"line_start":75,"line_end":75,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<Builder>::from_bytes","value":"fn (b: Bytes) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Builder` using the supplied big-endian bytes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/builder.rs","byte_start":92608,"byte_end":92618,"line_start":116,"line_end":116,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<Builder>::from_slice","value":"fn (b: &[u8]) -> Result<Self, BytesError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Builder` using the supplied big-endian bytes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/builder.rs","byte_start":93853,"byte_end":93864,"line_start":166,"line_end":166,"column_start":12,"column_end":23},"name":"from_fields","qualname":"<Builder>::from_fields","value":"fn (d1: u32, d2: u16, d3: u16, d4: &[u8]) -> Result<Self, BytesError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Builder` from four field values.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/builder.rs","byte_start":94407,"byte_end":94410,"line_start":190,"line_end":190,"column_start":12,"column_end":15},"name":"nil","qualname":"<Builder>::nil","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Builder` with an initial [`Uuid::nil`]\n # Examples","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/builder.rs","byte_start":94526,"byte_end":94537,"line_start":195,"line_end":195,"column_start":12,"column_end":23},"name":"set_variant","qualname":"<Builder>::set_variant","value":"fn (&mut self, v: Variant) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies the variant of the internal [`Uuid`].\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/builder.rs","byte_start":94701,"byte_end":94712,"line_start":201,"line_end":201,"column_start":12,"column_end":23},"name":"set_version","qualname":"<Builder>::set_version","value":"fn (&mut self, v: Version) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies the version number of the internal [`Uuid`].\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/builder.rs","byte_start":95160,"byte_end":95165,"line_start":221,"line_end":221,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"fn (&mut self) -> Uuid","parent":null,"children":[],"decl_id":null,"docs":" Hands over the internal constructed [`Uuid`]\n # Examples","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":181},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/parser/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"parser","qualname":"::parser","value":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/parser/mod.rs","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":192},{"krate":0,"index":516},{"krate":0,"index":549},{"krate":0,"index":548},{"krate":0,"index":546},{"krate":0,"index":544},{"krate":0,"index":541},{"krate":0,"index":539},{"krate":0,"index":536},{"krate":0,"index":526},{"krate":0,"index":551},{"krate":0,"index":609},{"krate":0,"index":608},{"krate":0,"index":606},{"krate":0,"index":604},{"krate":0,"index":601},{"krate":0,"index":599},{"krate":0,"index":596},{"krate":0,"index":566},{"krate":0,"index":197},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":203}],"decl_id":null,"docs":" [`Uuid`] parsing constructs and utilities.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":517},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/parser/mod.rs","byte_start":96000,"byte_end":96003,"line_start":24,"line_end":24,"column_start":5,"column_end":8},"name":"Any","qualname":"::parser::Expected::Any","value":"Expected::Any(&'static [usize])","parent":{"krate":0,"index":516},"children":[],"decl_id":null,"docs":" Expected any one of the given values.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":520},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/parser/mod.rs","byte_start":96061,"byte_end":96066,"line_start":26,"line_end":26,"column_start":5,"column_end":10},"name":"Exact","qualname":"::parser::Expected::Exact","value":"Expected::Exact(usize)","parent":{"krate":0,"index":516},"children":[],"decl_id":null,"docs":" Expected the given value.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":523},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/parser/mod.rs","byte_start":96127,"byte_end":96132,"line_start":28,"line_end":28,"column_start":5,"column_end":10},"name":"Range","qualname":"::parser::Expected::Range","value":"Expected::Range { min, max }","parent":{"krate":0,"index":516},"children":[],"decl_id":null,"docs":" Expected any values in the given range.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":516},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/parser/mod.rs","byte_start":95939,"byte_end":95947,"line_start":22,"line_end":22,"column_start":10,"column_end":18},"name":"Expected","qualname":"::parser::Expected","value":"Expected::{Any, Exact, Range}","parent":null,"children":[{"krate":0,"index":517},{"krate":0,"index":520},{"krate":0,"index":523}],"decl_id":null,"docs":" The expected value.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/parser/mod.rs","byte_start":95930,"byte_end":96263,"line_start":22,"line_end":34,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/parser/mod.rs","byte_start":95930,"byte_end":96263,"line_start":22,"line_end":34,"column_start":1,"column_end":2}}]},{"kind":"StructVariant","id":{"krate":0,"index":552},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/parser/mod.rs","byte_start":96554,"byte_end":96570,"line_start":44,"line_end":44,"column_start":5,"column_end":21},"name":"InvalidCharacter","qualname":"::parser::ParseError::InvalidCharacter","value":"ParseError::InvalidCharacter { expected, found, index }","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" Invalid character in the [`Uuid`] string.","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":556},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/parser/mod.rs","byte_start":96886,"byte_end":96903,"line_start":55,"line_end":55,"column_start":5,"column_end":22},"name":"InvalidGroupCount","qualname":"::parser::ParseError::InvalidGroupCount","value":"ParseError::InvalidGroupCount { expected, found }","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" Invalid number of segments in the [`Uuid`] string.","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":559},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/parser/mod.rs","byte_start":97321,"byte_end":97339,"line_start":67,"line_end":67,"column_start":5,"column_end":23},"name":"InvalidGroupLength","qualname":"::parser::ParseError::InvalidGroupLength","value":"ParseError::InvalidGroupLength { expected, found, group }","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" Invalid length of a segment in a [`Uuid`] string.","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":563},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/parser/mod.rs","byte_start":97652,"byte_end":97665,"line_start":78,"line_end":78,"column_start":5,"column_end":18},"name":"InvalidLength","qualname":"::parser::ParseError::InvalidLength","value":"ParseError::InvalidLength { expected, found }","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":" Invalid length of the [`Uuid`] string.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":551},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/parser/mod.rs","byte_start":96441,"byte_end":96451,"line_start":40,"line_end":40,"column_start":10,"column_end":20},"name":"ParseError","qualname":"::parser::ParseError","value":"ParseError::{InvalidCharacter, InvalidGroupCount, InvalidGroupLength, InvalidLength}","parent":null,"children":[{"krate":0,"index":552},{"krate":0,"index":556},{"krate":0,"index":559},{"krate":0,"index":563}],"decl_id":null,"docs":" An error that can occur while parsing a [`Uuid`] string.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/parser/mod.rs","byte_start":96432,"byte_end":97951,"line_start":40,"line_end":87,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/parser/mod.rs","byte_start":96432,"byte_end":97951,"line_start":40,"line_end":87,"column_start":1,"column_end":2}}]},{"kind":"Mod","id":{"krate":0,"index":205},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/prelude.rs","parent":null,"children":[{"krate":0,"index":206}],"decl_id":null,"docs":" The [`uuid`] prelude.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/v4.rs","byte_start":113562,"byte_end":113568,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"name":"new_v4","qualname":"<Uuid>::new_v4","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a random [`Uuid`].","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":289},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":6116,"byte_end":6121,"line_start":210,"line_end":210,"column_start":10,"column_end":15},"name":"Bytes","qualname":"::Bytes","value":"[u8; 16]","parent":null,"children":[],"decl_id":null,"docs":" A 128-bit (16 byte) buffer containing the ID.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":611},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":6304,"byte_end":6314,"line_start":216,"line_end":216,"column_start":12,"column_end":22},"name":"BytesError","qualname":"::BytesError","value":"BytesError {  }","parent":null,"children":[{"krate":0,"index":612},{"krate":0,"index":613}],"decl_id":null,"docs":" The error that can occur when creating a [`Uuid`].","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":6293,"byte_end":6357,"line_start":216,"line_end":219,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":6293,"byte_end":6357,"line_start":216,"line_end":219,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":640},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":7101,"byte_end":7106,"line_start":242,"line_end":242,"column_start":5,"column_end":10},"name":"Bytes","qualname":"::Error::Bytes","value":"Error::Bytes(BytesError)","parent":{"krate":0,"index":639},"children":[],"decl_id":null,"docs":" An error occurred while handling [`Uuid`] bytes.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":643},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":7330,"byte_end":7335,"line_start":250,"line_end":250,"column_start":5,"column_end":10},"name":"Parse","qualname":"::Error::Parse","value":"Error::Parse(parser::ParseError)","parent":{"krate":0,"index":639},"children":[],"decl_id":null,"docs":" An error occurred while parsing a [`Uuid`] string.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":639},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":6907,"byte_end":6912,"line_start":235,"line_end":235,"column_start":10,"column_end":15},"name":"Error","qualname":"::Error","value":"Error::{Bytes, Parse}","parent":null,"children":[{"krate":0,"index":640},{"krate":0,"index":643}],"decl_id":null,"docs":" A general error that can occur when handling [`Uuid`]s.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":6898,"byte_end":7358,"line_start":235,"line_end":251,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":6898,"byte_end":7358,"line_start":235,"line_end":251,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":668},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":7583,"byte_end":7586,"line_start":260,"line_end":260,"column_start":5,"column_end":8},"name":"Nil","qualname":"::Version::Nil","value":"Version::Nil","parent":{"krate":0,"index":667},"children":[],"decl_id":null,"docs":" Special case for `nil` [`Uuid`].","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":671},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":7627,"byte_end":7630,"line_start":262,"line_end":262,"column_start":5,"column_end":8},"name":"Mac","qualname":"::Version::Mac","value":"Version::Mac","parent":{"krate":0,"index":667},"children":[],"decl_id":null,"docs":" Version 1: MAC address\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":673},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":7668,"byte_end":7671,"line_start":264,"line_end":264,"column_start":5,"column_end":8},"name":"Dce","qualname":"::Version::Dce","value":"Version::Dce","parent":{"krate":0,"index":667},"children":[],"decl_id":null,"docs":" Version 2: DCE Security\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":675},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":7705,"byte_end":7708,"line_start":266,"line_end":266,"column_start":5,"column_end":8},"name":"Md5","qualname":"::Version::Md5","value":"Version::Md5","parent":{"krate":0,"index":667},"children":[],"decl_id":null,"docs":" Version 3: MD5 hash\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":677},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":7740,"byte_end":7746,"line_start":268,"line_end":268,"column_start":5,"column_end":11},"name":"Random","qualname":"::Version::Random","value":"Version::Random","parent":{"krate":0,"index":667},"children":[],"decl_id":null,"docs":" Version 4: Random\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":679},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":7782,"byte_end":7786,"line_start":270,"line_end":270,"column_start":5,"column_end":9},"name":"Sha1","qualname":"::Version::Sha1","value":"Version::Sha1","parent":{"krate":0,"index":667},"children":[],"decl_id":null,"docs":" Version 5: SHA-1 hash\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":667},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":7485,"byte_end":7492,"line_start":256,"line_end":256,"column_start":10,"column_end":17},"name":"Version","qualname":"::Version","value":"Version::{Nil, Mac, Dce, Md5, Random, Sha1}","parent":null,"children":[{"krate":0,"index":668},{"krate":0,"index":671},{"krate":0,"index":673},{"krate":0,"index":675},{"krate":0,"index":677},{"krate":0,"index":679}],"decl_id":null,"docs":" The version of the UUID, denoting the generating algorithm.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":7465,"byte_end":7475,"line_start":255,"line_end":255,"column_start":1,"column_end":11}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":7476,"byte_end":7789,"line_start":256,"line_end":271,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":689},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":7957,"byte_end":7960,"line_start":278,"line_end":278,"column_start":5,"column_end":8},"name":"NCS","qualname":"::Variant::NCS","value":"Variant::NCS","parent":{"krate":0,"index":688},"children":[],"decl_id":null,"docs":" Reserved by the NCS for backward compatibility\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":692},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":8030,"byte_end":8037,"line_start":280,"line_end":280,"column_start":5,"column_end":12},"name":"RFC4122","qualname":"::Variant::RFC4122","value":"Variant::RFC4122","parent":{"krate":0,"index":688},"children":[],"decl_id":null,"docs":" As described in the RFC4122 Specification (default)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":694},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":8100,"byte_end":8109,"line_start":282,"line_end":282,"column_start":5,"column_end":14},"name":"Microsoft","qualname":"::Variant::Microsoft","value":"Variant::Microsoft","parent":{"krate":0,"index":688},"children":[],"decl_id":null,"docs":" Reserved by Microsoft for backward compatibility\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":696},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":8153,"byte_end":8159,"line_start":284,"line_end":284,"column_start":5,"column_end":11},"name":"Future","qualname":"::Variant::Future","value":"Variant::Future","parent":{"krate":0,"index":688},"children":[],"decl_id":null,"docs":" Reserved for future expansion\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":688},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":7888,"byte_end":7895,"line_start":276,"line_end":276,"column_start":10,"column_end":17},"name":"Variant","qualname":"::Variant","value":"Variant::{NCS, RFC4122, Microsoft, Future}","parent":null,"children":[{"krate":0,"index":689},{"krate":0,"index":692},{"krate":0,"index":694},{"krate":0,"index":696}],"decl_id":null,"docs":" The reserved variants of UUIDs.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":7868,"byte_end":7878,"line_start":275,"line_end":275,"column_start":1,"column_end":11}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":7879,"byte_end":8162,"line_start":276,"line_end":285,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":705},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":8280,"byte_end":8284,"line_start":289,"line_end":289,"column_start":12,"column_end":16},"name":"Uuid","qualname":"::Uuid","value":"","parent":null,"children":[],"decl_id":null,"docs":" A Universally Unique Identifier (UUID).\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":8269,"byte_end":8292,"line_start":289,"line_end":289,"column_start":1,"column_end":24}},{"value":"rustc_copy_clone_marker","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":8269,"byte_end":8292,"line_start":289,"line_end":289,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":8571,"byte_end":8579,"line_start":302,"line_end":302,"column_start":12,"column_end":20},"name":"expected","qualname":"<BytesError>::expected","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The expected number of bytes.\n","sig":null,"attributes":[{"value":"cfg(not(feature = \"const_fn\"))","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":8512,"byte_end":8545,"line_start":300,"line_end":300,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":8550,"byte_end":8559,"line_start":301,"line_end":301,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":8874,"byte_end":8879,"line_start":316,"line_end":316,"column_start":12,"column_end":17},"name":"found","qualname":"<BytesError>::found","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of bytes found.\n","sig":null,"attributes":[{"value":"cfg(not(feature = \"const_fn\"))","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":8815,"byte_end":8848,"line_start":314,"line_end":314,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":8853,"byte_end":8862,"line_start":315,"line_end":315,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":9320,"byte_end":9323,"line_start":334,"line_end":334,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesError>::new","value":"fn (expected: usize, found: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`UuidError`].","sig":null,"attributes":[{"value":"cfg(not(feature = \"const_fn\"))","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":9261,"byte_end":9294,"line_start":332,"line_end":332,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":9299,"byte_end":9308,"line_start":333,"line_end":333,"column_start":5,"column_end":14}}]},{"kind":"Const","id":{"krate":0,"index":296},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":9539,"byte_end":9552,"line_start":343,"line_end":343,"column_start":15,"column_end":28},"name":"NAMESPACE_DNS","qualname":"::Uuid::NAMESPACE_DNS","value":"Self","parent":{"krate":0,"index":295},"children":[],"decl_id":null,"docs":" [`Uuid`] namespace for Domain Name System (DNS).","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":297},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":9808,"byte_end":9821,"line_start":351,"line_end":351,"column_start":15,"column_end":28},"name":"NAMESPACE_OID","qualname":"::Uuid::NAMESPACE_OID","value":"Self","parent":{"krate":0,"index":295},"children":[],"decl_id":null,"docs":" [`Uuid`] namespace for ISO Object Identifiers (OIDs).","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":298},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":10080,"byte_end":10093,"line_start":359,"line_end":359,"column_start":15,"column_end":28},"name":"NAMESPACE_URL","qualname":"::Uuid::NAMESPACE_URL","value":"Self","parent":{"krate":0,"index":295},"children":[],"decl_id":null,"docs":" [`Uuid`] namespace for Uniform Resource Locators (URLs).","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":299},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":10351,"byte_end":10365,"line_start":367,"line_end":367,"column_start":15,"column_end":29},"name":"NAMESPACE_X500","qualname":"::Uuid::NAMESPACE_X500","value":"Self","parent":{"krate":0,"index":295},"children":[],"decl_id":null,"docs":" [`Uuid`] namespace for X.500 Distinguished Names (DNs).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":11764,"byte_end":11767,"line_start":420,"line_end":420,"column_start":12,"column_end":15},"name":"nil","qualname":"<Uuid>::nil","value":"fn () -> Uuid","parent":null,"children":[],"decl_id":null,"docs":" The 'nil UUID'.","sig":null,"attributes":[{"value":"cfg(not(feature = \"const_fn\"))","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":11719,"byte_end":11752,"line_start":419,"line_end":419,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":12786,"byte_end":12797,"line_start":461,"line_end":461,"column_start":12,"column_end":23},"name":"from_fields","qualname":"<Uuid>::from_fields","value":"fn (d1: u32, d2: u16, d3: u16, d4: &[u8]) -> Result<Uuid, BytesError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Uuid` from four field values in big-endian order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":14183,"byte_end":14197,"line_start":518,"line_end":518,"column_start":12,"column_end":26},"name":"from_fields_le","qualname":"<Uuid>::from_fields_le","value":"fn (d1: u32, d2: u16, d3: u16, d4: &[u8]) -> Result<Uuid, BytesError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Uuid` from four field values in little-endian order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":15883,"byte_end":15893,"line_start":589,"line_end":589,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<Uuid>::from_slice","value":"fn (b: &[u8]) -> Result<Uuid, BytesError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Uuid` using the supplied big-endian bytes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":16326,"byte_end":16336,"line_start":605,"line_end":605,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<Uuid>::from_bytes","value":"fn (bytes: Bytes) -> Uuid","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Uuid` using the supplied big-endian bytes.\n","sig":null,"attributes":[{"value":"cfg(not(feature = \"const_fn\"))","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":16281,"byte_end":16314,"line_start":604,"line_end":604,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":17315,"byte_end":17332,"line_start":640,"line_end":640,"column_start":12,"column_end":29},"name":"from_random_bytes","qualname":"<Uuid>::from_random_bytes","value":"fn (bytes: Bytes) -> Uuid","parent":null,"children":[],"decl_id":null,"docs":" Creates a v4 Uuid from random bytes (e.g. bytes supplied from `Rand`\n crate)","sig":null,"attributes":[{"value":"deprecated(since = \"0.7.2\",\n             note =\n                 \"please use the `uuid::Builder` instead to set the variant and version\")","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":17171,"byte_end":17303,"line_start":636,"line_end":639,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":18335,"byte_end":18346,"line_start":664,"line_end":664,"column_start":12,"column_end":23},"name":"get_variant","qualname":"<Uuid>::get_variant","value":"fn (&self) -> Option<Variant>","parent":null,"children":[],"decl_id":null,"docs":" Returns the variant of the `Uuid` structure.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":19398,"byte_end":19413,"line_start":690,"line_end":690,"column_start":12,"column_end":27},"name":"get_version_num","qualname":"<Uuid>::get_version_num","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the version number of the `Uuid`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":19612,"byte_end":19623,"line_start":697,"line_end":697,"column_start":12,"column_end":23},"name":"get_version","qualname":"<Uuid>::get_version","value":"fn (&self) -> Option<Version>","parent":null,"children":[],"decl_id":null,"docs":" Returns the version of the `Uuid`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":21692,"byte_end":21701,"line_start":749,"line_end":749,"column_start":12,"column_end":21},"name":"as_fields","qualname":"<Uuid>::as_fields","value":"fn (&self) -> (u32, u16, u16, &[u8; 8])","parent":null,"children":[],"decl_id":null,"docs":" Returns the four field values of the UUID in big-endian order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":22858,"byte_end":22870,"line_start":787,"line_end":787,"column_start":12,"column_end":24},"name":"to_fields_le","qualname":"<Uuid>::to_fields_le","value":"fn (&self) -> (u32, u16, u16, &[u8; 8])","parent":null,"children":[],"decl_id":null,"docs":" Returns the four field values of the UUID in little-endian order.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":23808,"byte_end":23816,"line_start":814,"line_end":814,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Uuid>::as_bytes","value":"fn (&self) -> &Bytes","parent":null,"children":[],"decl_id":null,"docs":" Returns an array of 16 octets containing the UUID data.\n This method wraps [`Uuid::as_bytes`]\n","sig":null,"attributes":[{"value":"cfg(not(feature = \"const_fn\"))","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":23763,"byte_end":23796,"line_start":813,"line_end":813,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":24050,"byte_end":24062,"line_start":821,"line_end":821,"column_start":12,"column_end":24},"name":"to_timestamp","qualname":"<Uuid>::to_timestamp","value":"fn (&self) -> Option<(u64, u16)>","parent":null,"children":[],"decl_id":null,"docs":" Returns an Optional Tuple of (u64, u16) representing the timestamp and\n counter portion of a V1 UUID.  If the supplied UUID is not V1, this\n will return None\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":25044,"byte_end":25053,"line_start":850,"line_end":850,"column_start":12,"column_end":21},"name":"parse_str","qualname":"<Uuid>::parse_str","value":"fn (mut input: &str) -> Result<Uuid, parser::ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Parses a `Uuid` from a string of hexadecimal digits with optional\n hyphens.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":31052,"byte_end":31058,"line_start":995,"line_end":995,"column_start":12,"column_end":18},"name":"is_nil","qualname":"<Uuid>::is_nil","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if the UUID is nil\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":31903,"byte_end":31916,"line_start":1025,"line_end":1025,"column_start":12,"column_end":25},"name":"encode_buffer","qualname":"<Uuid>::encode_buffer","value":"fn () -> [u8; adapter::Urn::LENGTH]","parent":null,"children":[],"decl_id":null,"docs":" A buffer that can be used for `encode_...` calls, that is\n guaranteed to be long enough for any of the adapters.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/core_support/mod.rs","byte_start":82427,"byte_end":82437,"line_start":15,"line_end":15,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":22}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/core_support/mod.rs","byte_start":82591,"byte_end":82604,"line_start":22,"line_end":22,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/core_support/mod.rs","byte_start":82758,"byte_end":82764,"line_start":29,"line_end":29,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/core_support/mod.rs","byte_start":82918,"byte_end":82927,"line_start":36,"line_end":36,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/core_support/mod.rs","byte_start":83081,"byte_end":83084,"line_start":43,"line_end":43,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/core_support/mod.rs","byte_start":83238,"byte_end":83244,"line_start":50,"line_end":50,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/core_support/mod.rs","byte_start":83399,"byte_end":83409,"line_start":57,"line_end":57,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/core_support/mod.rs","byte_start":83577,"byte_end":83590,"line_start":63,"line_end":63,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/core_support/mod.rs","byte_start":83856,"byte_end":83862,"line_start":70,"line_end":70,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":44}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/core_support/mod.rs","byte_start":84030,"byte_end":84039,"line_start":76,"line_end":76,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/core_support/mod.rs","byte_start":84301,"byte_end":84304,"line_start":83,"line_end":83,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/core_support/mod.rs","byte_start":84472,"byte_end":84478,"line_start":89,"line_end":89,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/core_support/mod.rs","byte_start":84737,"byte_end":84747,"line_start":96,"line_end":96,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/core_support/mod.rs","byte_start":84915,"byte_end":84928,"line_start":102,"line_end":102,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/core_support/mod.rs","byte_start":85194,"byte_end":85200,"line_start":109,"line_end":109,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/core_support/mod.rs","byte_start":85368,"byte_end":85377,"line_start":115,"line_end":115,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/core_support/mod.rs","byte_start":85639,"byte_end":85642,"line_start":122,"line_end":122,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/core_support/mod.rs","byte_start":85810,"byte_end":85816,"line_start":128,"line_end":128,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/core_support/mod.rs","byte_start":86072,"byte_end":86082,"line_start":135,"line_end":135,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/core_support/mod.rs","byte_start":86214,"byte_end":86227,"line_start":142,"line_end":142,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/core_support/mod.rs","byte_start":86366,"byte_end":86372,"line_start":149,"line_end":149,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/core_support/mod.rs","byte_start":86500,"byte_end":86509,"line_start":156,"line_end":156,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/core_support/mod.rs","byte_start":86644,"byte_end":86647,"line_start":163,"line_end":163,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/core_support/mod.rs","byte_start":86772,"byte_end":86778,"line_start":170,"line_end":170,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":50608,"byte_end":50612,"line_start":72,"line_end":72,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":56269,"byte_end":56279,"line_start":254,"line_end":254,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":60059,"byte_end":60072,"line_start":371,"line_end":371,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":64135,"byte_end":64141,"line_start":495,"line_end":495,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":67796,"byte_end":67805,"line_start":610,"line_end":610,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":71518,"byte_end":71521,"line_start":725,"line_end":725,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":75536,"byte_end":75542,"line_start":849,"line_end":849,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/builder.rs","byte_start":90618,"byte_end":90625,"line_start":42,"line_end":42,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/parser/core_support.rs","byte_start":99671,"byte_end":99676,"line_start":15,"line_end":15,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/parser/core_support.rs","byte_start":99797,"byte_end":99805,"line_start":21,"line_end":21,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/parser/core_support.rs","byte_start":100211,"byte_end":100221,"line_start":33,"line_end":33,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/parser/std_support.rs","byte_start":101778,"byte_end":101788,"line_start":15,"line_end":15,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/parser/mod.rs","byte_start":97958,"byte_end":97968,"line_start":89,"line_end":89,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/core_support.rs","byte_start":104090,"byte_end":104095,"line_start":16,"line_end":16,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/core_support.rs","byte_start":104206,"byte_end":104210,"line_start":22,"line_end":22,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/core_support.rs","byte_start":104360,"byte_end":104365,"line_start":29,"line_end":29,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/core_support.rs","byte_start":104634,"byte_end":104638,"line_start":38,"line_end":38,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/core_support.rs","byte_start":104767,"byte_end":104774,"line_start":44,"line_end":44,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/core_support.rs","byte_start":105111,"byte_end":105121,"line_start":55,"line_end":55,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/core_support.rs","byte_start":105369,"byte_end":105373,"line_start":66,"line_end":66,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/core_support.rs","byte_start":105524,"byte_end":105528,"line_start":72,"line_end":72,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/core_support.rs","byte_start":105692,"byte_end":105696,"line_start":79,"line_end":79,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/core_support.rs","byte_start":105856,"byte_end":105860,"line_start":87,"line_end":87,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/serde_support.rs","byte_start":109129,"byte_end":109133,"line_start":17,"line_end":17,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/serde_support.rs","byte_start":109539,"byte_end":109543,"line_start":32,"line_end":32,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/serde_support.rs","byte_start":109775,"byte_end":109792,"line_start":39,"line_end":39,"column_start":44,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/serde_support.rs","byte_start":110670,"byte_end":110686,"line_start":68,"line_end":68,"column_start":44,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/std_support.rs","byte_start":112524,"byte_end":112534,"line_start":14,"line_end":14,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/std_support.rs","byte_start":112650,"byte_end":112655,"line_start":20,"line_end":20,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/v4.rs","byte_start":112919,"byte_end":112923,"line_start":4,"line_end":4,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":8299,"byte_end":8309,"line_start":291,"line_end":291,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":9418,"byte_end":9422,"line_start":339,"line_end":339,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":304},{"krate":0,"index":306},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":320},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":327},{"krate":0,"index":329},{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":5007,"byte_end":5014,"line_start":153,"line_end":153,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":15}},{"kind":"Mod","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":49089,"byte_end":49096,"line_start":22,"line_end":22,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":93}},{"kind":"Mod","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":5024,"byte_end":5031,"line_start":154,"line_end":154,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":168}},{"kind":"Mod","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":5041,"byte_end":5047,"line_start":155,"line_end":155,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":181}},{"kind":"Mod","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":5057,"byte_end":5064,"line_start":156,"line_end":156,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":205}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/core_support/mod.rs","byte_start":82427,"byte_end":82437,"line_start":15,"line_end":15,"column_start":30,"column_end":40},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":334},"to":{"krate":2,"index":6826}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/core_support/mod.rs","byte_start":82591,"byte_end":82604,"line_start":22,"line_end":22,"column_start":34,"column_end":47},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":360},"to":{"krate":2,"index":6826}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/core_support/mod.rs","byte_start":82758,"byte_end":82764,"line_start":29,"line_end":29,"column_start":30,"column_end":36},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":393},"to":{"krate":2,"index":6826}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/core_support/mod.rs","byte_start":82918,"byte_end":82927,"line_start":36,"line_end":36,"column_start":34,"column_end":43},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":419},"to":{"krate":2,"index":6826}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/core_support/mod.rs","byte_start":83081,"byte_end":83084,"line_start":43,"line_end":43,"column_start":30,"column_end":33},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":452},"to":{"krate":2,"index":6826}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/core_support/mod.rs","byte_start":83238,"byte_end":83244,"line_start":50,"line_end":50,"column_start":34,"column_end":40},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":478},"to":{"krate":2,"index":6826}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/core_support/mod.rs","byte_start":83399,"byte_end":83409,"line_start":57,"line_end":57,"column_start":31,"column_end":41},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":334},"to":{"krate":2,"index":6832}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/core_support/mod.rs","byte_start":83577,"byte_end":83590,"line_start":63,"line_end":63,"column_start":35,"column_end":48},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":360},"to":{"krate":2,"index":6832}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/core_support/mod.rs","byte_start":83856,"byte_end":83862,"line_start":70,"line_end":70,"column_start":31,"column_end":37},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":393},"to":{"krate":2,"index":6832}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/core_support/mod.rs","byte_start":84030,"byte_end":84039,"line_start":76,"line_end":76,"column_start":35,"column_end":44},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":419},"to":{"krate":2,"index":6832}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/core_support/mod.rs","byte_start":84301,"byte_end":84304,"line_start":83,"line_end":83,"column_start":31,"column_end":34},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":452},"to":{"krate":2,"index":6832}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/core_support/mod.rs","byte_start":84472,"byte_end":84478,"line_start":89,"line_end":89,"column_start":35,"column_end":41},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":478},"to":{"krate":2,"index":6832}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/core_support/mod.rs","byte_start":84737,"byte_end":84747,"line_start":96,"line_end":96,"column_start":31,"column_end":41},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":334},"to":{"krate":2,"index":6834}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/core_support/mod.rs","byte_start":84915,"byte_end":84928,"line_start":102,"line_end":102,"column_start":35,"column_end":48},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":360},"to":{"krate":2,"index":6834}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/core_support/mod.rs","byte_start":85194,"byte_end":85200,"line_start":109,"line_end":109,"column_start":31,"column_end":37},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":393},"to":{"krate":2,"index":6834}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/core_support/mod.rs","byte_start":85368,"byte_end":85377,"line_start":115,"line_end":115,"column_start":35,"column_end":44},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":419},"to":{"krate":2,"index":6834}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/core_support/mod.rs","byte_start":85639,"byte_end":85642,"line_start":122,"line_end":122,"column_start":31,"column_end":34},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":452},"to":{"krate":2,"index":6834}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/core_support/mod.rs","byte_start":85810,"byte_end":85816,"line_start":128,"line_end":128,"column_start":35,"column_end":41},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":478},"to":{"krate":2,"index":6834}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/core_support/mod.rs","byte_start":86072,"byte_end":86082,"line_start":135,"line_end":135,"column_start":28,"column_end":38},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":334},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/core_support/mod.rs","byte_start":86214,"byte_end":86227,"line_start":142,"line_end":142,"column_start":36,"column_end":49},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":360},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/core_support/mod.rs","byte_start":86366,"byte_end":86372,"line_start":149,"line_end":149,"column_start":28,"column_end":34},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":393},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/core_support/mod.rs","byte_start":86500,"byte_end":86509,"line_start":156,"line_end":156,"column_start":36,"column_end":45},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":419},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/core_support/mod.rs","byte_start":86644,"byte_end":86647,"line_start":163,"line_end":163,"column_start":28,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":452},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/core_support/mod.rs","byte_start":86772,"byte_end":86778,"line_start":170,"line_end":170,"column_start":36,"column_end":42},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":478},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":50608,"byte_end":50612,"line_start":72,"line_end":72,"column_start":6,"column_end":10},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":705},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":56269,"byte_end":56279,"line_start":254,"line_end":254,"column_start":6,"column_end":16},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":60059,"byte_end":60072,"line_start":371,"line_end":371,"column_start":10,"column_end":23},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":360},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":64135,"byte_end":64141,"line_start":495,"line_end":495,"column_start":6,"column_end":12},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":67796,"byte_end":67805,"line_start":610,"line_end":610,"column_start":10,"column_end":19},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":419},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":71518,"byte_end":71521,"line_start":725,"line_end":725,"column_start":6,"column_end":9},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":452},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/adapter/mod.rs","byte_start":75536,"byte_end":75542,"line_start":849,"line_end":849,"column_start":10,"column_end":16},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":478},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/builder.rs","byte_start":90618,"byte_end":90625,"line_start":42,"line_end":42,"column_start":6,"column_end":13},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":511},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/parser/core_support.rs","byte_start":99671,"byte_end":99676,"line_start":15,"line_end":15,"column_start":37,"column_end":42},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":639},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/parser/core_support.rs","byte_start":99797,"byte_end":99805,"line_start":21,"line_end":21,"column_start":35,"column_end":43},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":516},"to":{"krate":2,"index":6826}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/parser/core_support.rs","byte_start":100211,"byte_end":100221,"line_start":33,"line_end":33,"column_start":31,"column_end":41},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":551},"to":{"krate":2,"index":6826}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/parser/std_support.rs","byte_start":101778,"byte_end":101788,"line_start":15,"line_end":15,"column_start":31,"column_end":41},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":551},"to":{"krate":1,"index":1542}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/parser/mod.rs","byte_start":97958,"byte_end":97968,"line_start":89,"line_end":89,"column_start":6,"column_end":16},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":551},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/core_support.rs","byte_start":104090,"byte_end":104095,"line_start":16,"line_end":16,"column_start":41,"column_end":46},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":639},"to":{"krate":2,"index":2096}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/core_support.rs","byte_start":104206,"byte_end":104210,"line_start":22,"line_end":22,"column_start":21,"column_end":25},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":705},"to":{"krate":2,"index":6824}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/core_support.rs","byte_start":104360,"byte_end":104365,"line_start":29,"line_end":29,"column_start":30,"column_end":35},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":639},"to":{"krate":2,"index":6826}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/core_support.rs","byte_start":104634,"byte_end":104638,"line_start":38,"line_end":38,"column_start":23,"column_end":27},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":705},"to":{"krate":2,"index":6826}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/core_support.rs","byte_start":104767,"byte_end":104774,"line_start":44,"line_end":44,"column_start":23,"column_end":30},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":688},"to":{"krate":2,"index":6826}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/core_support.rs","byte_start":105111,"byte_end":105121,"line_start":55,"line_end":55,"column_start":25,"column_end":35},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":611},"to":{"krate":2,"index":6826}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/core_support.rs","byte_start":105369,"byte_end":105373,"line_start":66,"line_end":66,"column_start":24,"column_end":28},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":705},"to":{"krate":2,"index":6832}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/core_support.rs","byte_start":105524,"byte_end":105528,"line_start":72,"line_end":72,"column_start":24,"column_end":28},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":705},"to":{"krate":2,"index":6834}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/core_support.rs","byte_start":105692,"byte_end":105696,"line_start":79,"line_end":79,"column_start":23,"column_end":27},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":705},"to":{"krate":2,"index":6022}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/core_support.rs","byte_start":105856,"byte_end":105860,"line_start":87,"line_end":87,"column_start":18,"column_end":22},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":705},"to":{"krate":2,"index":2080}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/serde_support.rs","byte_start":109129,"byte_end":109133,"line_start":17,"line_end":17,"column_start":20,"column_end":24},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":705},"to":{"krate":26,"index":1639}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/serde_support.rs","byte_start":109539,"byte_end":109543,"line_start":32,"line_end":32,"column_start":32,"column_end":36},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":705},"to":{"krate":26,"index":1194}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/serde_support.rs","byte_start":109775,"byte_end":109792,"line_start":39,"line_end":39,"column_start":44,"column_end":61},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":258},"to":{"krate":26,"index":1278}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/serde_support.rs","byte_start":110670,"byte_end":110686,"line_start":68,"line_end":68,"column_start":44,"column_end":60},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":268},"to":{"krate":26,"index":1278}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/std_support.rs","byte_start":112524,"byte_end":112534,"line_start":14,"line_end":14,"column_start":30,"column_end":40},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":611},"to":{"krate":1,"index":1542}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/std_support.rs","byte_start":112650,"byte_end":112655,"line_start":20,"line_end":20,"column_start":30,"column_end":35},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":639},"to":{"krate":1,"index":1542}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/v4.rs","byte_start":112919,"byte_end":112923,"line_start":4,"line_end":4,"column_start":6,"column_end":10},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":705},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":8299,"byte_end":8309,"line_start":291,"line_end":291,"column_start":6,"column_end":16},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":611},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/uuid-0.7.4/src/lib.rs","byte_start":9418,"byte_end":9422,"line_start":339,"line_end":339,"column_start":6,"column_end":10},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":705},"to":{"krate":4294967295,"index":4294967295}}]}