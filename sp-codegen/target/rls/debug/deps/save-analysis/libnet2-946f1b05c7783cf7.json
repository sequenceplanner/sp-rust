{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33","program":"/home/endre/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","net2","/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"duration\"","-C","metadata=946f1b05c7783cf7","-C","extra-filename=-946f1b05c7783cf7","--out-dir","/home/endre/sp-rust/sp-codegen/target/rls/debug/deps","-L","dependency=/home/endre/sp-rust/sp-codegen/target/rls/debug/deps","--extern","cfg_if=/home/endre/sp-rust/sp-codegen/target/rls/debug/deps/libcfg_if-b6c201be834e8525.rmeta","--extern","libc=/home/endre/sp-rust/sp-codegen/target/rls/debug/deps/liblibc-9331d972747b9eab.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/endre/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/endre/sp-rust/sp-codegen/target/rls/debug/deps/libnet2-946f1b05c7783cf7.rmeta"},"prelude":{"crate_id":{"name":"net2","disambiguator":[7648058072537947976,4811609485394654031]},"crate_root":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src","external_crates":[{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3103785602532093942,17390144583497853382]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[3916277366462804126,4478459115610208312]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[1713477286964588179,15844277248566971785]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13012427356130990406,14608520140697239788]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6447241057134257354,1413806012037948949]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4393201617425879462,3310437476178738552]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7079830315103279809,4606718705203350064]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5206394019873543407,10667910451093706265]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[9386824491997906070,17212049238264027415]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16927035401729681780,12437521449932722366]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/lib.rs","num":11,"id":{"name":"backtrace","disambiguator":[11652895559356135055,9563436424588767888]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[16517787911197841201,14116661015581648310]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/lib.rs","num":13,"id":{"name":"backtrace_sys","disambiguator":[5448928475534237502,8623809376237663283]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[9897490559936190142,12325087316115451923]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/lib.rs","num":15,"id":{"name":"libc","disambiguator":[16951308386329787197,9238021607635720415]}},{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/lib.rs","num":16,"id":{"name":"cfg_if","disambiguator":[13583319368851408629,4810563495689936661]}}],"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/lib.rs","byte_start":467,"byte_end":3499,"line_start":11,"line_end":122,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":34},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/lib.rs","byte_start":2188,"byte_end":2198,"line_start":68,"line_end":68,"column_start":14,"column_end":24},"alias_span":null,"name":"TcpBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":77},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/lib.rs","byte_start":2213,"byte_end":2223,"line_start":69,"line_end":69,"column_start":14,"column_end":24},"alias_span":null,"name":"UdpBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":157},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/lib.rs","byte_start":2239,"byte_end":2251,"line_start":70,"line_end":70,"column_start":15,"column_end":27},"alias_span":null,"name":"TcpStreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":186},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/lib.rs","byte_start":2253,"byte_end":2267,"line_start":70,"line_end":70,"column_start":29,"column_end":43},"alias_span":null,"name":"TcpListenerExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":195},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/lib.rs","byte_start":2269,"byte_end":2281,"line_start":70,"line_end":70,"column_start":45,"column_end":57},"alias_span":null,"name":"UdpSocketExt","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/lib.rs","byte_start":467,"byte_end":3499,"line_start":11,"line_end":122,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":67},{"krate":0,"index":94},{"krate":0,"index":131},{"krate":0,"index":377},{"krate":0,"index":388},{"krate":0,"index":440},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":471},{"krate":0,"index":473},{"krate":0,"index":475},{"krate":0,"index":477},{"krate":0,"index":479},{"krate":0,"index":482},{"krate":0,"index":485}],"decl_id":null,"docs":" Extensions to `std::net` networking types.","sig":null,"attributes":[{"value":"deny(missing_docs, warnings)","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/lib.rs","byte_start":1620,"byte_end":1652,"line_start":42,"line_end":42,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":34},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/tcp.rs","byte_start":4309,"byte_end":4319,"line_start":23,"line_end":23,"column_start":12,"column_end":22},"name":"TcpBuilder","qualname":"::tcp::TcpBuilder","value":"TcpBuilder {  }","parent":null,"children":[{"krate":0,"index":35}],"decl_id":null,"docs":" An \"in progress\" TCP socket which has not yet been connected or listened.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/tcp.rs","byte_start":4658,"byte_end":4664,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"name":"new_v4","qualname":"<TcpBuilder>::new_v4","value":"fn () -> io::Result<TcpBuilder>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new TcpBuilder with the `AF_INET` domain, the `SOCK_STREAM`\n type, and with a protocol argument of 0.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/tcp.rs","byte_start":5058,"byte_end":5064,"line_start":42,"line_end":42,"column_start":12,"column_end":18},"name":"new_v6","qualname":"<TcpBuilder>::new_v6","value":"fn () -> io::Result<TcpBuilder>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new TcpBuilder with the `AF_INET6` domain, the `SOCK_STREAM`\n type, and with a protocol argument of 0.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/tcp.rs","byte_start":5347,"byte_end":5351,"line_start":50,"line_end":50,"column_start":12,"column_end":16},"name":"bind","qualname":"<TcpBuilder>::bind","value":"fn <T> (&self, addr: T) -> io::Result<&TcpBuilder>","parent":null,"children":[],"decl_id":null,"docs":" Binds this socket to the specified address.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/tcp.rs","byte_start":5904,"byte_end":5910,"line_start":67,"line_end":67,"column_start":12,"column_end":18},"name":"listen","qualname":"<TcpBuilder>::listen","value":"fn (&self, backlog: i32) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Mark a socket as ready to accept incoming connection requests using\n accept()","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/tcp.rs","byte_start":6413,"byte_end":6420,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"connect","qualname":"<TcpBuilder>::connect","value":"fn <T> (&self, addr: T) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Initiate a connection on this socket to the specified address.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/tcp.rs","byte_start":7200,"byte_end":7213,"line_start":102,"line_end":102,"column_start":12,"column_end":25},"name":"to_tcp_stream","qualname":"<TcpBuilder>::to_tcp_stream","value":"fn (&self) -> io::Result<TcpStream>","parent":null,"children":[],"decl_id":null,"docs":" Converts this builder into a `TcpStream`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/tcp.rs","byte_start":7785,"byte_end":7800,"line_start":114,"line_end":114,"column_start":12,"column_end":27},"name":"to_tcp_listener","qualname":"<TcpBuilder>::to_tcp_listener","value":"fn (&self) -> io::Result<TcpListener>","parent":null,"children":[],"decl_id":null,"docs":" Converts this builder into a `TcpListener`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/tcp.rs","byte_start":8261,"byte_end":8271,"line_start":125,"line_end":125,"column_start":12,"column_end":22},"name":"local_addr","qualname":"<TcpBuilder>::local_addr","value":"fn (&self) -> io::Result<SocketAddr>","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of the local half of this TCP socket.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":77},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/udp.rs","byte_start":10179,"byte_end":10189,"line_start":23,"line_end":23,"column_start":12,"column_end":22},"name":"UdpBuilder","qualname":"::udp::UdpBuilder","value":"UdpBuilder {  }","parent":null,"children":[{"krate":0,"index":78}],"decl_id":null,"docs":" An \"in progress\" UDP socket which has not yet been connected.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/udp.rs","byte_start":10527,"byte_end":10533,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"name":"new_v4","qualname":"<UdpBuilder>::new_v4","value":"fn () -> io::Result<UdpBuilder>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new UdpBuilder with the `AF_INET` domain, the `SOCK_DGRAM`\n type, and with a protocol argument of 0.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/udp.rs","byte_start":10925,"byte_end":10931,"line_start":42,"line_end":42,"column_start":12,"column_end":18},"name":"new_v6","qualname":"<UdpBuilder>::new_v6","value":"fn () -> io::Result<UdpBuilder>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new UdpBuilder with the `AF_INET6` domain, the `SOCK_DGRAM`\n type, and with a protocol argument of 0.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/udp.rs","byte_start":11213,"byte_end":11217,"line_start":50,"line_end":50,"column_start":12,"column_end":16},"name":"bind","qualname":"<UdpBuilder>::bind","value":"fn <T> (&self, addr: T) -> io::Result<UdpSocket>","parent":null,"children":[],"decl_id":null,"docs":" Binds this socket to the specified address.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":157},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":20341,"byte_end":20353,"line_start":91,"line_end":91,"column_start":11,"column_end":23},"name":"TcpStreamExt","qualname":"::ext::TcpStreamExt","value":"TcpStreamExt","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185}],"decl_id":null,"docs":" Extension methods for the standard [`TcpStream` type][link] in `std::net`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":20771,"byte_end":20782,"line_start":99,"line_end":99,"column_start":8,"column_end":19},"name":"set_nodelay","qualname":"::ext::TcpStreamExt::set_nodelay","value":"fn (&self, nodelay: bool) -> io::Result<()>","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" Sets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":21028,"byte_end":21035,"line_start":106,"line_end":106,"column_start":8,"column_end":15},"name":"nodelay","qualname":"::ext::TcpStreamExt::nodelay","value":"fn (&self) -> io::Result<bool>","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" Gets the value of the `TCP_NODELAY` option on this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":21239,"byte_end":21259,"line_start":111,"line_end":111,"column_start":8,"column_end":28},"name":"set_recv_buffer_size","qualname":"::ext::TcpStreamExt::set_recv_buffer_size","value":"fn (&self, size: usize) -> io::Result<()>","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" Sets the value of the `SO_RCVBUF` option on this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":21519,"byte_end":21535,"line_start":118,"line_end":118,"column_start":8,"column_end":24},"name":"recv_buffer_size","qualname":"::ext::TcpStreamExt::recv_buffer_size","value":"fn (&self) -> io::Result<usize>","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" Gets the value of the `SO_RCVBUF` option on this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":21737,"byte_end":21757,"line_start":123,"line_end":123,"column_start":8,"column_end":28},"name":"set_send_buffer_size","qualname":"::ext::TcpStreamExt::set_send_buffer_size","value":"fn (&self, size: usize) -> io::Result<()>","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" Sets the value of the `SO_SNDBUF` option on this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":22007,"byte_end":22023,"line_start":130,"line_end":130,"column_start":8,"column_end":24},"name":"send_buffer_size","qualname":"::ext::TcpStreamExt::send_buffer_size","value":"fn (&self) -> io::Result<usize>","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" Gets the value of the `SO_SNDBUF` option on this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":22703,"byte_end":22719,"line_start":144,"line_end":144,"column_start":8,"column_end":24},"name":"set_keepalive_ms","qualname":"::ext::TcpStreamExt::set_keepalive_ms","value":"fn (&self, keepalive: Option<u32>) -> io::Result<()>","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" Sets whether keepalive messages are enabled to be sent on this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":23047,"byte_end":23059,"line_start":152,"line_end":152,"column_start":8,"column_end":20},"name":"keepalive_ms","qualname":"::ext::TcpStreamExt::keepalive_ms","value":"fn (&self) -> io::Result<Option<u32>>","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" Returns whether keepalive messages are enabled on this socket, and if so\n the amount of milliseconds between them.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":23719,"byte_end":23732,"line_start":166,"line_end":166,"column_start":8,"column_end":21},"name":"set_keepalive","qualname":"::ext::TcpStreamExt::set_keepalive","value":"fn (&self, keepalive: Option<Duration>) -> io::Result<()>","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" Sets whether keepalive messages are enabled to be sent on this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":24053,"byte_end":24062,"line_start":174,"line_end":174,"column_start":8,"column_end":17},"name":"keepalive","qualname":"::ext::TcpStreamExt::keepalive","value":"fn (&self) -> io::Result<Option<Duration>>","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" Returns whether keepalive messages are enabled on this socket, and if so\n the duration of time between them.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":24487,"byte_end":24506,"line_start":182,"line_end":182,"column_start":8,"column_end":27},"name":"set_read_timeout_ms","qualname":"::ext::TcpStreamExt::set_read_timeout_ms","value":"fn (&self, val: Option<u32>) -> io::Result<()>","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" Sets the `SO_RCVTIMEO` option for this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":24912,"byte_end":24928,"line_start":190,"line_end":190,"column_start":8,"column_end":24},"name":"set_read_timeout","qualname":"::ext::TcpStreamExt::set_read_timeout","value":"fn (&self, val: Option<Duration>) -> io::Result<()>","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" Sets the `SO_RCVTIMEO` option for this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":25199,"byte_end":25214,"line_start":197,"line_end":197,"column_start":8,"column_end":23},"name":"read_timeout_ms","qualname":"::ext::TcpStreamExt::read_timeout_ms","value":"fn (&self) -> io::Result<Option<u32>>","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" Gets the value of the `SO_RCVTIMEO` option for this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":25465,"byte_end":25477,"line_start":204,"line_end":204,"column_start":8,"column_end":20},"name":"read_timeout","qualname":"::ext::TcpStreamExt::read_timeout","value":"fn (&self) -> io::Result<Option<Duration>>","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" Gets the value of the `SO_RCVTIMEO` option for this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":25903,"byte_end":25923,"line_start":212,"line_end":212,"column_start":8,"column_end":28},"name":"set_write_timeout_ms","qualname":"::ext::TcpStreamExt::set_write_timeout_ms","value":"fn (&self, val: Option<u32>) -> io::Result<()>","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" Sets the `SO_SNDTIMEO` option for this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":26320,"byte_end":26337,"line_start":220,"line_end":220,"column_start":8,"column_end":25},"name":"set_write_timeout","qualname":"::ext::TcpStreamExt::set_write_timeout","value":"fn (&self, val: Option<Duration>) -> io::Result<()>","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" Sets the `SO_SNDTIMEO` option for this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":26610,"byte_end":26626,"line_start":227,"line_end":227,"column_start":8,"column_end":24},"name":"write_timeout_ms","qualname":"::ext::TcpStreamExt::write_timeout_ms","value":"fn (&self) -> io::Result<Option<u32>>","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" Gets the value of the `SO_SNDTIMEO` option for this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":26879,"byte_end":26892,"line_start":234,"line_end":234,"column_start":8,"column_end":21},"name":"write_timeout","qualname":"::ext::TcpStreamExt::write_timeout","value":"fn (&self) -> io::Result<Option<Duration>>","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" Gets the value of the `SO_SNDTIMEO` option for this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":27119,"byte_end":27126,"line_start":240,"line_end":240,"column_start":8,"column_end":15},"name":"set_ttl","qualname":"::ext::TcpStreamExt::set_ttl","value":"fn (&self, ttl: u32) -> io::Result<()>","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":27355,"byte_end":27358,"line_start":247,"line_end":247,"column_start":8,"column_end":11},"name":"ttl","qualname":"::ext::TcpStreamExt::ttl","value":"fn (&self) -> io::Result<u32>","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":27818,"byte_end":27829,"line_start":257,"line_end":257,"column_start":8,"column_end":19},"name":"set_only_v6","qualname":"::ext::TcpStreamExt::set_only_v6","value":"fn (&self, only_v6: bool) -> io::Result<()>","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" Sets the value for the `IPV6_V6ONLY` option on this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":28076,"byte_end":28083,"line_start":264,"line_end":264,"column_start":8,"column_end":15},"name":"only_v6","qualname":"::ext::TcpStreamExt::only_v6","value":"fn (&self) -> io::Result<bool>","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_V6ONLY` option for this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":28615,"byte_end":28622,"line_start":275,"line_end":275,"column_start":8,"column_end":15},"name":"connect","qualname":"::ext::TcpStreamExt::connect","value":"fn <T> (&self, addr: T) -> io::Result<()>","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" Executes a `connect` operation on this socket, establishing a connection\n to the host specified by `addr`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":28930,"byte_end":28940,"line_start":282,"line_end":282,"column_start":8,"column_end":18},"name":"take_error","qualname":"::ext::TcpStreamExt::take_error","value":"fn (&self) -> io::Result<Option<io::Error>>","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" Get the value of the `SO_ERROR` option on this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":29176,"byte_end":29191,"line_start":288,"line_end":288,"column_start":8,"column_end":23},"name":"set_nonblocking","qualname":"::ext::TcpStreamExt::set_nonblocking","value":"fn (&self, nonblocking: bool) -> io::Result<()>","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" Moves this TCP stream into or out of nonblocking mode.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":29325,"byte_end":29335,"line_start":291,"line_end":291,"column_start":8,"column_end":18},"name":"set_linger","qualname":"::ext::TcpStreamExt::set_linger","value":"fn (&self, dur: Option<Duration>) -> io::Result<()>","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" Sets the linger duration of this socket by setting the SO_LINGER option\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":29475,"byte_end":29481,"line_start":294,"line_end":294,"column_start":8,"column_end":14},"name":"linger","qualname":"::ext::TcpStreamExt::linger","value":"fn (&self) -> io::Result<Option<Duration>>","parent":{"krate":0,"index":157},"children":[],"decl_id":null,"docs":" reads the linger duration for this socket by getting the SO_LINGER option\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":186},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":29690,"byte_end":29704,"line_start":300,"line_end":300,"column_start":11,"column_end":25},"name":"TcpListenerExt","qualname":"::ext::TcpListenerExt","value":"TcpListenerExt","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194}],"decl_id":null,"docs":" Extension methods for the standard [`TcpListener` type][link] in `std::net`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":29913,"byte_end":29920,"line_start":306,"line_end":306,"column_start":8,"column_end":15},"name":"set_ttl","qualname":"::ext::TcpListenerExt::set_ttl","value":"fn (&self, ttl: u32) -> io::Result<()>","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":30194,"byte_end":30197,"line_start":314,"line_end":314,"column_start":8,"column_end":11},"name":"ttl","qualname":"::ext::TcpListenerExt::ttl","value":"fn (&self) -> io::Result<u32>","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":30475,"byte_end":30486,"line_start":322,"line_end":322,"column_start":8,"column_end":19},"name":"set_only_v6","qualname":"::ext::TcpListenerExt::set_only_v6","value":"fn (&self, only_v6: bool) -> io::Result<()>","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":" Sets the value for the `IPV6_V6ONLY` option on this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":30778,"byte_end":30785,"line_start":330,"line_end":330,"column_start":8,"column_end":15},"name":"only_v6","qualname":"::ext::TcpListenerExt::only_v6","value":"fn (&self) -> io::Result<bool>","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_V6ONLY` option for this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":31068,"byte_end":31078,"line_start":337,"line_end":337,"column_start":8,"column_end":18},"name":"take_error","qualname":"::ext::TcpListenerExt::take_error","value":"fn (&self) -> io::Result<Option<io::Error>>","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":" Get the value of the `SO_ERROR` option on this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":31375,"byte_end":31390,"line_start":345,"line_end":345,"column_start":8,"column_end":23},"name":"set_nonblocking","qualname":"::ext::TcpListenerExt::set_nonblocking","value":"fn (&self, nonblocking: bool) -> io::Result<()>","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":" Moves this TCP listener into or out of nonblocking mode.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":31524,"byte_end":31534,"line_start":348,"line_end":348,"column_start":8,"column_end":18},"name":"set_linger","qualname":"::ext::TcpListenerExt::set_linger","value":"fn (&self, dur: Option<Duration>) -> io::Result<()>","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":" Sets the linger duration of this socket by setting the SO_LINGER option\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":31674,"byte_end":31680,"line_start":351,"line_end":351,"column_start":8,"column_end":14},"name":"linger","qualname":"::ext::TcpListenerExt::linger","value":"fn (&self) -> io::Result<Option<Duration>>","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":" reads the linger duration for this socket by getting the SO_LINGER option\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":195},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":31885,"byte_end":31897,"line_start":357,"line_end":357,"column_start":11,"column_end":23},"name":"UdpSocketExt","qualname":"::ext::UdpSocketExt","value":"UdpSocketExt","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237}],"decl_id":null,"docs":" Extension methods for the standard [`UdpSocket` type][link] in `std::net`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":32074,"byte_end":32094,"line_start":361,"line_end":361,"column_start":8,"column_end":28},"name":"set_recv_buffer_size","qualname":"::ext::UdpSocketExt::set_recv_buffer_size","value":"fn (&self, size: usize) -> io::Result<()>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Sets the value of the `SO_RCVBUF` option on this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":32354,"byte_end":32370,"line_start":368,"line_end":368,"column_start":8,"column_end":24},"name":"recv_buffer_size","qualname":"::ext::UdpSocketExt::recv_buffer_size","value":"fn (&self) -> io::Result<usize>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Gets the value of the `SO_RCVBUF` option on this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":32572,"byte_end":32592,"line_start":373,"line_end":373,"column_start":8,"column_end":28},"name":"set_send_buffer_size","qualname":"::ext::UdpSocketExt::set_send_buffer_size","value":"fn (&self, size: usize) -> io::Result<()>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Sets the value of the `SO_SNDBUF` option on this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":32842,"byte_end":32858,"line_start":380,"line_end":380,"column_start":8,"column_end":24},"name":"send_buffer_size","qualname":"::ext::UdpSocketExt::send_buffer_size","value":"fn (&self) -> io::Result<usize>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Gets the value of the `SO_SNDBUF` option on this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":33066,"byte_end":33079,"line_start":386,"line_end":386,"column_start":8,"column_end":21},"name":"set_broadcast","qualname":"::ext::UdpSocketExt::set_broadcast","value":"fn (&self, broadcast: bool) -> io::Result<()>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Sets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":33341,"byte_end":33350,"line_start":394,"line_end":394,"column_start":8,"column_end":17},"name":"broadcast","qualname":"::ext::UdpSocketExt::broadcast","value":"fn (&self) -> io::Result<bool>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Gets the value of the `SO_BROADCAST` option for this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":33612,"byte_end":33633,"line_start":400,"line_end":400,"column_start":8,"column_end":29},"name":"set_multicast_loop_v4","qualname":"::ext::UdpSocketExt::set_multicast_loop_v4","value":"fn (&self, multicast_loop_v4: bool) -> io::Result<()>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":33924,"byte_end":33941,"line_start":408,"line_end":408,"column_start":8,"column_end":25},"name":"multicast_loop_v4","qualname":"::ext::UdpSocketExt::multicast_loop_v4","value":"fn (&self) -> io::Result<bool>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":34352,"byte_end":34372,"line_start":417,"line_end":417,"column_start":8,"column_end":28},"name":"set_multicast_ttl_v4","qualname":"::ext::UdpSocketExt::set_multicast_ttl_v4","value":"fn (&self, multicast_ttl_v4: u32) -> io::Result<()>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":34658,"byte_end":34674,"line_start":425,"line_end":425,"column_start":8,"column_end":24},"name":"multicast_ttl_v4","qualname":"::ext::UdpSocketExt::multicast_ttl_v4","value":"fn (&self) -> io::Result<u32>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_TTL` option for this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":34785,"byte_end":34806,"line_start":428,"line_end":428,"column_start":8,"column_end":29},"name":"set_multicast_hops_v6","qualname":"::ext::UdpSocketExt::set_multicast_hops_v6","value":"fn (&self, hops: u32) -> io::Result<()>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_HOPS` option for this socket\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":34927,"byte_end":34944,"line_start":431,"line_end":431,"column_start":8,"column_end":25},"name":"multicast_hops_v6","qualname":"::ext::UdpSocketExt::multicast_hops_v6","value":"fn (&self) -> io::Result<u32>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_HOPS` option for this socket\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":35209,"byte_end":35230,"line_start":437,"line_end":437,"column_start":8,"column_end":29},"name":"set_multicast_loop_v6","qualname":"::ext::UdpSocketExt::set_multicast_loop_v6","value":"fn (&self, multicast_loop_v6: bool) -> io::Result<()>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":35523,"byte_end":35540,"line_start":445,"line_end":445,"column_start":8,"column_end":25},"name":"multicast_loop_v6","qualname":"::ext::UdpSocketExt::multicast_loop_v6","value":"fn (&self) -> io::Result<bool>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":35727,"byte_end":35746,"line_start":450,"line_end":450,"column_start":8,"column_end":27},"name":"set_multicast_if_v4","qualname":"::ext::UdpSocketExt::set_multicast_if_v4","value":"fn (&self, interface: &Ipv4Addr) -> io::Result<()>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Sets the value of the `IP_MULTICAST_IF` option for this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":35951,"byte_end":35966,"line_start":455,"line_end":455,"column_start":8,"column_end":23},"name":"multicast_if_v4","qualname":"::ext::UdpSocketExt::multicast_if_v4","value":"fn (&self) -> io::Result<Ipv4Addr>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Gets the value of the `IP_MULTICAST_IF` option for this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":36160,"byte_end":36179,"line_start":461,"line_end":461,"column_start":8,"column_end":27},"name":"set_multicast_if_v6","qualname":"::ext::UdpSocketExt::set_multicast_if_v6","value":"fn (&self, interface: u32) -> io::Result<()>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Sets the value of the `IPV6_MULTICAST_IF` option for this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":36380,"byte_end":36395,"line_start":466,"line_end":466,"column_start":8,"column_end":23},"name":"multicast_if_v6","qualname":"::ext::UdpSocketExt::multicast_if_v6","value":"fn (&self) -> io::Result<u32>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_MULTICAST_IF` option for this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":36630,"byte_end":36637,"line_start":473,"line_end":473,"column_start":8,"column_end":15},"name":"set_ttl","qualname":"::ext::UdpSocketExt::set_ttl","value":"fn (&self, ttl: u32) -> io::Result<()>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":36911,"byte_end":36914,"line_start":481,"line_end":481,"column_start":8,"column_end":11},"name":"ttl","qualname":"::ext::UdpSocketExt::ttl","value":"fn (&self) -> io::Result<u32>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Gets the value of the `IP_TTL` option for this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":37089,"byte_end":37108,"line_start":486,"line_end":486,"column_start":8,"column_end":27},"name":"set_unicast_hops_v6","qualname":"::ext::UdpSocketExt::set_unicast_hops_v6","value":"fn (&self, ttl: u32) -> io::Result<()>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Sets the value for the `IPV6_UNICAST_HOPS` option on this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":37292,"byte_end":37307,"line_start":491,"line_end":491,"column_start":8,"column_end":23},"name":"unicast_hops_v6","qualname":"::ext::UdpSocketExt::unicast_hops_v6","value":"fn (&self) -> io::Result<u32>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_UNICAST_HOPS` option for this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":37585,"byte_end":37596,"line_start":499,"line_end":499,"column_start":8,"column_end":19},"name":"set_only_v6","qualname":"::ext::UdpSocketExt::set_only_v6","value":"fn (&self, only_v6: bool) -> io::Result<()>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Sets the value for the `IPV6_V6ONLY` option on this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":37888,"byte_end":37895,"line_start":507,"line_end":507,"column_start":8,"column_end":15},"name":"only_v6","qualname":"::ext::UdpSocketExt::only_v6","value":"fn (&self) -> io::Result<bool>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Gets the value of the `IPV6_V6ONLY` option for this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":38355,"byte_end":38372,"line_start":516,"line_end":516,"column_start":8,"column_end":25},"name":"join_multicast_v4","qualname":"::ext::UdpSocketExt::join_multicast_v4","value":"fn (&self, multiaddr: &Ipv4Addr, interface: &Ipv4Addr) -> io::Result<()>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_ADD_MEMBERSHIP` type.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":38785,"byte_end":38802,"line_start":524,"line_end":524,"column_start":8,"column_end":25},"name":"join_multicast_v6","qualname":"::ext::UdpSocketExt::join_multicast_v6","value":"fn (&self, multiaddr: &Ipv6Addr, interface: u32) -> io::Result<()>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":39113,"byte_end":39131,"line_start":533,"line_end":533,"column_start":8,"column_end":26},"name":"leave_multicast_v4","qualname":"::ext::UdpSocketExt::leave_multicast_v4","value":"fn (&self, multiaddr: &Ipv4Addr, interface: &Ipv4Addr) -> io::Result<()>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Executes an operation of the `IP_DROP_MEMBERSHIP` type.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":39451,"byte_end":39469,"line_start":542,"line_end":542,"column_start":8,"column_end":26},"name":"leave_multicast_v6","qualname":"::ext::UdpSocketExt::leave_multicast_v6","value":"fn (&self, multiaddr: &Ipv6Addr, interface: u32) -> io::Result<()>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":39944,"byte_end":39963,"line_start":551,"line_end":551,"column_start":8,"column_end":27},"name":"set_read_timeout_ms","qualname":"::ext::UdpSocketExt::set_read_timeout_ms","value":"fn (&self, val: Option<u32>) -> io::Result<()>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Sets the `SO_RCVTIMEO` option for this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":40369,"byte_end":40385,"line_start":559,"line_end":559,"column_start":8,"column_end":24},"name":"set_read_timeout","qualname":"::ext::UdpSocketExt::set_read_timeout","value":"fn (&self, val: Option<Duration>) -> io::Result<()>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Sets the `SO_RCVTIMEO` option for this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":40656,"byte_end":40671,"line_start":566,"line_end":566,"column_start":8,"column_end":23},"name":"read_timeout_ms","qualname":"::ext::UdpSocketExt::read_timeout_ms","value":"fn (&self) -> io::Result<Option<u32>>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Gets the value of the `SO_RCVTIMEO` option for this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":40922,"byte_end":40934,"line_start":573,"line_end":573,"column_start":8,"column_end":20},"name":"read_timeout","qualname":"::ext::UdpSocketExt::read_timeout","value":"fn (&self) -> io::Result<Option<Duration>>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Gets the value of the `SO_RCVTIMEO` option for this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":41360,"byte_end":41380,"line_start":581,"line_end":581,"column_start":8,"column_end":28},"name":"set_write_timeout_ms","qualname":"::ext::UdpSocketExt::set_write_timeout_ms","value":"fn (&self, val: Option<u32>) -> io::Result<()>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Sets the `SO_SNDTIMEO` option for this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":41777,"byte_end":41794,"line_start":589,"line_end":589,"column_start":8,"column_end":25},"name":"set_write_timeout","qualname":"::ext::UdpSocketExt::set_write_timeout","value":"fn (&self, val: Option<Duration>) -> io::Result<()>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Sets the `SO_SNDTIMEO` option for this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":42067,"byte_end":42083,"line_start":596,"line_end":596,"column_start":8,"column_end":24},"name":"write_timeout_ms","qualname":"::ext::UdpSocketExt::write_timeout_ms","value":"fn (&self) -> io::Result<Option<u32>>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Gets the value of the `SO_SNDTIMEO` option for this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":42336,"byte_end":42349,"line_start":603,"line_end":603,"column_start":8,"column_end":21},"name":"write_timeout","qualname":"::ext::UdpSocketExt::write_timeout","value":"fn (&self) -> io::Result<Option<Duration>>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Gets the value of the `SO_SNDTIMEO` option for this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":42644,"byte_end":42654,"line_start":610,"line_end":610,"column_start":8,"column_end":18},"name":"take_error","qualname":"::ext::UdpSocketExt::take_error","value":"fn (&self) -> io::Result<Option<io::Error>>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Get the value of the `SO_ERROR` option on this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":42912,"byte_end":42919,"line_start":615,"line_end":615,"column_start":8,"column_end":15},"name":"connect","qualname":"::ext::UdpSocketExt::connect","value":"fn <A> (&self, addr: A) -> io::Result<()>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Connects this UDP socket to a remote address, allowing the `send` and\n `recv` syscalls to be used to send data and also applies filters to only\n receive data from the specified address.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":43207,"byte_end":43211,"line_start":621,"line_end":621,"column_start":8,"column_end":12},"name":"send","qualname":"::ext::UdpSocketExt::send","value":"fn (&self, buf: &[u8]) -> io::Result<usize>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Sends data on the socket to the remote address to which it is connected.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":43500,"byte_end":43504,"line_start":628,"line_end":628,"column_start":8,"column_end":12},"name":"recv","qualname":"::ext::UdpSocketExt::recv","value":"fn (&self, buf: &mut [u8]) -> io::Result<usize>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Receives data on the socket from the remote address to which it is\n connected.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":43803,"byte_end":43818,"line_start":636,"line_end":636,"column_start":8,"column_end":23},"name":"set_nonblocking","qualname":"::ext::UdpSocketExt::set_nonblocking","value":"fn (&self, nonblocking: bool) -> io::Result<()>","parent":{"krate":0,"index":195},"children":[],"decl_id":null,"docs":" Moves this UDP socket into or out of nonblocking mode.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":68356,"byte_end":68359,"line_start":1407,"line_end":1407,"column_start":12,"column_end":15},"name":"ttl","qualname":"<TcpBuilder>::ttl","value":"fn (&self, ttl: u32) -> io::Result<&Self>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":68724,"byte_end":68731,"line_start":1417,"line_end":1417,"column_start":12,"column_end":19},"name":"only_v6","qualname":"<TcpBuilder>::only_v6","value":"fn (&self, only_v6: bool) -> io::Result<&Self>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IPV6_V6ONLY` option on this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":69188,"byte_end":69201,"line_start":1427,"line_end":1427,"column_start":12,"column_end":25},"name":"reuse_address","qualname":"<TcpBuilder>::reuse_address","value":"fn (&self, reuse: bool) -> io::Result<&Self>","parent":null,"children":[],"decl_id":null,"docs":" Set value for the `SO_REUSEADDR` option on this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":69423,"byte_end":69440,"line_start":1433,"line_end":1433,"column_start":12,"column_end":29},"name":"get_reuse_address","qualname":"<TcpBuilder>::get_reuse_address","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Check the `SO_REUSEADDR` option on this socket.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":69806,"byte_end":69816,"line_start":1442,"line_end":1442,"column_start":12,"column_end":22},"name":"take_error","qualname":"<TcpBuilder>::take_error","value":"fn (&self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `SO_ERROR` option on this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":70537,"byte_end":70540,"line_start":1463,"line_end":1463,"column_start":12,"column_end":15},"name":"ttl","qualname":"<UdpBuilder>::ttl","value":"fn (&self, ttl: u32) -> io::Result<&Self>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IP_TTL` option on this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":70891,"byte_end":70898,"line_start":1473,"line_end":1473,"column_start":12,"column_end":19},"name":"only_v6","qualname":"<UdpBuilder>::only_v6","value":"fn (&self, only_v6: bool) -> io::Result<&Self>","parent":null,"children":[],"decl_id":null,"docs":" Sets the value for the `IPV6_V6ONLY` option on this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":71277,"byte_end":71290,"line_start":1483,"line_end":1483,"column_start":12,"column_end":25},"name":"reuse_address","qualname":"<UdpBuilder>::reuse_address","value":"fn (&self, reuse: bool) -> io::Result<&Self>","parent":null,"children":[],"decl_id":null,"docs":" Set value for the `SO_REUSEADDR` option on this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":71512,"byte_end":71529,"line_start":1489,"line_end":1489,"column_start":12,"column_end":29},"name":"get_reuse_address","qualname":"<UdpBuilder>::get_reuse_address","value":"fn (&self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Check the `SO_REUSEADDR` option on this socket.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":71895,"byte_end":71905,"line_start":1498,"line_end":1498,"column_start":12,"column_end":22},"name":"take_error","qualname":"<UdpBuilder>::take_error","value":"fn (&self) -> io::Result<Option<io::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of the `SO_ERROR` option on this socket.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":440},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/unix.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"unix","qualname":"::unix","value":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/unix.rs","parent":null,"children":[{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":445},{"krate":0,"index":448},{"krate":0,"index":451},{"krate":0,"index":454},{"krate":0,"index":458},{"krate":0,"index":461}],"decl_id":null,"docs":" Unix-specific extensions to the `std::net` types.\n","sig":null,"attributes":[{"value":"cfg(all(unix, not(any(target_os = \"solaris\"))))","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/lib.rs","byte_start":2109,"byte_end":2159,"line_start":66,"line_end":66,"column_start":1,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":451},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/unix.rs","byte_start":77931,"byte_end":77948,"line_start":10,"line_end":10,"column_start":11,"column_end":28},"name":"UnixTcpBuilderExt","qualname":"::unix::UnixTcpBuilderExt","value":"UnixTcpBuilderExt","parent":null,"children":[{"krate":0,"index":452},{"krate":0,"index":453}],"decl_id":null,"docs":" Unix-specific extensions for the `TcpBuilder` type in this library.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/unix.rs","byte_start":78243,"byte_end":78253,"line_start":16,"line_end":16,"column_start":8,"column_end":18},"name":"reuse_port","qualname":"::unix::UnixTcpBuilderExt::reuse_port","value":"fn (&self, reuse: bool) -> io::Result<&Self>","parent":{"krate":0,"index":451},"children":[],"decl_id":null,"docs":" Set value for the `SO_REUSEPORT` option on this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/unix.rs","byte_start":78373,"byte_end":78387,"line_start":19,"line_end":19,"column_start":8,"column_end":22},"name":"get_reuse_port","qualname":"::unix::UnixTcpBuilderExt::get_reuse_port","value":"fn (&self) -> io::Result<bool>","parent":{"krate":0,"index":451},"children":[],"decl_id":null,"docs":" Check the value of the `SO_REUSEPORT` option on this socket.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":458},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/unix.rs","byte_start":78890,"byte_end":78907,"line_start":35,"line_end":35,"column_start":11,"column_end":28},"name":"UnixUdpBuilderExt","qualname":"::unix::UnixUdpBuilderExt","value":"UnixUdpBuilderExt","parent":null,"children":[{"krate":0,"index":459},{"krate":0,"index":460}],"decl_id":null,"docs":" Unix-specific extensions for the `UdpBuilder` type in this library.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/unix.rs","byte_start":79202,"byte_end":79212,"line_start":41,"line_end":41,"column_start":8,"column_end":18},"name":"reuse_port","qualname":"::unix::UnixUdpBuilderExt::reuse_port","value":"fn (&self, reuse: bool) -> io::Result<&Self>","parent":{"krate":0,"index":458},"children":[],"decl_id":null,"docs":" Set value for the `SO_REUSEPORT` option on this socket.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/unix.rs","byte_start":79332,"byte_end":79346,"line_start":44,"line_end":44,"column_start":8,"column_end":22},"name":"get_reuse_port","qualname":"::unix::UnixUdpBuilderExt::get_reuse_port","value":"fn (&self) -> io::Result<bool>","parent":{"krate":0,"index":458},"children":[],"decl_id":null,"docs":" Check the value of the `SO_REUSEPORT` option on this socket.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":480},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/lib.rs","byte_start":3290,"byte_end":3295,"line_start":110,"line_end":110,"column_start":10,"column_end":15},"name":"Inner","qualname":"::AsInner::Inner","value":"type Inner;","parent":{"krate":0,"index":479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":483},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/lib.rs","byte_start":3367,"byte_end":3372,"line_start":115,"line_end":115,"column_start":10,"column_end":15},"name":"Inner","qualname":"::FromInner::Inner","value":"type Inner;","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":486},"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/lib.rs","byte_start":3451,"byte_end":3456,"line_start":120,"line_end":120,"column_start":10,"column_end":15},"name":"Inner","qualname":"::IntoInner::Inner","value":"type Inner;","parent":{"krate":0,"index":485},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/tcp.rs","byte_start":4367,"byte_end":4377,"line_start":27,"line_end":27,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/tcp.rs","byte_start":8916,"byte_end":8926,"line_start":144,"line_end":144,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/tcp.rs","byte_start":9122,"byte_end":9132,"line_start":151,"line_end":151,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/tcp.rs","byte_start":9269,"byte_end":9279,"line_start":156,"line_end":156,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/udp.rs","byte_start":10237,"byte_end":10247,"line_start":27,"line_end":27,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/udp.rs","byte_start":11883,"byte_end":11893,"line_start":71,"line_end":71,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/udp.rs","byte_start":12089,"byte_end":12099,"line_start":78,"line_end":78,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/udp.rs","byte_start":12236,"byte_end":12246,"line_start":83,"line_end":83,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/socket.rs","byte_start":13165,"byte_end":13171,"line_start":29,"line_end":29,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":113},{"krate":0,"index":115},{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/socket.rs","byte_start":14371,"byte_end":14377,"line_start":66,"line_end":66,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/socket.rs","byte_start":14499,"byte_end":14505,"line_start":72,"line_end":72,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/socket.rs","byte_start":14617,"byte_end":14623,"line_start":77,"line_end":77,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/socket.rs","byte_start":14766,"byte_end":14772,"line_start":84,"line_end":84,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":44093,"byte_end":44094,"line_start":649,"line_end":649,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":44759,"byte_end":44768,"line_start":671,"line_end":671,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":53839,"byte_end":53848,"line_start":970,"line_end":970,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":332},{"krate":0,"index":334},{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":67031,"byte_end":67042,"line_start":1366,"line_end":1366,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":68133,"byte_end":68143,"line_start":1401,"line_end":1401,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":360},{"krate":0,"index":362},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":70314,"byte_end":70324,"line_start":1457,"line_end":1457,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":369},{"krate":0,"index":371},{"krate":0,"index":373},{"krate":0,"index":375},{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/sys/unix/impls.rs","byte_start":76948,"byte_end":76958,"line_start":18,"line_end":18,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/sys/unix/impls.rs","byte_start":77145,"byte_end":77155,"line_start":25,"line_end":25,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/sys/unix/impls.rs","byte_start":77332,"byte_end":77342,"line_start":32,"line_end":32,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/sys/unix/impls.rs","byte_start":77529,"byte_end":77539,"line_start":39,"line_end":39,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/sys/unix/mod.rs","byte_start":74242,"byte_end":74248,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/sys/unix/mod.rs","byte_start":76084,"byte_end":76090,"line_start":91,"line_end":91,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":436},{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/sys/unix/mod.rs","byte_start":76207,"byte_end":76213,"line_start":98,"line_end":98,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/unix.rs","byte_start":78446,"byte_end":78456,"line_start":22,"line_end":22,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":455},{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/unix.rs","byte_start":79405,"byte_end":79415,"line_start":47,"line_end":47,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":462},{"krate":0,"index":464}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/lib.rs","byte_start":2168,"byte_end":2172,"line_start":66,"line_end":66,"column_start":60,"column_end":64},"ref_id":{"krate":0,"index":440}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/tcp.rs","byte_start":4367,"byte_end":4377,"line_start":27,"line_end":27,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":34},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/tcp.rs","byte_start":8916,"byte_end":8926,"line_start":144,"line_end":144,"column_start":21,"column_end":31},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":34},"to":{"krate":2,"index":6824}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/tcp.rs","byte_start":9122,"byte_end":9132,"line_start":151,"line_end":151,"column_start":20,"column_end":30},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":34},"to":{"krate":0,"index":479}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/tcp.rs","byte_start":9269,"byte_end":9279,"line_start":156,"line_end":156,"column_start":22,"column_end":32},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":34},"to":{"krate":0,"index":482}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/udp.rs","byte_start":10237,"byte_end":10247,"line_start":27,"line_end":27,"column_start":6,"column_end":16},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":77},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/udp.rs","byte_start":11883,"byte_end":11893,"line_start":71,"line_end":71,"column_start":21,"column_end":31},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":77},"to":{"krate":2,"index":6824}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/udp.rs","byte_start":12089,"byte_end":12099,"line_start":78,"line_end":78,"column_start":20,"column_end":30},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":77},"to":{"krate":0,"index":479}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/udp.rs","byte_start":12236,"byte_end":12246,"line_start":83,"line_end":83,"column_start":22,"column_end":32},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":77},"to":{"krate":0,"index":482}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/socket.rs","byte_start":13165,"byte_end":13171,"line_start":29,"line_end":29,"column_start":6,"column_end":12},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/socket.rs","byte_start":14371,"byte_end":14377,"line_start":66,"line_end":66,"column_start":21,"column_end":27},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":107},"to":{"krate":2,"index":6824}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/socket.rs","byte_start":14499,"byte_end":14505,"line_start":72,"line_end":72,"column_start":20,"column_end":26},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":107},"to":{"krate":0,"index":479}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/socket.rs","byte_start":14617,"byte_end":14623,"line_start":77,"line_end":77,"column_start":22,"column_end":28},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":107},"to":{"krate":0,"index":482}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/socket.rs","byte_start":14766,"byte_end":14772,"line_start":84,"line_end":84,"column_start":22,"column_end":28},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":107},"to":{"krate":0,"index":485}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":44093,"byte_end":44094,"line_start":649,"line_end":649,"column_start":29,"column_end":30},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":241},"to":{"krate":0,"index":238}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":44759,"byte_end":44768,"line_start":671,"line_end":671,"column_start":23,"column_end":32},"kind":{"Impl":{"id":14}},"from":{"krate":1,"index":3219},"to":{"krate":0,"index":157}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":53839,"byte_end":53848,"line_start":970,"line_end":970,"column_start":23,"column_end":32},"kind":{"Impl":{"id":15}},"from":{"krate":1,"index":3312},"to":{"krate":0,"index":195}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":67031,"byte_end":67042,"line_start":1366,"line_end":1366,"column_start":25,"column_end":36},"kind":{"Impl":{"id":16}},"from":{"krate":1,"index":3222},"to":{"krate":0,"index":186}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":68133,"byte_end":68143,"line_start":1401,"line_end":1401,"column_start":6,"column_end":16},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":34},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/ext.rs","byte_start":70314,"byte_end":70324,"line_start":1457,"line_end":1457,"column_start":6,"column_end":16},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":77},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/sys/unix/impls.rs","byte_start":76948,"byte_end":76958,"line_start":18,"line_end":18,"column_start":20,"column_end":30},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":34},"to":{"krate":1,"index":7941}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/sys/unix/impls.rs","byte_start":77145,"byte_end":77155,"line_start":25,"line_end":25,"column_start":18,"column_end":28},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":34},"to":{"krate":1,"index":7939}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/sys/unix/impls.rs","byte_start":77332,"byte_end":77342,"line_start":32,"line_end":32,"column_start":20,"column_end":30},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":77},"to":{"krate":1,"index":7941}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/sys/unix/impls.rs","byte_start":77529,"byte_end":77539,"line_start":39,"line_end":39,"column_start":18,"column_end":28},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":77},"to":{"krate":1,"index":7939}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/sys/unix/mod.rs","byte_start":74242,"byte_end":74248,"line_start":38,"line_end":38,"column_start":6,"column_end":12},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":426},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/sys/unix/mod.rs","byte_start":76084,"byte_end":76090,"line_start":91,"line_end":91,"column_start":22,"column_end":28},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":426},"to":{"krate":0,"index":482}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/sys/unix/mod.rs","byte_start":76207,"byte_end":76213,"line_start":98,"line_end":98,"column_start":15,"column_end":21},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":426},"to":{"krate":2,"index":1623}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/unix.rs","byte_start":78446,"byte_end":78456,"line_start":22,"line_end":22,"column_start":28,"column_end":38},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":34},"to":{"krate":0,"index":451}},{"span":{"file_name":"/home/endre/.cargo/registry/src/github.com-1ecc6299db9ec823/net2-0.2.33/src/unix.rs","byte_start":79405,"byte_end":79415,"line_start":47,"line_end":47,"column_start":28,"column_end":38},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":77},"to":{"krate":0,"index":458}}]}